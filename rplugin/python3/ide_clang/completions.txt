parsed in 0:00:00.626573
completed in 0:00:00.423658
{'menu': 'argc', 'abbr': 'int', 'word': 'argc', 'kind': 's'}
{'menu': 'argv', 'abbr': 'const char **', 'word': 'argv', 'kind': 's'}
{'menu': 'vfprintf(FILE *, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vfprintf(<#FILE *#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'setiopolicy_np(int, int, int)', 'abbr': 'int', 'word': 'setiopolicy_np(<#int#>, <#int#>, <#int#>)', 'kind': 'f'}
{'menu': '_Exit(int)', 'abbr': 'void', 'word': '_Exit(<#int#>)', 'kind': 'f'}
{'menu': 'nanosleep(const struct timespec *, struct timespec *)', 'abbr': 'int', 'word': 'nanosleep(<#const struct timespec *#>, <#struct timespec *#>)', 'kind': 'f'}
{'menu': 'towctrans(wint_t, wctrans_t)', 'abbr': 'wint_t', 'word': 'towctrans(<#wint_t#>, <#wctrans_t#>)', 'kind': 'f'}
{'menu': 'pthread_attr_setdetachstate(pthread_attr_t *, int)', 'abbr': 'int', 'word': 'pthread_attr_setdetachstate(<#pthread_attr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'fputws_l(const wchar_t *, FILE *, locale_t)', 'abbr': 'int', 'word': 'fputws_l(<#const wchar_t *#>, <#FILE *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'FILE', 'abbr': 'typedef', 'word': 'FILE', 'kind': 't'}
{'menu': 'isspecial(int _c)', 'abbr': 'int', 'word': 'isspecial(<#int _c#>)', 'kind': 'f'}
{'menu': 'wcsstr(const wchar_t *, const wchar_t *)', 'abbr': 'wchar_t *', 'word': 'wcsstr(<#const wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'wctomb(char *, wchar_t)', 'abbr': 'int', 'word': 'wctomb(<#char *#>, <#wchar_t#>)', 'kind': 'f'}
{'menu': 'isprint_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isprint_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'wint_t', 'abbr': 'typedef', 'word': 'wint_t', 'kind': 't'}
{'menu': 'isrune(int _c)', 'abbr': 'int', 'word': 'isrune(<#int _c#>)', 'kind': 'f'}
{'menu': 'cgetstr(char *, const char *, char **)', 'abbr': 'int', 'word': 'cgetstr(<#char *#>, <#const char *#>, <#char **#>)', 'kind': 'f'}
{'menu': 'wctype_t', 'abbr': 'typedef', 'word': 'wctype_t', 'kind': 't'}
{'menu': 'sigaction', 'abbr': 'struct', 'word': 'sigaction', 'kind': 't'}
{'menu': 'nextwctype(wint_t, wctype_t)', 'abbr': 'wint_t', 'word': 'nextwctype(<#wint_t#>, <#wctype_t#>)', 'kind': 'f'}
{'menu': 'isphonogram_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isphonogram_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'getline(char **, size_t *, FILE *)', 'abbr': 'ssize_t', 'word': 'getline(<#char **#>, <#size_t *#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'operator new(std::size_t __sz)', 'abbr': 'void *', 'word': 'operator new(<#std::size_t __sz#>)', 'kind': 'f'}
{'menu': 'psort(void *, size_t, size_t, int (*)(const void *, const void *))', 'abbr': 'void', 'word': 'psort(<#void *#>, <#size_t#>, <#size_t#>, <#int (*)(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'iswalnum(wint_t _wc)', 'abbr': 'int', 'word': 'iswalnum(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'memset_pattern4(void *, const void *, size_t)', 'abbr': 'void', 'word': 'memset_pattern4(<#void *#>, <#const void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_cond_timedwait(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)', 'abbr': 'int', 'word': 'pthread_cond_timedwait(<#pthread_cond_t *#>, <#pthread_mutex_t *#>, <#const struct timespec *#>)', 'kind': 'f'}
{'menu': 'wcstombs(char *, const wchar_t *, size_t)', 'abbr': 'size_t', 'word': 'wcstombs(<#char *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'clearerr(FILE *)', 'abbr': 'void', 'word': 'clearerr(<#FILE *#>)', 'kind': 'f'}
{'menu': 'iswcntrl(wint_t _wc)', 'abbr': 'int', 'word': 'iswcntrl(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'wcsrtombs(char *, const wchar_t **, size_t, mbstate_t *)', 'abbr': 'size_t', 'word': 'wcsrtombs(<#char *#>, <#const wchar_t **#>, <#size_t#>, <#mbstate_t *#>)', 'kind': 'f'}
{'menu': 'timegm(struct tm *const)', 'abbr': 'time_t', 'word': 'timegm(<#struct tm *const#>)', 'kind': 'f'}
{'menu': 'cgetset(const char *)', 'abbr': 'int', 'word': 'cgetset(<#const char *#>)', 'kind': 'f'}
{'menu': 'sys_nerr', 'abbr': 'const int', 'word': 'sys_nerr', 'kind': 'v'}
{'menu': 'isnumber_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isnumber_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'iswalpha(wint_t _wc)', 'abbr': 'int', 'word': 'iswalpha(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'pthread_attr_getstacksize(const pthread_attr_t *, size_t *)', 'abbr': 'int', 'word': 'pthread_attr_getstacksize(<#const pthread_attr_t *#>, <#size_t *#>)', 'kind': 'f'}
{'menu': 'fputwc_l(wchar_t, FILE *, locale_t)', 'abbr': 'wint_t', 'word': 'fputwc_l(<#wchar_t#>, <#FILE *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'cgetnum(char *, const char *, long *)', 'abbr': 'int', 'word': 'cgetnum(<#char *#>, <#const char *#>, <#long *#>)', 'kind': 'f'}
{'menu': 'drand48()', 'abbr': 'double', 'word': 'drand48()', 'kind': 'f'}
{'menu': 'ungetc(int, FILE *)', 'abbr': 'int', 'word': 'ungetc(<#int#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'wcsspn(const wchar_t *, const wchar_t *)', 'abbr': 'size_t', 'word': 'wcsspn(<#const wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'sys_errlist', 'abbr': 'const char *const []', 'word': 'sys_errlist', 'kind': 'v'}
{'menu': 'iswctype(wint_t _wc, wctype_t _charclass)', 'abbr': 'int', 'word': 'iswctype(<#wint_t _wc#>, <#wctype_t _charclass#>)', 'kind': 'f'}
{'menu': 'wctrans(const char *)', 'abbr': 'wctrans_t', 'word': 'wctrans(<#const char *#>)', 'kind': 'f'}
{'menu': 'a64l(const char *)', 'abbr': 'long', 'word': 'a64l(<#const char *#>)', 'kind': 'f'}
{'menu': 'fgetws_l(wchar_t *, int, FILE *, locale_t)', 'abbr': 'wchar_t *', 'word': 'fgetws_l(<#wchar_t *#>, <#int#>, <#FILE *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'psort_b(void *, size_t, size_t, ^int(const void *, const void *))', 'abbr': 'void', 'word': 'psort_b(<#void *#>, <#size_t#>, <#size_t#>, <#^int(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'islower_l(int c, locale_t l)', 'abbr': 'int', 'word': 'islower_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'memmem(const void *, size_t, const void *, size_t)', 'abbr': 'void *', 'word': 'memmem(<#const void *#>, <#size_t#>, <#const void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_attr_init(pthread_attr_t *)', 'abbr': 'int', 'word': 'pthread_attr_init(<#pthread_attr_t *#>)', 'kind': 'f'}
{'menu': 'asprintf(char **, const char *, ...)', 'abbr': 'int', 'word': 'asprintf(<#char **#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'iswnumber(wint_t _wc)', 'abbr': 'int', 'word': 'iswnumber(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'isblank_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isblank_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'erand48(unsigned short *)', 'abbr': 'double', 'word': 'erand48(<#unsigned short *#>)', 'kind': 'f'}
{'menu': 'pthread_attr_getstackaddr(const pthread_attr_t *, void **)', 'abbr': 'int', 'word': 'pthread_attr_getstackaddr(<#const pthread_attr_t *#>, <#void **#>)', 'kind': 'f'}
{'menu': 'getwchar_l(locale_t)', 'abbr': 'wint_t', 'word': 'getwchar_l(<#locale_t#>)', 'kind': 'f'}
{'menu': 'sigstack', 'abbr': 'struct', 'word': 'sigstack', 'kind': 't'}
{'menu': 'time2posix(time_t)', 'abbr': 'time_t', 'word': 'time2posix(<#time_t#>)', 'kind': 'f'}
{'menu': 'iswdigit(wint_t _wc)', 'abbr': 'int', 'word': 'iswdigit(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'ctermid_r(char *)', 'abbr': 'char *', 'word': 'ctermid_r(<#char *#>)', 'kind': 'f'}
{'menu': 'iswphonogram(wint_t _wc)', 'abbr': 'int', 'word': 'iswphonogram(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'feof(FILE *)', 'abbr': 'int', 'word': 'feof(<#FILE *#>)', 'kind': 'f'}
{'menu': 'isideogram_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isideogram_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'iscntrl_l(int c, locale_t l)', 'abbr': 'int', 'word': 'iscntrl_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'timelocal(struct tm *const)', 'abbr': 'time_t', 'word': 'timelocal(<#struct tm *const#>)', 'kind': 'f'}
{'menu': 'iswlower(wint_t _wc)', 'abbr': 'int', 'word': 'iswlower(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'isgraph_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isgraph_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'int8_t', 'abbr': 'typedef', 'word': 'int8_t', 'kind': 't'}
{'menu': 'isalpha_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isalpha_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'fclose(FILE *)', 'abbr': 'int', 'word': 'fclose(<#FILE *#>)', 'kind': 'f'}
{'menu': 'ecvt(double, int, int *, int *)', 'abbr': 'char *', 'word': 'ecvt(<#double#>, <#int#>, <#int *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'tmpnam(char *)', 'abbr': 'char *', 'word': 'tmpnam(<#char *#>)', 'kind': 'f'}
{'menu': 'fgetln(FILE *, size_t *)', 'abbr': 'char *', 'word': 'fgetln(<#FILE *#>, <#size_t *#>)', 'kind': 'f'}
{'menu': 'iswgraph(wint_t _wc)', 'abbr': 'int', 'word': 'iswgraph(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'memset_s(void *, rsize_t, int, rsize_t)', 'abbr': 'errno_t', 'word': 'memset_s(<#void *#>, <#rsize_t#>, <#int#>, <#rsize_t#>)', 'kind': 'f'}
{'menu': 'wcstok(wchar_t *, const wchar_t *, wchar_t **)', 'abbr': 'wchar_t *', 'word': 'wcstok(<#wchar_t *#>, <#const wchar_t *#>, <#wchar_t **#>)', 'kind': 'f'}
{'menu': 'ishexnumber_l(int c, locale_t l)', 'abbr': 'int', 'word': 'ishexnumber_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'getwc_l(FILE *, locale_t)', 'abbr': 'wint_t', 'word': 'getwc_l(<#FILE *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'sig_t', 'abbr': 'typedef', 'word': 'sig_t', 'kind': 't'}
{'menu': 'localtime_r(const time_t *, struct tm *)', 'abbr': 'struct tm *', 'word': 'localtime_r(<#const time_t *#>, <#struct tm *#>)', 'kind': 'f'}
{'menu': 'wctob(wint_t)', 'abbr': 'int', 'word': 'wctob(<#wint_t#>)', 'kind': 'f'}
{'menu': 'rsize_t', 'abbr': 'typedef', 'word': 'rsize_t', 'kind': 't'}
{'menu': 'uint16_t', 'abbr': 'typedef', 'word': 'uint16_t', 'kind': 't'}
{'menu': 'daemon(int, int)', 'abbr': 'int', 'word': 'daemon(<#int#>, <#int#>)', 'kind': 'f'}
{'menu': 'strsignal(int sig)', 'abbr': 'char *', 'word': 'strsignal(<#int sig#>)', 'kind': 'f'}
{'menu': 'uint8_t', 'abbr': 'typedef', 'word': 'uint8_t', 'kind': 't'}
{'menu': 'iswprint(wint_t _wc)', 'abbr': 'int', 'word': 'iswprint(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'int64_t', 'abbr': 'typedef', 'word': 'int64_t', 'kind': 't'}
{'menu': 'sscanf(const char *, const char *, ...)', 'abbr': 'int', 'word': 'sscanf(<#const char *#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'int32_t', 'abbr': 'typedef', 'word': 'int32_t', 'kind': 't'}
{'menu': 'fmtcheck(const char *, const char *)', 'abbr': 'const char *', 'word': 'fmtcheck(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'char16_t', 'abbr': 'typedef', 'word': 'char16_t', 'kind': 't'}
{'menu': 'int16_t', 'abbr': 'typedef', 'word': 'int16_t', 'kind': 't'}
{'menu': 'fwscanf_l(FILE *, locale_t, const wchar_t *, ...)', 'abbr': 'int', 'word': 'fwscanf_l(<#FILE *#>, <#locale_t#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'wcsxfrm(wchar_t *, const wchar_t *, size_t)', 'abbr': 'size_t', 'word': 'wcsxfrm(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'posix2time(time_t)', 'abbr': 'time_t', 'word': 'posix2time(<#time_t#>)', 'kind': 'f'}
{'menu': 'wcstod(const wchar_t *, wchar_t **)', 'abbr': 'double', 'word': 'wcstod(<#const wchar_t *#>, <#wchar_t **#>)', 'kind': 'f'}
{'menu': 'int_least32_t', 'abbr': 'typedef', 'word': 'int_least32_t', 'kind': 't'}
{'menu': 'fwprintf_l(FILE *, locale_t, const wchar_t *, ...)', 'abbr': 'int', 'word': 'fwprintf_l(<#FILE *#>, <#locale_t#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'int_least16_t', 'abbr': 'typedef', 'word': 'int_least16_t', 'kind': 't'}
{'menu': 'iswrune(wint_t _wc)', 'abbr': 'int', 'word': 'iswrune(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'sigvec', 'abbr': 'struct', 'word': 'sigvec', 'kind': 't'}
{'menu': 'int_least8_t', 'abbr': 'typedef', 'word': 'int_least8_t', 'kind': 't'}
{'menu': 'tmpfile()', 'abbr': 'FILE *', 'word': 'tmpfile()', 'kind': 'f'}
{'menu': 'fpurge(FILE *)', 'abbr': 'int', 'word': 'fpurge(<#FILE *#>)', 'kind': 'f'}
{'menu': 'tzsetwall()', 'abbr': 'void', 'word': 'tzsetwall()', 'kind': 'f'}
{'menu': 'uint64_t', 'abbr': 'typedef', 'word': 'uint64_t', 'kind': 't'}
{'menu': 'isdigit_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isdigit_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'iswpunct(wint_t _wc)', 'abbr': 'int', 'word': 'iswpunct(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'cgetustr(char *, const char *, char **)', 'abbr': 'int', 'word': 'cgetustr(<#char *#>, <#const char *#>, <#char **#>)', 'kind': 'f'}
{'menu': 'errno_t', 'abbr': 'typedef', 'word': 'errno_t', 'kind': 't'}
{'menu': 'uint32_t', 'abbr': 'typedef', 'word': 'uint32_t', 'kind': 't'}
{'menu': 'iswspecial(wint_t _wc)', 'abbr': 'int', 'word': 'iswspecial(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'mergesort_b(void *, size_t, size_t, ^int(const void *, const void *))', 'abbr': 'int', 'word': 'mergesort_b(<#void *#>, <#size_t#>, <#size_t#>, <#^int(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'pthread_attr_getstack(const pthread_attr_t *, void **, size_t *)', 'abbr': 'int', 'word': 'pthread_attr_getstack(<#const pthread_attr_t *#>, <#void **#>, <#size_t *#>)', 'kind': 'f'}
{'menu': 'wcsncat(wchar_t *, const wchar_t *, size_t)', 'abbr': 'wchar_t *', 'word': 'wcsncat(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'isspace(int _c)', 'abbr': 'int', 'word': 'isspace(<#int _c#>)', 'kind': 'f'}
{'menu': 'cgetclose()', 'abbr': 'int', 'word': 'cgetclose()', 'kind': 'f'}
{'menu': 'strxfrm_l(char *, const char *, size_t, locale_t)', 'abbr': 'size_t', 'word': 'strxfrm_l(<#char *#>, <#const char *#>, <#size_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'setvbuf(FILE *, char *, int, size_t)', 'abbr': 'int', 'word': 'setvbuf(<#FILE *#>, <#char *#>, <#int#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'ispunct(int _c)', 'abbr': 'int', 'word': 'ispunct(<#int _c#>)', 'kind': 'f'}
{'menu': 'cgetcap(char *, const char *, int)', 'abbr': 'char *', 'word': 'cgetcap(<#char *#>, <#const char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'setbuffer(FILE *, char *, int)', 'abbr': 'void', 'word': 'setbuffer(<#FILE *#>, <#char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'pthread_rwlockattr_destroy(pthread_rwlockattr_t *)', 'abbr': 'int', 'word': 'pthread_rwlockattr_destroy(<#pthread_rwlockattr_t *#>)', 'kind': 'f'}
{'menu': 'strptime_l(const char *, const char *, struct tm *, locale_t)', 'abbr': 'char *', 'word': 'strptime_l(<#const char *#>, <#const char *#>, <#struct tm *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_attr_getschedpolicy(const pthread_attr_t *, int *)', 'abbr': 'int', 'word': 'pthread_attr_getschedpolicy(<#const pthread_attr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'strtold(const char *, char **)', 'abbr': 'long double', 'word': 'strtold(<#const char *#>, <#char **#>)', 'kind': 'f'}
{'menu': 'iswalnum_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswalnum_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'toupper_l(int c, locale_t l)', 'abbr': 'int', 'word': 'toupper_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'strnlen(const char *, size_t)', 'abbr': 'size_t', 'word': 'strnlen(<#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_attr_getscope(const pthread_attr_t *, int *)', 'abbr': 'int', 'word': 'pthread_attr_getscope(<#const pthread_attr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'pthread_rwlock_unlock(pthread_rwlock_t *)', 'abbr': 'int', 'word': 'pthread_rwlock_unlock(<#pthread_rwlock_t *#>)', 'kind': 'f'}
{'menu': 'isxdigit(int _c)', 'abbr': 'int', 'word': 'isxdigit(<#int _c#>)', 'kind': 'f'}
{'menu': 'wcsncmp(const wchar_t *, const wchar_t *, size_t)', 'abbr': 'int', 'word': 'wcsncmp(<#const wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_condattr_setpshared(pthread_condattr_t *, int)', 'abbr': 'int', 'word': 'pthread_condattr_setpshared(<#pthread_condattr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'strtol(const char *, char **, int)', 'abbr': 'long', 'word': 'strtol(<#const char *#>, <#char **#>, <#int#>)', 'kind': 'f'}
{'menu': 'sprintf(char *, const char *, ...)', 'abbr': 'int', 'word': 'sprintf(<#char *#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'isupper(int _c)', 'abbr': 'int', 'word': 'isupper(<#int _c#>)', 'kind': 'f'}
{'menu': 'setlinebuf(FILE *)', 'abbr': 'int', 'word': 'setlinebuf(<#FILE *#>)', 'kind': 'f'}
{'menu': 'toascii(int _c)', 'abbr': 'int', 'word': 'toascii(<#int _c#>)', 'kind': 'f'}
{'menu': 'pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *, int *)', 'abbr': 'int', 'word': 'pthread_rwlockattr_getpshared(<#const pthread_rwlockattr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'strtoul(const char *, char **, int)', 'abbr': 'unsigned long', 'word': 'strtoul(<#const char *#>, <#char **#>, <#int#>)', 'kind': 'f'}
{'menu': 'vasprintf(char **, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vasprintf(<#char **#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'strftime_l(char *, size_t, const char *, const struct tm *, locale_t)', 'abbr': 'size_t', 'word': 'strftime_l(<#char *#>, <#size_t#>, <#const char *#>, <#const struct tm *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'ptrdiff_t', 'abbr': 'typedef', 'word': 'ptrdiff_t', 'kind': 't'}
{'menu': 'wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *)', 'abbr': 'size_t', 'word': 'wcsftime(<#wchar_t *#>, <#size_t#>, <#const wchar_t *#>, <#const struct tm *#>)', 'kind': 'f'}
{'menu': 'setbuf(FILE *, char *)', 'abbr': 'void', 'word': 'setbuf(<#FILE *#>, <#char *#>)', 'kind': 'f'}
{'menu': 'bsearch_b(const void *, const void *, size_t, size_t, ^int(const void *, const void *))', 'abbr': 'void *', 'word': 'bsearch_b(<#const void *#>, <#const void *#>, <#size_t#>, <#size_t#>, <#^int(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'tolower_l(int c, locale_t l)', 'abbr': 'int', 'word': 'tolower_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'toupper(int _c)', 'abbr': 'int', 'word': 'toupper(<#int _c#>)', 'kind': 'f'}
{'menu': 'wcslen(const wchar_t *)', 'abbr': 'size_t', 'word': 'wcslen(<#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'tolower(int _c)', 'abbr': 'int', 'word': 'tolower(<#int _c#>)', 'kind': 'f'}
{'menu': 'pthread_attr_getschedparam(const pthread_attr_t *, struct sched_param *)', 'abbr': 'int', 'word': 'pthread_attr_getschedparam(<#const pthread_attr_t *#>, <#struct sched_param *#>)', 'kind': 'f'}
{'menu': 'isxdigit_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isxdigit_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'pthread_condattr_getpshared(const pthread_condattr_t *, int *)', 'abbr': 'int', 'word': 'pthread_condattr_getpshared(<#const pthread_condattr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'strtoll(const char *, char **, int)', 'abbr': 'long long', 'word': 'strtoll(<#const char *#>, <#char **#>, <#int#>)', 'kind': 'f'}
{'menu': 'pthread_condattr_init(pthread_condattr_t *)', 'abbr': 'int', 'word': 'pthread_condattr_init(<#pthread_condattr_t *#>)', 'kind': 'f'}
{'menu': 'system(const char *)', 'abbr': 'int', 'word': 'system(<#const char *#>)', 'kind': 'f'}
{'menu': 'cgetnext(char **, char **)', 'abbr': 'int', 'word': 'cgetnext(<#char **#>, <#char **#>)', 'kind': 'f'}
{'menu': 'rewind(FILE *)', 'abbr': 'void', 'word': 'rewind(<#FILE *#>)', 'kind': 'f'}
{'menu': '_RuneRange', 'abbr': 'typedef', 'word': '_RuneRange', 'kind': 't'}
{'menu': 'wcspbrk(const wchar_t *, const wchar_t *)', 'abbr': 'wchar_t *', 'word': 'wcspbrk(<#const wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'pthread_attr_getguardsize(const pthread_attr_t *, size_t *)', 'abbr': 'int', 'word': 'pthread_attr_getguardsize(<#const pthread_attr_t *#>, <#size_t *#>)', 'kind': 'f'}
{'menu': 'isupper_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isupper_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'zopen(const char *, const char *, int)', 'abbr': 'FILE *', 'word': 'zopen(<#const char *#>, <#const char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'strtoull(const char *, char **, int)', 'abbr': 'unsigned long long', 'word': 'strtoull(<#const char *#>, <#char **#>, <#int#>)', 'kind': 'f'}
{'menu': 'digittoint(int _c)', 'abbr': 'int', 'word': 'digittoint(<#int _c#>)', 'kind': 'f'}
{'menu': 'scanf(const char *, ...)', 'abbr': 'int', 'word': 'scanf(<#const char *, ...#>)', 'kind': 'f'}
{'menu': 'pthread_condattr_destroy(pthread_condattr_t *)', 'abbr': 'int', 'word': 'pthread_condattr_destroy(<#pthread_condattr_t *#>)', 'kind': 'f'}
{'menu': 'isspace_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isspace_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'fgetwc_l(FILE *, locale_t)', 'abbr': 'wint_t', 'word': 'fgetwc_l(<#FILE *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'isideogram(int _c)', 'abbr': 'int', 'word': 'isideogram(<#int _c#>)', 'kind': 'f'}
{'menu': 'pthread_rwlockattr_init(pthread_rwlockattr_t *)', 'abbr': 'int', 'word': 'pthread_rwlockattr_init(<#pthread_rwlockattr_t *#>)', 'kind': 'f'}
{'menu': 'cgetmatch(const char *, const char *)', 'abbr': 'int', 'word': 'cgetmatch(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'ishexnumber(int _c)', 'abbr': 'int', 'word': 'ishexnumber(<#int _c#>)', 'kind': 'f'}
{'menu': 'cgetfirst(char **, char **)', 'abbr': 'int', 'word': 'cgetfirst(<#char **#>, <#char **#>)', 'kind': 'f'}
{'menu': 'wcsrchr(const wchar_t *, wchar_t)', 'abbr': 'wchar_t *', 'word': 'wcsrchr(<#const wchar_t *#>, <#wchar_t#>)', 'kind': 'f'}
{'menu': 'isspecial_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isspecial_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'pthread_attr_getinheritsched(const pthread_attr_t *, int *)', 'abbr': 'int', 'word': 'pthread_attr_getinheritsched(<#const pthread_attr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': '_RuneCharClass', 'abbr': 'typedef', 'word': '_RuneCharClass', 'kind': 't'}
{'menu': 'pthread_attr_getdetachstate(const pthread_attr_t *, int *)', 'abbr': 'int', 'word': 'pthread_attr_getdetachstate(<#const pthread_attr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'puts(const char *)', 'abbr': 'int', 'word': 'puts(<#const char *#>)', 'kind': 'f'}
{'menu': 'u_int', 'abbr': 'typedef', 'word': 'u_int', 'kind': 't'}
{'menu': 'u_short', 'abbr': 'typedef', 'word': 'u_short', 'kind': 't'}
{'menu': 'btowc_l(int, locale_t)', 'abbr': 'wint_t', 'word': 'btowc_l(<#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'isrune_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isrune_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'u_char', 'abbr': 'typedef', 'word': 'u_char', 'kind': 't'}
{'menu': 'uint', 'abbr': 'typedef', 'word': 'uint', 'kind': 't'}
{'menu': 'remove(const char *)', 'abbr': 'int', 'word': 'remove(<#const char *#>)', 'kind': 'f'}
{'menu': 'ushort', 'abbr': 'typedef', 'word': 'ushort', 'kind': 't'}
{'menu': 'isnumber(int _c)', 'abbr': 'int', 'word': 'isnumber(<#int _c#>)', 'kind': 'f'}
{'menu': '_RuneEntry', 'abbr': 'typedef', 'word': '_RuneEntry', 'kind': 't'}
{'menu': 'u_long', 'abbr': 'typedef', 'word': 'u_long', 'kind': 't'}
{'menu': 'quad_t', 'abbr': 'typedef', 'word': 'quad_t', 'kind': 't'}
{'menu': 'cgetent(char **, char **, const char *)', 'abbr': 'int', 'word': 'cgetent(<#char **#>, <#char **#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'siginfo_t', 'abbr': 'typedef', 'word': 'siginfo_t', 'kind': 't'}
{'menu': 'u_quad_t', 'abbr': 'typedef', 'word': 'u_quad_t', 'kind': 't'}
{'menu': 'ispunct_l(int c, locale_t l)', 'abbr': 'int', 'word': 'ispunct_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'caddr_t', 'abbr': 'typedef', 'word': 'caddr_t', 'kind': 't'}
{'menu': 'rename(const char *, const char *)', 'abbr': 'int', 'word': 'rename(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'isphonogram(int _c)', 'abbr': 'int', 'word': 'isphonogram(<#int _c#>)', 'kind': 'f'}
{'menu': 'wcsncpy(wchar_t *, const wchar_t *, size_t)', 'abbr': 'wchar_t *', 'word': 'wcsncpy(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *)', 'abbr': 'int', 'word': 'pthread_cond_wait(<#pthread_cond_t *#>, <#pthread_mutex_t *#>)', 'kind': 'f'}
{'menu': 'qaddr_t', 'abbr': 'typedef', 'word': 'qaddr_t', 'kind': 't'}
{'menu': 'blkcnt_t', 'abbr': 'typedef', 'word': 'blkcnt_t', 'kind': 't'}
{'menu': 'popen(const char *, const char *)', 'abbr': 'FILE *', 'word': 'popen(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'wcschr(const wchar_t *, wchar_t)', 'abbr': 'wchar_t *', 'word': 'wcschr(<#const wchar_t *#>, <#wchar_t#>)', 'kind': 'f'}
{'menu': 'swscanf_l(const wchar_t *, locale_t, const wchar_t *, ...)', 'abbr': 'int', 'word': 'swscanf_l(<#const wchar_t *#>, <#locale_t#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'blksize_t', 'abbr': 'typedef', 'word': 'blksize_t', 'kind': 't'}
{'menu': 'vfscanf(FILE *, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vfscanf(<#FILE *#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'pthread_setcancelstate(int, int *)', 'abbr': 'int', 'word': 'pthread_setcancelstate(<#int#>, <#int *#>)', 'kind': 'f'}
{'menu': 'pthread_getschedparam(pthread_t, int *, struct sched_param *)', 'abbr': 'int', 'word': 'pthread_getschedparam(<#pthread_t#>, <#int *#>, <#struct sched_param *#>)', 'kind': 'f'}
{'menu': '_opaque_pthread_t', 'abbr': 'struct', 'word': '_opaque_pthread_t', 'kind': 't'}
{'menu': 'iswpunct_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswpunct_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'qsort(void *, size_t, size_t, int (*)(const void *, const void *))', 'abbr': 'void', 'word': 'qsort(<#void *#>, <#size_t#>, <#size_t#>, <#int (*)(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'daddr_t', 'abbr': 'typedef', 'word': 'daddr_t', 'kind': 't'}
{'menu': 'pthread_attr_destroy(pthread_attr_t *)', 'abbr': 'int', 'word': 'pthread_attr_destroy(<#pthread_attr_t *#>)', 'kind': 'f'}
{'menu': 'arc4random_stir()', 'abbr': 'void', 'word': 'arc4random_stir()', 'kind': 'f'}
{'menu': 'fixpt_t', 'abbr': 'typedef', 'word': 'fixpt_t', 'kind': 't'}
{'menu': 'rusage_info_v1', 'abbr': 'struct', 'word': 'rusage_info_v1', 'kind': 't'}
{'menu': 'ino_t', 'abbr': 'typedef', 'word': 'ino_t', 'kind': 't'}
{'menu': 'char32_t', 'abbr': 'typedef', 'word': 'char32_t', 'kind': 't'}
{'menu': '_opaque_pthread_rwlockattr_t', 'abbr': 'struct', 'word': '_opaque_pthread_rwlockattr_t', 'kind': 't'}
{'menu': 'wcscmp(const wchar_t *, const wchar_t *)', 'abbr': 'int', 'word': 'wcscmp(<#const wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'fflush(FILE *)', 'abbr': 'int', 'word': 'fflush(<#FILE *#>)', 'kind': 'f'}
{'menu': 'arc4random_addrandom(unsigned char *, int)', 'abbr': 'void', 'word': 'arc4random_addrandom(<#unsigned char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'ino64_t', 'abbr': 'typedef', 'word': 'ino64_t', 'kind': 't'}
{'menu': 'gid_t', 'abbr': 'typedef', 'word': 'gid_t', 'kind': 't'}
{'menu': 'wcscoll(const wchar_t *, const wchar_t *)', 'abbr': 'int', 'word': 'wcscoll(<#const wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'wcstold_l(const wchar_t *, wchar_t **, locale_t)', 'abbr': 'long double', 'word': 'wcstold_l(<#const wchar_t *#>, <#wchar_t **#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'arc4random_buf(void *, size_t)', 'abbr': 'void', 'word': 'arc4random_buf(<#void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'vscanf(const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vscanf(<#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'in_addr_t', 'abbr': 'typedef', 'word': 'in_addr_t', 'kind': 't'}
{'menu': 'ferror(FILE *)', 'abbr': 'int', 'word': 'ferror(<#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_self()', 'abbr': 'pthread_t', 'word': 'pthread_self()', 'kind': 'f'}
{'menu': 'iswprint_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswprint_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'in_port_t', 'abbr': 'typedef', 'word': 'in_port_t', 'kind': 't'}
{'menu': 'swprintf_l(wchar_t *, size_t n, locale_t, const wchar_t *, ...)', 'abbr': 'int', 'word': 'swprintf_l(<#wchar_t *#>, <#size_t n#>, <#locale_t#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'swblk_t', 'abbr': 'typedef', 'word': 'swblk_t', 'kind': 't'}
{'menu': 'wcrtomb(char *, wchar_t, mbstate_t *)', 'abbr': 'size_t', 'word': 'wcrtomb(<#char *#>, <#wchar_t#>, <#mbstate_t *#>)', 'kind': 'f'}
{'menu': '_opaque_pthread_rwlock_t', 'abbr': 'struct', 'word': '_opaque_pthread_rwlock_t', 'kind': 't'}
{'menu': 'wcstoull_l(const wchar_t *, wchar_t **, int, locale_t)', 'abbr': 'unsigned long long', 'word': 'wcstoull_l(<#const wchar_t *#>, <#wchar_t **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'arc4random()', 'abbr': 'u_int32_t', 'word': 'arc4random()', 'kind': 'f'}
{'menu': 'key_t', 'abbr': 'typedef', 'word': 'key_t', 'kind': 't'}
{'menu': 'nlink_t', 'abbr': 'typedef', 'word': 'nlink_t', 'kind': 't'}
{'menu': 'fgetc(FILE *)', 'abbr': 'int', 'word': 'fgetc(<#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_getconcurrency()', 'abbr': 'int', 'word': 'pthread_getconcurrency()', 'kind': 'f'}
{'menu': 'iswlower_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswlower_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'pthread_setcanceltype(int, int *)', 'abbr': 'int', 'word': 'pthread_setcanceltype(<#int#>, <#int *#>)', 'kind': 'f'}
{'menu': 'realloc(void *, size_t)', 'abbr': 'void *', 'word': 'realloc(<#void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pclose(FILE *)', 'abbr': 'int', 'word': 'pclose(<#FILE *#>)', 'kind': 'f'}
{'menu': 'iswgraph_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswgraph_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'mode_t', 'abbr': 'typedef', 'word': 'mode_t', 'kind': 't'}
{'menu': 'wcscat(wchar_t *, const wchar_t *)', 'abbr': 'wchar_t *', 'word': 'wcscat(<#wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'minor(__uint32_t _x)', 'abbr': '__int32_t', 'word': 'minor(<#__uint32_t _x#>)', 'kind': 'f'}
{'menu': 'fgetpos(FILE *, fpos_t *)', 'abbr': 'int', 'word': 'fgetpos(<#FILE *#>, <#fpos_t *#>)', 'kind': 'f'}
{'menu': 'segsz_t', 'abbr': 'typedef', 'word': 'segsz_t', 'kind': 't'}
{'menu': 'dev_t', 'abbr': 'typedef', 'word': 'dev_t', 'kind': 't'}
{'menu': 'putwchar_l(wchar_t, locale_t)', 'abbr': 'wint_t', 'word': 'putwchar_l(<#wchar_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'major(__uint32_t _x)', 'abbr': '__int32_t', 'word': 'major(<#__uint32_t _x#>)', 'kind': 'f'}
{'menu': 'pthread_exit(void *)', 'abbr': 'void', 'word': 'pthread_exit(<#void *#>)', 'kind': 'f'}
{'menu': 'rand()', 'abbr': 'int', 'word': 'rand()', 'kind': 'f'}
{'menu': 'fileno(FILE *)', 'abbr': 'int', 'word': 'fileno(<#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_atfork(void (*)(), void (*)(), void (*)())', 'abbr': 'int', 'word': 'pthread_atfork(<#void (*)()#>, <#void (*)()#>, <#void (*)()#>)', 'kind': 'f'}
{'menu': 'wcstoll_l(const wchar_t *, wchar_t **, int, locale_t)', 'abbr': 'long long', 'word': 'wcstoll_l(<#const wchar_t *#>, <#wchar_t **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'strtod(const char *, char **)', 'abbr': 'double', 'word': 'strtod(<#const char *#>, <#char **#>)', 'kind': 'f'}
{'menu': 'pthread_override_qos_class_end_np(pthread_override_t __override)', 'abbr': 'int', 'word': 'pthread_override_qos_class_end_np(<#pthread_override_t __override#>)', 'kind': 'f'}
{'menu': 'vsnprintf(char *, size_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vsnprintf(<#char *#>, <#size_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'iswdigit_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswdigit_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'makedev(__uint32_t _major, __uint32_t _minor)', 'abbr': 'dev_t', 'word': 'makedev(<#__uint32_t _major#>, <#__uint32_t _minor#>)', 'kind': 'f'}
{'menu': 'wcscspn(const wchar_t *, const wchar_t *)', 'abbr': 'size_t', 'word': 'wcscspn(<#const wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'wctomb_l(char *, wchar_t, locale_t)', 'abbr': 'int', 'word': 'wctomb_l(<#char *#>, <#wchar_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_equal(pthread_t, pthread_t)', 'abbr': 'int', 'word': 'pthread_equal(<#pthread_t#>, <#pthread_t#>)', 'kind': 'f'}
{'menu': 'atexit_b(^(void))', 'abbr': 'int', 'word': 'atexit_b(<#^(void)#>)', 'kind': 'f'}
{'menu': 'sigset_t', 'abbr': 'typedef', 'word': 'sigset_t', 'kind': 't'}
{'menu': 'iswctype_l(wint_t _wc, wctype_t _charclass, locale_t _l)', 'abbr': 'int', 'word': 'iswctype_l(<#wint_t _wc#>, <#wctype_t _charclass#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'srand(unsigned int)', 'abbr': 'void', 'word': 'srand(<#unsigned int#>)', 'kind': 'f'}
{'menu': 'suseconds_t', 'abbr': 'typedef', 'word': 'suseconds_t', 'kind': 't'}
{'menu': 'rusage_info_v2', 'abbr': 'struct', 'word': 'rusage_info_v2', 'kind': 't'}
{'menu': 'vfwprintf_l(FILE *, locale_t, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vfwprintf_l(<#FILE *#>, <#locale_t#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'fd_set', 'abbr': 'struct', 'word': 'fd_set', 'kind': 't'}
{'menu': 'mach_port_t', 'abbr': 'typedef', 'word': 'mach_port_t', 'kind': 't'}
{'menu': 'pthread_setconcurrency(int)', 'abbr': 'int', 'word': 'pthread_setconcurrency(<#int#>)', 'kind': 'f'}
{'menu': 'useconds_t', 'abbr': 'typedef', 'word': 'useconds_t', 'kind': 't'}
{'menu': 'wcstombs_l(char *, const wchar_t *, size_t, locale_t)', 'abbr': 'size_t', 'word': 'wcstombs_l(<#char *#>, <#const wchar_t *#>, <#size_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'vsscanf(const char *, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vsscanf(<#const char *#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'pthread_detach(pthread_t)', 'abbr': 'int', 'word': 'pthread_detach(<#pthread_t#>)', 'kind': 'f'}
{'menu': 'pthread_setspecific(pthread_key_t, const void *)', 'abbr': 'int', 'word': 'pthread_setspecific(<#pthread_key_t#>, <#const void *#>)', 'kind': 'f'}
{'menu': 'wcscpy(wchar_t *, const wchar_t *)', 'abbr': 'wchar_t *', 'word': 'wcscpy(<#wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'ssize_t', 'abbr': 'typedef', 'word': 'ssize_t', 'kind': 't'}
{'menu': 'iswcntrl_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswcntrl_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'ungetwc_l(wint_t, FILE *, locale_t)', 'abbr': 'wint_t', 'word': 'ungetwc_l(<#wint_t#>, <#FILE *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'wcstof_l(const wchar_t *, wchar_t **, locale_t)', 'abbr': 'float', 'word': 'wcstof_l(<#const wchar_t *#>, <#wchar_t **#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_override_qos_class_start_np(pthread_t __pthread, qos_class_t __qos_class, int __relative_priority)', 'abbr': 'pthread_override_t', 'word': 'pthread_override_qos_class_start_np(<#pthread_t __pthread#>, <#qos_class_t __qos_class#>, <#int __relative_priority#>)', 'kind': 'f'}
{'menu': 'pthread_create(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *)', 'abbr': 'int', 'word': 'pthread_create(<#pthread_t *#>, <#const pthread_attr_t *#>, <#void *(*)(void *)#>, <#void *#>)', 'kind': 'f'}
{'menu': 'strtouq_l(const char *, char **, int, locale_t)', 'abbr': 'unsigned long long', 'word': 'strtouq_l(<#const char *#>, <#char **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'strtof(const char *, char **)', 'abbr': 'float', 'word': 'strtof(<#const char *#>, <#char **#>)', 'kind': 'f'}
{'menu': 'arc4random_uniform(u_int32_t)', 'abbr': 'u_int32_t', 'word': 'arc4random_uniform(<#u_int32_t#>)', 'kind': 'f'}
{'menu': 'pthread_setschedparam(pthread_t, int, const struct sched_param *)', 'abbr': 'int', 'word': 'pthread_setschedparam(<#pthread_t#>, <#int#>, <#const struct sched_param *#>)', 'kind': 'f'}
{'menu': 'iswalpha_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswalpha_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'dprintf(int, const char *, ...)', 'abbr': 'int', 'word': 'dprintf(<#int#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'ungetwc(wint_t, FILE *)', 'abbr': 'wint_t', 'word': 'ungetwc(<#wint_t#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_get_qos_class_np(pthread_t __pthread, qos_class_t *__qos_class, int *__relative_priority)', 'abbr': 'int', 'word': 'pthread_get_qos_class_np(<#pthread_t __pthread#>, <#qos_class_t *__qos_class#>, <#int *__relative_priority#>)', 'kind': 'f'}
{'menu': 'srand48(long)', 'abbr': 'void', 'word': 'srand48(<#long#>)', 'kind': 'f'}
{'menu': 'rlim_t', 'abbr': 'typedef', 'word': 'rlim_t', 'kind': 't'}
{'menu': 'lldiv(long long, long long)', 'abbr': 'lldiv_t', 'word': 'lldiv(<#long long#>, <#long long#>)', 'kind': 'f'}
{'menu': 'strtoull_l(const char *, char **, int, locale_t)', 'abbr': 'unsigned long long', 'word': 'strtoull_l(<#const char *#>, <#char **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'islower(int _c)', 'abbr': 'int', 'word': 'islower(<#int _c#>)', 'kind': 'f'}
{'menu': 'rusage', 'abbr': 'struct', 'word': 'rusage', 'kind': 't'}
{'menu': 'srandom(unsigned int)', 'abbr': 'void', 'word': 'srandom(<#unsigned int#>)', 'kind': 'f'}
{'menu': 'pthread_override_s', 'abbr': 'struct', 'word': 'pthread_override_s', 'kind': 't'}
{'menu': 'malloc(size_t)', 'abbr': 'void *', 'word': 'malloc(<#size_t#>)', 'kind': 'f'}
{'menu': 'fprintf_l(FILE *, locale_t, const char *, ...)', 'abbr': 'int', 'word': 'fprintf_l(<#FILE *#>, <#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'strptime(const char *, const char *, struct tm *)', 'abbr': 'char *', 'word': 'strptime(<#const char *#>, <#const char *#>, <#struct tm *#>)', 'kind': 'f'}
{'menu': 'isprint(int _c)', 'abbr': 'int', 'word': 'isprint(<#int _c#>)', 'kind': 'f'}
{'menu': 'mbrtowc_l(wchar_t *, const char *, size_t, mbstate_t *, locale_t)', 'abbr': 'size_t', 'word': 'mbrtowc_l(<#wchar_t *#>, <#const char *#>, <#size_t#>, <#mbstate_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'setstate(const char *)', 'abbr': 'char *', 'word': 'setstate(<#const char *#>)', 'kind': 'f'}
{'menu': 'vdprintf(int, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vdprintf(<#int#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'vfwprintf(FILE *, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vfwprintf(<#FILE *#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'pthread_override_t', 'abbr': 'typedef', 'word': 'pthread_override_t', 'kind': 't'}
{'menu': 'pthread_mutex_destroy(pthread_mutex_t *)', 'abbr': 'int', 'word': 'pthread_mutex_destroy(<#pthread_mutex_t *#>)', 'kind': 'f'}
{'menu': 'signal(int, void (*)(int))', 'abbr': 'void (*)(int)', 'word': 'signal(<#int#>, <#void (*)(int)#>)', 'kind': 'f'}
{'menu': 'timeval', 'abbr': 'struct', 'word': 'timeval', 'kind': 't'}
{'menu': 'swprintf(wchar_t *, size_t, const wchar_t *, ...)', 'abbr': 'int', 'word': 'swprintf(<#wchar_t *#>, <#size_t#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'pthread_set_qos_class_self_np(qos_class_t __qos_class, int __relative_priority)', 'abbr': 'int', 'word': 'pthread_set_qos_class_self_np(<#qos_class_t __qos_class#>, <#int __relative_priority#>)', 'kind': 'f'}
{'menu': 'strtoul_l(const char *, char **, int, locale_t)', 'abbr': 'unsigned long', 'word': 'strtoul_l(<#const char *#>, <#char **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'setkey(const char *)', 'abbr': 'void', 'word': 'setkey(<#const char *#>)', 'kind': 'f'}
{'menu': 'fd_set', 'abbr': 'typedef', 'word': 'fd_set', 'kind': 't'}
{'menu': 'fdopen(int, const char *)', 'abbr': 'FILE *', 'word': 'fdopen(<#int#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'wctype_l(const char *, locale_t)', 'abbr': 'wctype_t', 'word': 'wctype_l(<#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'time(time_t *)', 'abbr': 'time_t', 'word': 'time(<#time_t *#>)', 'kind': 'f'}
{'menu': 'pthread_key_delete(pthread_key_t)', 'abbr': 'int', 'word': 'pthread_key_delete(<#pthread_key_t#>)', 'kind': 'f'}
{'menu': 'swscanf(const wchar_t *, const wchar_t *, ...)', 'abbr': 'int', 'word': 'swscanf(<#const wchar_t *#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'tzset()', 'abbr': 'void', 'word': 'tzset()', 'kind': 'f'}
{'menu': 'fd_mask', 'abbr': 'typedef', 'word': 'fd_mask', 'kind': 't'}
{'menu': 'mbrlen_l(const char *, size_t, mbstate_t *, locale_t)', 'abbr': 'size_t', 'word': 'mbrlen_l(<#const char *#>, <#size_t#>, <#mbstate_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'setenv(const char *, const char *, int)', 'abbr': 'int', 'word': 'setenv(<#const char *#>, <#const char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'mblen(const char *, size_t)', 'abbr': 'int', 'word': 'mblen(<#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_key_create(pthread_key_t *, void (*)(void *))', 'abbr': 'int', 'word': 'pthread_key_create(<#pthread_key_t *#>, <#void (*)(void *)#>)', 'kind': 'f'}
{'menu': 'rusage_info_t', 'abbr': 'typedef', 'word': 'rusage_info_t', 'kind': 't'}
{'menu': 'user_long_t', 'abbr': 'typedef', 'word': 'user_long_t', 'kind': 't'}
{'menu': 'towupper_l(wint_t _wc, locale_t _l)', 'abbr': 'wint_t', 'word': 'towupper_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'user_ssize_t', 'abbr': 'typedef', 'word': 'user_ssize_t', 'kind': 't'}
{'menu': 'gmtime(const time_t *)', 'abbr': 'struct tm *', 'word': 'gmtime(<#const time_t *#>)', 'kind': 'f'}
{'menu': 'vwprintf(const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vwprintf(<#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'ctermid(char *)', 'abbr': 'char *', 'word': 'ctermid(<#char *#>)', 'kind': 'f'}
{'menu': 'rusage_info_v0', 'abbr': 'struct', 'word': 'rusage_info_v0', 'kind': 't'}
{'menu': 'user_ulong_t', 'abbr': 'typedef', 'word': 'user_ulong_t', 'kind': 't'}
{'menu': '_opaque_pthread_once_t', 'abbr': 'struct', 'word': '_opaque_pthread_once_t', 'kind': 't'}
{'menu': 'fsfilcnt_t', 'abbr': 'typedef', 'word': 'fsfilcnt_t', 'kind': 't'}
{'menu': 'user_time_t', 'abbr': 'typedef', 'word': 'user_time_t', 'kind': 't'}
{'menu': 'pthread_attr_get_qos_class_np(pthread_attr_t *__attr, qos_class_t *__qos_class, int *__relative_priority)', 'abbr': 'int', 'word': 'pthread_attr_get_qos_class_np(<#pthread_attr_t *__attr#>, <#qos_class_t *__qos_class#>, <#int *__relative_priority#>)', 'kind': 'f'}
{'menu': 'syscall_arg_t', 'abbr': 'typedef', 'word': 'syscall_arg_t', 'kind': 't'}
{'menu': 'fsblkcnt_t', 'abbr': 'typedef', 'word': 'fsblkcnt_t', 'kind': 't'}
{'menu': 'strtoq_l(const char *, char **, int, locale_t)', 'abbr': 'long long', 'word': 'strtoq_l(<#const char *#>, <#char **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'localtime(const time_t *)', 'abbr': 'struct tm *', 'word': 'localtime(<#const time_t *#>)', 'kind': 'f'}
{'menu': 'putwc_l(wchar_t, FILE *, locale_t)', 'abbr': 'wint_t', 'word': 'putwc_l(<#wchar_t#>, <#FILE *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'mbtowc(wchar_t *, const char *, size_t)', 'abbr': 'int', 'word': 'mbtowc(<#wchar_t *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'user_off_t', 'abbr': 'typedef', 'word': 'user_off_t', 'kind': 't'}
{'menu': 'u_int64_t', 'abbr': 'typedef', 'word': 'u_int64_t', 'kind': 't'}
{'menu': 'towlower_l(wint_t _wc, locale_t _l)', 'abbr': 'wint_t', 'word': 'towlower_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': '_opaque_pthread_mutexattr_t', 'abbr': 'struct', 'word': '_opaque_pthread_mutexattr_t', 'kind': 't'}
{'menu': 'mbstowcs(wchar_t *, const char *, size_t)', 'abbr': 'size_t', 'word': 'mbstowcs(<#wchar_t *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'register_t', 'abbr': 'typedef', 'word': 'register_t', 'kind': 't'}
{'menu': 'user_addr_t', 'abbr': 'typedef', 'word': 'user_addr_t', 'kind': 't'}
{'menu': 'strtoll_l(const char *, char **, int, locale_t)', 'abbr': 'long long', 'word': 'strtoll_l(<#const char *#>, <#char **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'mbsrtowcs_l(wchar_t *, const char **, size_t, mbstate_t *, locale_t)', 'abbr': 'size_t', 'word': 'mbsrtowcs_l(<#wchar_t *#>, <#const char **#>, <#size_t#>, <#mbstate_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'user_size_t', 'abbr': 'typedef', 'word': 'user_size_t', 'kind': 't'}
{'menu': 'mktime(struct tm *)', 'abbr': 'time_t', 'word': 'mktime(<#struct tm *#>)', 'kind': 'f'}
{'menu': 'pthread_join(pthread_t, void **)', 'abbr': 'int', 'word': 'pthread_join(<#pthread_t#>, <#void **#>)', 'kind': 'f'}
{'menu': 'memchr(const void *, int, size_t)', 'abbr': 'void *', 'word': 'memchr(<#const void *#>, <#int#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'iswxdigit_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswxdigit_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'unsetenv(const char *)', 'abbr': 'int', 'word': 'unsetenv(<#const char *#>)', 'kind': 'f'}
{'menu': 'posix_memalign(void **, size_t, size_t)', 'abbr': 'int', 'word': 'posix_memalign(<#void **#>, <#size_t#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'vprintf(const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vprintf(<#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'nl_item', 'abbr': 'typedef', 'word': 'nl_item', 'kind': 't'}
{'menu': 'u_int8_t', 'abbr': 'typedef', 'word': 'u_int8_t', 'kind': 't'}
{'menu': 'pthread_rwlockattr_setpshared(pthread_rwlockattr_t *, int)', 'abbr': 'int', 'word': 'pthread_rwlockattr_setpshared(<#pthread_rwlockattr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'u_int32_t', 'abbr': 'typedef', 'word': 'u_int32_t', 'kind': 't'}
{'menu': 'nl_catd', 'abbr': 'typedef', 'word': 'nl_catd', 'kind': 't'}
{'menu': 'u_int16_t', 'abbr': 'typedef', 'word': 'u_int16_t', 'kind': 't'}
{'menu': 'pthread_attr_set_qos_class_np(pthread_attr_t *__attr, qos_class_t __qos_class, int __relative_priority)', 'abbr': 'int', 'word': 'pthread_attr_set_qos_class_np(<#pthread_attr_t *__attr#>, <#qos_class_t __qos_class#>, <#int __relative_priority#>)', 'kind': 'f'}
{'menu': 'vsprintf(char *, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vsprintf(<#char *#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'iswupper_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswupper_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'getdelim(char **, size_t *, int, FILE *)', 'abbr': 'ssize_t', 'word': 'getdelim(<#char **#>, <#size_t *#>, <#int#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'catopen(const char *, int)', 'abbr': 'nl_catd', 'word': 'catopen(<#const char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'vswprintf(wchar_t *, size_t, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vswprintf(<#wchar_t *#>, <#size_t#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'unlockpt(int)', 'abbr': 'int', 'word': 'unlockpt(<#int#>)', 'kind': 'f'}
{'menu': 'mbsinit_l(const mbstate_t *, locale_t)', 'abbr': 'int', 'word': 'mbsinit_l(<#const mbstate_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'memcmp(const void *, const void *, size_t)', 'abbr': 'int', 'word': 'memcmp(<#const void *#>, <#const void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_getspecific(pthread_key_t)', 'abbr': 'void *', 'word': 'pthread_getspecific(<#pthread_key_t#>)', 'kind': 'f'}
{'menu': 'iswspace_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswspace_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'strtold_l(const char *, char **, locale_t)', 'abbr': 'long double', 'word': 'strtold_l(<#const char *#>, <#char **#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'strftime(char *, size_t, const char *, const struct tm *)', 'abbr': 'size_t', 'word': 'strftime(<#char *#>, <#size_t#>, <#const char *#>, <#const struct tm *#>)', 'kind': 'f'}
{'menu': 'lconv', 'abbr': 'struct', 'word': 'lconv', 'kind': 't'}
{'menu': 'getpriority(int, id_t)', 'abbr': 'int', 'word': 'getpriority(<#int#>, <#id_t#>)', 'kind': 'f'}
{'menu': 'strerror_r(int, char *, size_t)', 'abbr': 'int', 'word': 'strerror_r(<#int#>, <#char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'fputc(int, FILE *)', 'abbr': 'int', 'word': 'fputc(<#int#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_destroy(pthread_mutexattr_t *)', 'abbr': 'int', 'word': 'pthread_mutexattr_destroy(<#pthread_mutexattr_t *#>)', 'kind': 'f'}
{'menu': 'qos_class_self()', 'abbr': 'qos_class_t', 'word': 'qos_class_self()', 'kind': 'f'}
{'menu': 'bsearch(const void *, const void *, size_t, size_t, int (*)(const void *, const void *))', 'abbr': 'void *', 'word': 'bsearch(<#const void *#>, <#const void *#>, <#size_t#>, <#size_t#>, <#int (*)(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'ptsname(int)', 'abbr': 'char *', 'word': 'ptsname(<#int#>)', 'kind': 'f'}
{'menu': 'catgets(nl_catd, int, int, const char *)', 'abbr': 'char *', 'word': 'catgets(<#nl_catd#>, <#int#>, <#int#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'mbrtowc(wchar_t *, const char *, size_t, mbstate_t *)', 'abbr': 'size_t', 'word': 'mbrtowc(<#wchar_t *#>, <#const char *#>, <#size_t#>, <#mbstate_t *#>)', 'kind': 'f'}
{'menu': 'wcstol_l(const wchar_t *, wchar_t **, int, locale_t)', 'abbr': 'long', 'word': 'wcstol_l(<#const wchar_t *#>, <#wchar_t **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'strdup(const char *)', 'abbr': 'char *', 'word': 'strdup(<#const char *#>)', 'kind': 'f'}
{'menu': 'posix_openpt(int)', 'abbr': 'int', 'word': 'posix_openpt(<#int#>)', 'kind': 'f'}
{'menu': 'vfprintf_l(FILE *, locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vfprintf_l(<#FILE *#>, <#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'iswphonogram_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswphonogram_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'qos_class_t', 'abbr': 'typedef', 'word': 'qos_class_t', 'kind': 't'}
{'menu': 'iswrune_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswrune_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'getiopolicy_np(int, int)', 'abbr': 'int', 'word': 'getiopolicy_np(<#int#>, <#int#>)', 'kind': 'f'}
{'menu': 'wcscasecmp(const wchar_t *, const wchar_t *)', 'abbr': 'int', 'word': 'wcscasecmp(<#const wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'pthread_get_stackaddr_np(pthread_t)', 'abbr': 'void *', 'word': 'pthread_get_stackaddr_np(<#pthread_t#>)', 'kind': 'f'}
{'menu': 'calloc(size_t, size_t)', 'abbr': 'void *', 'word': 'calloc(<#size_t#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'putenv(char *)', 'abbr': 'int', 'word': 'putenv(<#char *#>)', 'kind': 'f'}
{'menu': 'strtol_l(const char *, char **, int, locale_t)', 'abbr': 'long', 'word': 'strtol_l(<#const char *#>, <#char **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'mbrlen(const char *, size_t, mbstate_t *)', 'abbr': 'size_t', 'word': 'mbrlen(<#const char *#>, <#size_t#>, <#mbstate_t *#>)', 'kind': 'f'}
{'menu': 'strtok_r(char *, const char *, char **)', 'abbr': 'char *', 'word': 'strtok_r(<#char *#>, <#const char *#>, <#char **#>)', 'kind': 'f'}
{'menu': 'QOS_CLASS_UNSPECIFIED', 'abbr': 'enumenum <anonymous>', 'word': 'QOS_CLASS_UNSPECIFIED', 'kind': 't'}
{'menu': 'vprintf_l(locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vprintf_l(<#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'div(int, int)', 'abbr': 'div_t', 'word': 'div(<#int#>, <#int#>)', 'kind': 'f'}
{'menu': 'memccpy(void *, const void *, int, size_t)', 'abbr': 'void *', 'word': 'memccpy(<#void *#>, <#const void *#>, <#int#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *, int *)', 'abbr': 'int', 'word': 'pthread_mutexattr_getprioceiling(<#const pthread_mutexattr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'wcsdup(const wchar_t *)', 'abbr': 'wchar_t *', 'word': 'wcsdup(<#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'mrand48()', 'abbr': 'long', 'word': 'mrand48()', 'kind': 'f'}
{'menu': 'iswideogram_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswideogram_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'pthread_mach_thread_np(pthread_t)', 'abbr': 'mach_port_t', 'word': 'pthread_mach_thread_np(<#pthread_t#>)', 'kind': 'f'}
{'menu': 'wcstoul_l(const wchar_t *, wchar_t **, int, locale_t)', 'abbr': 'unsigned long', 'word': 'wcstoul_l(<#const wchar_t *#>, <#wchar_t **#>, <#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'mkstemp(char *)', 'abbr': 'int', 'word': 'mkstemp(<#char *#>)', 'kind': 'f'}
{'menu': 'mbsinit(const mbstate_t *)', 'abbr': 'int', 'word': 'mbsinit(<#const mbstate_t *#>)', 'kind': 'f'}
{'menu': 'exit(int)', 'abbr': 'void', 'word': 'exit(<#int#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_getprotocol(const pthread_mutexattr_t *, int *)', 'abbr': 'int', 'word': 'pthread_mutexattr_getprotocol(<#const pthread_mutexattr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'getrlimit(int, struct rlimit *)', 'abbr': 'int', 'word': 'getrlimit(<#int#>, <#struct rlimit *#>)', 'kind': 'f'}
{'menu': 'qos_class_main()', 'abbr': 'qos_class_t', 'word': 'qos_class_main()', 'kind': 'f'}
{'menu': 'wcpncpy(wchar_t *, const wchar_t *, size_t)', 'abbr': 'wchar_t *', 'word': 'wcpncpy(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'strxfrm(char *, const char *, size_t)', 'abbr': 'size_t', 'word': 'strxfrm(<#char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'stpcpy(char *, const char *)', 'abbr': 'char *', 'word': 'stpcpy(<#char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'pthread_get_stacksize_np(pthread_t)', 'abbr': 'size_t', 'word': 'pthread_get_stacksize_np(<#pthread_t#>)', 'kind': 'f'}
{'menu': 'strtof_l(const char *, char **, locale_t)', 'abbr': 'float', 'word': 'strtof_l(<#const char *#>, <#char **#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'catclose(nl_catd)', 'abbr': 'int', 'word': 'catclose(<#nl_catd#>)', 'kind': 'f'}
{'menu': 'nrand48(unsigned short *)', 'abbr': 'long', 'word': 'nrand48(<#unsigned short *#>)', 'kind': 'f'}
{'menu': 'iswnumber_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswnumber_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'fputs(const char *, FILE *)', 'abbr': 'int', 'word': 'fputs(<#const char *#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'QOS_CLASS_USER_INITIATED', 'abbr': 'enumenum <anonymous>', 'word': 'QOS_CLASS_USER_INITIATED', 'kind': 't'}
{'menu': 'vsprintf_l(char *, locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vsprintf_l(<#char *#>, <#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'putwc(wchar_t, FILE *)', 'abbr': 'wint_t', 'word': 'putwc(<#wchar_t#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'QOS_CLASS_USER_INTERACTIVE', 'abbr': 'enumenum <anonymous>', 'word': 'QOS_CLASS_USER_INTERACTIVE', 'kind': 't'}
{'menu': 'free(void *)', 'abbr': 'void', 'word': 'free(<#void *#>)', 'kind': 'f'}
{'menu': 'rusage_info_current', 'abbr': 'typedef', 'word': 'rusage_info_current', 'kind': 't'}
{'menu': 'stpncpy(char *, const char *, size_t)', 'abbr': 'char *', 'word': 'stpncpy(<#char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'strtok(char *, const char *)', 'abbr': 'char *', 'word': 'strtok(<#char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'realpath(const char *, char *)', 'abbr': 'char *', 'word': 'realpath(<#const char *#>, <#char *#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_getpshared(const pthread_mutexattr_t *, int *)', 'abbr': 'int', 'word': 'pthread_mutexattr_getpshared(<#const pthread_mutexattr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'mbtowc_l(wchar_t *, const char *, size_t, locale_t)', 'abbr': 'int', 'word': 'mbtowc_l(<#wchar_t *#>, <#const char *#>, <#size_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'rlimit', 'abbr': 'struct', 'word': 'rlimit', 'kind': 't'}
{'menu': 'iswblank_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswblank_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'labs(long)', 'abbr': 'long', 'word': 'labs(<#long#>)', 'kind': 'f'}
{'menu': 'mbsrtowcs(wchar_t *, const char **, size_t, mbstate_t *)', 'abbr': 'size_t', 'word': 'mbsrtowcs(<#wchar_t *#>, <#const char **#>, <#size_t#>, <#mbstate_t *#>)', 'kind': 'f'}
{'menu': 'pthread_t', 'abbr': 'typedef', 'word': 'pthread_t', 'kind': 't'}
{'menu': 'strtod_l(const char *, char **, locale_t)', 'abbr': 'double', 'word': 'strtod_l(<#const char *#>, <#char **#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_gettype(const pthread_mutexattr_t *, int *)', 'abbr': 'int', 'word': 'pthread_mutexattr_gettype(<#const pthread_mutexattr_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'pthread_rwlockattr_t', 'abbr': 'typedef', 'word': 'pthread_rwlockattr_t', 'kind': 't'}
{'menu': 'iswhexnumber_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswhexnumber_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'seed48(unsigned short *)', 'abbr': 'unsigned short *', 'word': 'seed48(<#unsigned short *#>)', 'kind': 'f'}
{'menu': 'pthread_rwlock_t', 'abbr': 'typedef', 'word': 'pthread_rwlock_t', 'kind': 't'}
{'menu': 'getenv(const char *)', 'abbr': 'char *', 'word': 'getenv(<#const char *#>)', 'kind': 'f'}
{'menu': 'strstr(const char *, const char *)', 'abbr': 'char *', 'word': 'strstr(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'wcsrtombs_l(char *, const wchar_t **, size_t, mbstate_t *, locale_t)', 'abbr': 'size_t', 'word': 'wcsrtombs_l(<#char *#>, <#const wchar_t **#>, <#size_t#>, <#mbstate_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'wcsnlen(const wchar_t *, size_t)', 'abbr': 'size_t', 'word': 'wcsnlen(<#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_cond_signal_thread_np(pthread_cond_t *, pthread_t)', 'abbr': 'int', 'word': 'pthread_cond_signal_thread_np(<#pthread_cond_t *#>, <#pthread_t#>)', 'kind': 'f'}
{'menu': 'snprintf_l(char *, size_t, locale_t, const char *, ...)', 'abbr': 'int', 'word': 'snprintf_l(<#char *#>, <#size_t#>, <#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'strndup(const char *, size_t)', 'abbr': 'char *', 'word': 'strndup(<#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'proc_rlimit_control_wakeupmon', 'abbr': 'struct', 'word': 'proc_rlimit_control_wakeupmon', 'kind': 't'}
{'menu': 'wcsnrtombs_l(char *, const wchar_t **, size_t, size_t, mbstate_t *, locale_t)', 'abbr': 'size_t', 'word': 'wcsnrtombs_l(<#char *#>, <#const wchar_t **#>, <#size_t#>, <#size_t#>, <#mbstate_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'QOS_CLASS_BACKGROUND', 'abbr': 'enumenum <anonymous>', 'word': 'QOS_CLASS_BACKGROUND', 'kind': 't'}
{'menu': 'strspn(const char *, const char *)', 'abbr': 'size_t', 'word': 'strspn(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'mbstowcs_l(wchar_t *, const char *, size_t, locale_t)', 'abbr': 'size_t', 'word': 'mbstowcs_l(<#wchar_t *#>, <#const char *#>, <#size_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_init(pthread_mutexattr_t *)', 'abbr': 'int', 'word': 'pthread_mutexattr_init(<#pthread_mutexattr_t *#>)', 'kind': 'f'}
{'menu': 'random()', 'abbr': 'long', 'word': 'random()', 'kind': 'f'}
{'menu': 'QOS_CLASS_UTILITY', 'abbr': 'enumenum <anonymous>', 'word': 'QOS_CLASS_UTILITY', 'kind': 't'}
{'menu': 'llabs(long long)', 'abbr': 'long long', 'word': 'llabs(<#long long#>)', 'kind': 'f'}
{'menu': 'wcstod_l(const wchar_t *, wchar_t **, locale_t)', 'abbr': 'double', 'word': 'wcstod_l(<#const wchar_t *#>, <#wchar_t **#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'wcsncasecmp(const wchar_t *, const wchar_t *, size_t n)', 'abbr': 'int', 'word': 'wcsncasecmp(<#const wchar_t *#>, <#const wchar_t *#>, <#size_t n#>)', 'kind': 'f'}
{'menu': 'pthread_cond_timedwait_relative_np(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)', 'abbr': 'int', 'word': 'pthread_cond_timedwait_relative_np(<#pthread_cond_t *#>, <#pthread_mutex_t *#>, <#const struct timespec *#>)', 'kind': 'f'}
{'menu': 'fgetwln_l(FILE *, size_t *, locale_t)', 'abbr': 'wchar_t *', 'word': 'fgetwln_l(<#FILE *#>, <#size_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'putwchar(wchar_t)', 'abbr': 'wint_t', 'word': 'putwchar(<#wchar_t#>)', 'kind': 'f'}
{'menu': 'strrchr(const char *, int)', 'abbr': 'char *', 'word': 'strrchr(<#const char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'QOS_CLASS_DEFAULT', 'abbr': 'enumenum <anonymous>', 'word': 'QOS_CLASS_DEFAULT', 'kind': 't'}
{'menu': 'ldiv(long, long)', 'abbr': 'ldiv_t', 'word': 'ldiv(<#long#>, <#long#>)', 'kind': 'f'}
{'menu': 'rand_r(unsigned int *)', 'abbr': 'int', 'word': 'rand_r(<#unsigned int *#>)', 'kind': 'f'}
{'menu': 'mblen_l(const char *, size_t, locale_t)', 'abbr': 'int', 'word': 'mblen_l(<#const char *#>, <#size_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_mutex_getprioceiling(const pthread_mutex_t *, int *)', 'abbr': 'int', 'word': 'pthread_mutex_getprioceiling(<#const pthread_mutex_t *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'wcstoull(const wchar_t *, wchar_t **, int)', 'abbr': 'unsigned long long', 'word': 'wcstoull(<#const wchar_t *#>, <#wchar_t **#>, <#int#>)', 'kind': 'f'}
{'menu': 'isgraph(int _c)', 'abbr': 'int', 'word': 'isgraph(<#int _c#>)', 'kind': 'f'}
{'menu': 'strpbrk(const char *, const char *)', 'abbr': 'char *', 'word': 'strpbrk(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'abort()', 'abbr': 'void', 'word': 'abort()', 'kind': 'f'}
{'menu': 'sched_get_priority_max(int)', 'abbr': 'int', 'word': 'sched_get_priority_max(<#int#>)', 'kind': 'f'}
{'menu': 'fscanf_l(FILE *, locale_t, const char *, ...)', 'abbr': 'int', 'word': 'fscanf_l(<#FILE *#>, <#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'flsl(long)', 'abbr': 'int', 'word': 'flsl(<#long#>)', 'kind': 'f'}
{'menu': 'lldiv_t', 'abbr': 'typedef', 'word': 'lldiv_t', 'kind': 't'}
{'menu': 'clock()', 'abbr': 'clock_t', 'word': 'clock()', 'kind': 'f'}
{'menu': 'isdigit(int _c)', 'abbr': 'int', 'word': 'isdigit(<#int _c#>)', 'kind': 'f'}
{'menu': 'locale_t', 'abbr': 'typedef', 'word': 'locale_t', 'kind': 't'}
{'menu': 'sched_get_priority_min(int)', 'abbr': 'int', 'word': 'sched_get_priority_min(<#int#>)', 'kind': 'f'}
{'menu': 'sched_yield()', 'abbr': 'int', 'word': 'sched_yield()', 'kind': 'f'}
{'menu': 'iscntrl(int _c)', 'abbr': 'int', 'word': 'iscntrl(<#int _c#>)', 'kind': 'f'}
{'menu': 'wcscoll_l(const wchar_t *, const wchar_t *, locale_t)', 'abbr': 'int', 'word': 'wcscoll_l(<#const wchar_t *#>, <#const wchar_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_threadid_np(pthread_t, __uint64_t *)', 'abbr': 'int', 'word': 'pthread_threadid_np(<#pthread_t#>, <#__uint64_t *#>)', 'kind': 'f'}
{'menu': 'asctime(const struct tm *)', 'abbr': 'char *', 'word': 'asctime(<#const struct tm *#>)', 'kind': 'f'}
{'menu': 'initstate(unsigned int, char *, size_t)', 'abbr': 'char *', 'word': 'initstate(<#unsigned int#>, <#char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_mutex_init(pthread_mutex_t *, const pthread_mutexattr_t *)', 'abbr': 'int', 'word': 'pthread_mutex_init(<#pthread_mutex_t *#>, <#const pthread_mutexattr_t *#>)', 'kind': 'f'}
{'menu': 'printf_l(locale_t, const char *, ...)', 'abbr': 'int', 'word': 'printf_l(<#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'wcstoll(const wchar_t *, wchar_t **, int)', 'abbr': 'long long', 'word': 'wcstoll(<#const wchar_t *#>, <#wchar_t **#>, <#int#>)', 'kind': 'f'}
{'menu': 'abs(int)', 'abbr': 'int', 'word': 'abs(<#int#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_t', 'abbr': 'typedef', 'word': 'pthread_mutexattr_t', 'kind': 't'}
{'menu': 'isblank(int _c)', 'abbr': 'int', 'word': 'isblank(<#int _c#>)', 'kind': 'f'}
{'menu': 'operator new[](std::size_t __sz)', 'abbr': 'void *', 'word': 'operator new[](<#std::size_t __sz#>)', 'kind': 'f'}
{'menu': 'pthread_once_t', 'abbr': 'typedef', 'word': 'pthread_once_t', 'kind': 't'}
{'menu': 'atexit(void (*)())', 'abbr': 'int', 'word': 'atexit(<#void (*)()#>)', 'kind': 'f'}
{'menu': 'atol_l(const char *, locale_t)', 'abbr': 'long', 'word': 'atol_l(<#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'wctrans_t', 'abbr': 'typedef', 'word': 'wctrans_t', 'kind': 't'}
{'menu': 'pthread_key_t', 'abbr': 'typedef', 'word': 'pthread_key_t', 'kind': 't'}
{'menu': 'wcstold(const wchar_t *, wchar_t **)', 'abbr': 'long double', 'word': 'wcstold(<#const wchar_t *#>, <#wchar_t **#>)', 'kind': 'f'}
{'menu': '_c_locale', 'abbr': 'const locale_t', 'word': '_c_locale', 'kind': 'v'}
{'menu': 'pthread_mutex_lock(pthread_mutex_t *)', 'abbr': 'int', 'word': 'pthread_mutex_lock(<#pthread_mutex_t *#>)', 'kind': 'f'}
{'menu': 'isalpha(int _c)', 'abbr': 'int', 'word': 'isalpha(<#int _c#>)', 'kind': 'f'}
{'menu': 'pthread_mutex_t', 'abbr': 'typedef', 'word': 'pthread_mutex_t', 'kind': 't'}
{'menu': 'daylight', 'abbr': 'int', 'word': 'daylight', 'kind': 'v'}
{'menu': 'pthread_testcancel()', 'abbr': 'void', 'word': 'pthread_testcancel()', 'kind': 'f'}
{'menu': 'flockfile(FILE *)', 'abbr': 'void', 'word': 'flockfile(<#FILE *#>)', 'kind': 'f'}
{'menu': 'timezone', 'abbr': 'long', 'word': 'timezone', 'kind': 'v'}
{'menu': 'pthread_cond_t', 'abbr': 'typedef', 'word': 'pthread_cond_t', 'kind': 't'}
{'menu': 'atof(const char *)', 'abbr': 'double', 'word': 'atof(<#const char *#>)', 'kind': 'f'}
{'menu': 'iswblank(wint_t _wc)', 'abbr': 'int', 'word': 'iswblank(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'scanf_l(locale_t, const char *, ...)', 'abbr': 'int', 'word': 'scanf_l(<#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'operator new[](std::size_t __sz, const std::nothrow_t &)', 'abbr': 'void *', 'word': 'operator new[](<#std::size_t __sz#>, <#const std::nothrow_t &#>)', 'kind': 'f'}
{'menu': 'grantpt(int)', 'abbr': 'int', 'word': 'grantpt(<#int#>)', 'kind': 'f'}
{'menu': 'wcsncasecmp_l(const wchar_t *, const wchar_t *, size_t n, locale_t)', 'abbr': 'int', 'word': 'wcsncasecmp_l(<#const wchar_t *#>, <#const wchar_t *#>, <#size_t n#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_condattr_t', 'abbr': 'typedef', 'word': 'pthread_condattr_t', 'kind': 't'}
{'menu': 'isalnum(int _c)', 'abbr': 'int', 'word': 'isalnum(<#int _c#>)', 'kind': 'f'}
{'menu': 'iswascii(wint_t _wc)', 'abbr': 'int', 'word': 'iswascii(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'flsll(long long)', 'abbr': 'int', 'word': 'flsll(<#long long#>)', 'kind': 'f'}
{'menu': 'wcstof(const wchar_t *, wchar_t **)', 'abbr': 'float', 'word': 'wcstof(<#const wchar_t *#>, <#wchar_t **#>)', 'kind': 'f'}
{'menu': 'getsubopt(char **, char *const *, char **)', 'abbr': 'int', 'word': 'getsubopt(<#char **#>, <#char *const *#>, <#char **#>)', 'kind': 'f'}
{'menu': 'wcsftime_l(wchar_t *, size_t, const wchar_t *, const struct tm *, locale_t)', 'abbr': 'size_t', 'word': 'wcsftime_l(<#wchar_t *#>, <#size_t#>, <#const wchar_t *#>, <#const struct tm *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'tzname', 'abbr': 'char *[]', 'word': 'tzname', 'kind': 'v'}
{'menu': 'pthread_attr_t', 'abbr': 'typedef', 'word': 'pthread_attr_t', 'kind': 't'}
{'menu': 'atoll_l(const char *, locale_t)', 'abbr': 'long long', 'word': 'atoll_l(<#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_is_threaded_np()', 'abbr': 'int', 'word': 'pthread_is_threaded_np()', 'kind': 'f'}
{'menu': 'getdate_err', 'abbr': 'int', 'word': 'getdate_err', 'kind': 'v'}
{'menu': 'fgets(char *, int, FILE *)', 'abbr': 'char *', 'word': 'fgets(<#char *#>, <#int#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'lrand48()', 'abbr': 'long', 'word': 'lrand48()', 'kind': 'f'}
{'menu': 'duplocale(locale_t)', 'abbr': 'locale_t', 'word': 'duplocale(<#locale_t#>)', 'kind': 'f'}
{'menu': 'std', 'abbr': 'locale_t', 'word': 'std', 'kind': 'f'}
{'menu': 'operator delete[](void *__p)', 'abbr': 'void', 'word': 'operator delete[](<#void *__p#>)', 'kind': 'f'}
{'menu': 'mbsnrtowcs_l(wchar_t *, const char **, size_t, size_t, mbstate_t *, locale_t)', 'abbr': 'size_t', 'word': 'mbsnrtowcs_l(<#wchar_t *#>, <#const char **#>, <#size_t#>, <#size_t#>, <#mbstate_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'atol(const char *)', 'abbr': 'long', 'word': 'atol(<#const char *#>)', 'kind': 'f'}
{'menu': 'main(int argc, const char **argv)', 'abbr': 'int', 'word': 'main(<#int argc#>, <#const char **argv#>)', 'kind': 'f'}
{'menu': 'pthread_setname_np(const char *)', 'abbr': 'int', 'word': 'pthread_setname_np(<#const char *#>)', 'kind': 'f'}
{'menu': 'atoi_l(const char *, locale_t)', 'abbr': 'int', 'word': 'atoi_l(<#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_mutex_setprioceiling(pthread_mutex_t *, int, int *)', 'abbr': 'int', 'word': 'pthread_mutex_setprioceiling(<#pthread_mutex_t *#>, <#int#>, <#int *#>)', 'kind': 'f'}
{'menu': 'atoi(const char *)', 'abbr': 'int', 'word': 'atoi(<#const char *#>)', 'kind': 'f'}
{'menu': 'lcong48(unsigned short *)', 'abbr': 'void', 'word': 'lcong48(<#unsigned short *#>)', 'kind': 'f'}
{'menu': 'vswprintf_l(wchar_t *, size_t n, locale_t, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vswprintf_l(<#wchar_t *#>, <#size_t n#>, <#locale_t#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'sprintf_l(char *, locale_t, const char *, ...)', 'abbr': 'int', 'word': 'sprintf_l(<#char *#>, <#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'atoll(const char *)', 'abbr': 'long long', 'word': 'atoll(<#const char *#>)', 'kind': 'f'}
{'menu': 'getdate(const char *)', 'abbr': 'struct tm *', 'word': 'getdate(<#const char *#>)', 'kind': 'f'}
{'menu': 'operator delete[](void *__p, const std::nothrow_t &)', 'abbr': 'void', 'word': 'operator delete[](<#void *__p#>, <#const std::nothrow_t &#>)', 'kind': 'f'}
{'menu': 'wcpcpy(wchar_t *, const wchar_t *)', 'abbr': 'wchar_t *', 'word': 'wcpcpy(<#wchar_t *#>, <#const wchar_t *#>)', 'kind': 'f'}
{'menu': 'wcscasecmp_l(const wchar_t *, const wchar_t *, locale_t)', 'abbr': 'int', 'word': 'wcscasecmp_l(<#const wchar_t *#>, <#const wchar_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_main_np()', 'abbr': 'int', 'word': 'pthread_main_np()', 'kind': 'f'}
{'menu': 'pthread_mutex_trylock(pthread_mutex_t *)', 'abbr': 'int', 'word': 'pthread_mutex_trylock(<#pthread_mutex_t *#>)', 'kind': 'f'}
{'menu': 'mktemp(char *)', 'abbr': 'char *', 'word': 'mktemp(<#char *#>)', 'kind': 'f'}
{'menu': 'valloc(size_t)', 'abbr': 'void *', 'word': 'valloc(<#size_t#>)', 'kind': 'f'}
{'menu': 'vwprintf_l(locale_t, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vwprintf_l(<#locale_t#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'person', 'abbr': 'class', 'word': 'person', 'kind': 't'}
{'menu': 'difftime(time_t, time_t)', 'abbr': 'double', 'word': 'difftime(<#time_t#>, <#time_t#>)', 'kind': 'f'}
{'menu': 'l64a(long)', 'abbr': 'char *', 'word': 'l64a(<#long#>)', 'kind': 'f'}
{'menu': 'mbsnrtowcs(wchar_t *, const char **, size_t, size_t, mbstate_t *)', 'abbr': 'size_t', 'word': 'mbsnrtowcs(<#wchar_t *#>, <#const char **#>, <#size_t#>, <#size_t#>, <#mbstate_t *#>)', 'kind': 'f'}
{'menu': 'localeconv()', 'abbr': 'struct lconv *', 'word': 'localeconv()', 'kind': 'f'}
{'menu': 'operator new(std::size_t, void *__p)', 'abbr': 'void *', 'word': 'operator new(<#std::size_t#>, <#void *__p#>)', 'kind': 'f'}
{'menu': 'pthread_mutex_unlock(pthread_mutex_t *)', 'abbr': 'int', 'word': 'pthread_mutex_unlock(<#pthread_mutex_t *#>)', 'kind': 'f'}
{'menu': 'sched_param', 'abbr': 'struct', 'word': 'sched_param', 'kind': 't'}
{'menu': 'sscanf_l(const char *, locale_t, const char *, ...)', 'abbr': 'int', 'word': 'sscanf_l(<#const char *#>, <#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'suboptarg', 'abbr': 'char *', 'word': 'suboptarg', 'kind': 'v'}
{'menu': 'jrand48(unsigned short *)', 'abbr': 'long', 'word': 'jrand48(<#unsigned short *#>)', 'kind': 'f'}
{'menu': 'pthread_cond_signal(pthread_cond_t *)', 'abbr': 'int', 'word': 'pthread_cond_signal(<#pthread_cond_t *#>)', 'kind': 'f'}
{'menu': 'fprintf(FILE *, const char *, ...)', 'abbr': 'int', 'word': 'fprintf(<#FILE *#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'rusage_info_v3', 'abbr': 'struct', 'word': 'rusage_info_v3', 'kind': 't'}
{'menu': 'setlocale(int, const char *)', 'abbr': 'char *', 'word': 'setlocale(<#int#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'ctime(const time_t *)', 'abbr': 'char *', 'word': 'ctime(<#const time_t *#>)', 'kind': 'f'}
{'menu': 'bzero(void *, size_t)', 'abbr': 'void', 'word': 'bzero(<#void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_getname_np(pthread_t, char *, size_t)', 'abbr': 'int', 'word': 'pthread_getname_np(<#pthread_t#>, <#char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': '_xlocale', 'abbr': 'struct', 'word': '_xlocale', 'kind': 't'}
{'menu': 'atof_l(const char *, locale_t)', 'abbr': 'double', 'word': 'atof_l(<#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'fopen(const char *, const char *)', 'abbr': 'FILE *', 'word': 'fopen(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'index(const char *, int)', 'abbr': 'char *', 'word': 'index(<#const char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'pthread_cond_init(pthread_cond_t *, const pthread_condattr_t *)', 'abbr': 'int', 'word': 'pthread_cond_init(<#pthread_cond_t *#>, <#const pthread_condattr_t *#>)', 'kind': 'f'}
{'menu': 'wcrtomb_l(char *, wchar_t, mbstate_t *, locale_t)', 'abbr': 'size_t', 'word': 'wcrtomb_l(<#char *#>, <#wchar_t#>, <#mbstate_t *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': '_opaque_pthread_cond_t', 'abbr': 'struct', 'word': '_opaque_pthread_cond_t', 'kind': 't'}
{'menu': '_opaque_pthread_cond_t()', 'abbr': 'struct', 'word': '_opaque_pthread_cond_t()', 'kind': 'm'}
{'menu': '_opaque_pthread_cond_t(const _opaque_pthread_cond_t &)', 'abbr': 'struct', 'word': '_opaque_pthread_cond_t(<#const _opaque_pthread_cond_t &#>)', 'kind': 'm'}
{'menu': 'wcwidth(wchar_t)', 'abbr': 'int', 'word': 'wcwidth(<#wchar_t#>)', 'kind': 'f'}
{'menu': 'strcspn(const char *, const char *)', 'abbr': 'size_t', 'word': 'strcspn(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'fputws(const wchar_t *, FILE *)', 'abbr': 'int', 'word': 'fputws(<#const wchar_t *#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'rindex(const char *, int)', 'abbr': 'char *', 'word': 'rindex(<#const char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'stack_t', 'abbr': 'typedef', 'word': 'stack_t', 'kind': 't'}
{'menu': 'printf(const char *, ...)', 'abbr': 'int', 'word': 'printf(<#const char *, ...#>)', 'kind': 'f'}
{'menu': 'clock_t', 'abbr': 'typedef', 'word': 'clock_t', 'kind': 't'}
{'menu': 'time_t', 'abbr': 'typedef', 'word': 'time_t', 'kind': 't'}
{'menu': 'operator new[](std::size_t, void *__p)', 'abbr': 'void *', 'word': 'operator new[](<#std::size_t#>, <#void *__p#>)', 'kind': 'f'}
{'menu': 'timespec', 'abbr': 'struct', 'word': 'timespec', 'kind': 't'}
{'menu': 'uselocale(locale_t)', 'abbr': 'locale_t', 'word': 'uselocale(<#locale_t#>)', 'kind': 'f'}
{'menu': 'snprintf(char *, size_t, const char *, ...)', 'abbr': 'int', 'word': 'snprintf(<#char *#>, <#size_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'pthread_rwlock_init(pthread_rwlock_t *, const pthread_rwlockattr_t *)', 'abbr': 'int', 'word': 'pthread_rwlock_init(<#pthread_rwlock_t *#>, <#const pthread_rwlockattr_t *#>)', 'kind': 'f'}
{'menu': 'vdprintf_l(int, locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vdprintf_l(<#int#>, <#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'operator delete(void *, void *)', 'abbr': 'void', 'word': 'operator delete(<#void *#>, <#void *#>)', 'kind': 'f'}
{'menu': 'strcpy(char *, const char *)', 'abbr': 'char *', 'word': 'strcpy(<#char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'strtoq(const char *, char **, int)', 'abbr': 'long long', 'word': 'strtoq(<#const char *#>, <#char **#>, <#int#>)', 'kind': 'f'}
{'menu': 'pthread_cond_destroy(pthread_cond_t *)', 'abbr': 'int', 'word': 'pthread_cond_destroy(<#pthread_cond_t *#>)', 'kind': 'f'}
{'menu': 'strcasecmp_l(const char *, const char *, locale_t)', 'abbr': 'int', 'word': 'strcasecmp_l(<#const char *#>, <#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'isascii(int _c)', 'abbr': 'int', 'word': 'isascii(<#int _c#>)', 'kind': 'f'}
{'menu': 'perror(const char *)', 'abbr': 'void', 'word': 'perror(<#const char *#>)', 'kind': 'f'}
{'menu': 'fputwc(wchar_t, FILE *)', 'abbr': 'wint_t', 'word': 'fputwc(<#wchar_t#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'wait3(int *, int, struct rusage *)', 'abbr': 'pid_t', 'word': 'wait3(<#int *#>, <#int#>, <#struct rusage *#>)', 'kind': 'f'}
{'menu': 'strtouq(const char *, char **, int)', 'abbr': 'unsigned long long', 'word': 'strtouq(<#const char *#>, <#char **#>, <#int#>)', 'kind': 'f'}
{'menu': '_opaque_pthread_condattr_t', 'abbr': 'struct', 'word': '_opaque_pthread_condattr_t', 'kind': 't'}
{'menu': 'wcswidth(const wchar_t *, size_t)', 'abbr': 'int', 'word': 'wcswidth(<#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'funopen(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), fpos_t (*)(void *, fpos_t, int), int (*)(void *))', 'abbr': 'FILE *', 'word': '(void *))', 'kind': 'f'}
{'menu': 'ffs(int)', 'abbr': 'int', 'word': 'ffs(<#int#>)', 'kind': 'f'}
{'menu': 'tm', 'abbr': 'struct', 'word': 'tm', 'kind': 't'}
{'menu': 'strlen(const char *)', 'abbr': 'size_t', 'word': 'strlen(<#const char *#>)', 'kind': 'f'}
{'menu': 'operator delete[](void *, void *)', 'abbr': 'void', 'word': 'operator delete[](<#void *#>, <#void *#>)', 'kind': 'f'}
{'menu': 'pthread_cond_broadcast(pthread_cond_t *)', 'abbr': 'int', 'word': 'pthread_cond_broadcast(<#pthread_cond_t *#>)', 'kind': 'f'}
{'menu': 'fwprintf(FILE *, const wchar_t *, ...)', 'abbr': 'int', 'word': 'fwprintf(<#FILE *#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': '_opaque_pthread_attr_t', 'abbr': 'struct', 'word': '_opaque_pthread_attr_t', 'kind': 't'}
{'menu': 'putchar(int)', 'abbr': 'int', 'word': 'putchar(<#int#>)', 'kind': 'f'}
{'menu': 'wscanf(const wchar_t *, ...)', 'abbr': 'int', 'word': 'wscanf(<#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'bcopy(const void *, void *, size_t)', 'abbr': 'void', 'word': 'bcopy(<#const void *#>, <#void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'ftello(FILE *)', 'abbr': 'off_t', 'word': 'ftello(<#FILE *#>)', 'kind': 'f'}
{'menu': 'srandomdev()', 'abbr': 'void', 'word': 'srandomdev()', 'kind': 'f'}
{'menu': 'strcasecmp(const char *, const char *)', 'abbr': 'int', 'word': 'strcasecmp(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'asprintf_l(char **, locale_t, const char *, ...)', 'abbr': 'int', 'word': 'asprintf_l(<#char **#>, <#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'wait4(pid_t, int *, int, struct rusage *)', 'abbr': 'pid_t', 'word': 'wait4(<#pid_t#>, <#int *#>, <#int#>, <#struct rusage *#>)', 'kind': 'f'}
{'menu': 'strerror(int)', 'abbr': 'char *', 'word': 'strerror(<#int#>)', 'kind': 'f'}
{'menu': 'reallocf(void *, size_t)', 'abbr': 'void *', 'word': 'reallocf(<#void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'bcmp(const void *, const void *, size_t)', 'abbr': 'int', 'word': 'bcmp(<#const void *#>, <#const void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'wmemset(wchar_t *, wchar_t, size_t)', 'abbr': 'wchar_t *', 'word': 'wmemset(<#wchar_t *#>, <#wchar_t#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'putc(int, FILE *)', 'abbr': 'int', 'word': 'putc(<#int#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'fseeko(FILE *, off_t, int)', 'abbr': 'int', 'word': 'fseeko(<#FILE *#>, <#off_t#>, <#int#>)', 'kind': 'f'}
{'menu': 'wprintf(const wchar_t *, ...)', 'abbr': 'int', 'word': 'wprintf(<#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'strncasecmp(const char *, const char *, size_t)', 'abbr': 'int', 'word': 'strncasecmp(<#const char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'fwide(FILE *, int)', 'abbr': 'int', 'word': 'fwide(<#FILE *#>, <#int#>)', 'kind': 'f'}
{'menu': 'pthread_rwlock_rdlock(pthread_rwlock_t *)', 'abbr': 'int', 'word': 'pthread_rwlock_rdlock(<#pthread_rwlock_t *#>)', 'kind': 'f'}
{'menu': 'iswhexnumber(wint_t _wc)', 'abbr': 'int', 'word': 'iswhexnumber(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'ffsl(long)', 'abbr': 'int', 'word': 'ffsl(<#long#>)', 'kind': 'f'}
{'menu': 'fcvt(double, int, int *, int *)', 'abbr': 'char *', 'word': 'fcvt(<#double#>, <#int#>, <#int *#>, <#int *#>)', 'kind': 'f'}
{'menu': 'getwc(FILE *)', 'abbr': 'wint_t', 'word': 'getwc(<#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_rwlock_tryrdlock(pthread_rwlock_t *)', 'abbr': 'int', 'word': 'pthread_rwlock_tryrdlock(<#pthread_rwlock_t *#>)', 'kind': 'f'}
{'menu': '_CurrentRuneLocale', 'abbr': '_RuneLocale *', 'word': '_CurrentRuneLocale', 'kind': 'v'}
{'menu': 'strncasecmp_l(const char *, const char *, size_t, locale_t)', 'abbr': 'int', 'word': 'strncasecmp_l(<#const char *#>, <#const char *#>, <#size_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'vwscanf(const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vwscanf(<#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'sigevent', 'abbr': 'struct', 'word': 'sigevent', 'kind': 't'}
{'menu': 'wait', 'abbr': 'union', 'word': 'wait', 'kind': 't'}
{'menu': 'freelocale(locale_t)', 'abbr': 'int', 'word': 'freelocale(<#locale_t#>)', 'kind': 'f'}
{'menu': 'fwrite(const void *, size_t, size_t, FILE *)', 'abbr': 'size_t', 'word': 'fwrite(<#const void *#>, <#size_t#>, <#size_t#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_cancel(pthread_t)', 'abbr': 'int', 'word': 'pthread_cancel(<#pthread_t#>)', 'kind': 'f'}
{'menu': 'alloca(size_t)', 'abbr': 'void *', 'word': 'alloca(<#size_t#>)', 'kind': 'f'}
{'menu': 'renameat(int, const char *, int, const char *)', 'abbr': 'int', 'word': 'renameat(<#int#>, <#const char *#>, <#int#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'pthread_rwlock_trywrlock(pthread_rwlock_t *)', 'abbr': 'int', 'word': 'pthread_rwlock_trywrlock(<#pthread_rwlock_t *#>)', 'kind': 'f'}
{'menu': 'vasprintf_l(char **, locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vasprintf_l(<#char **#>, <#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'ffsll(long long)', 'abbr': 'int', 'word': 'ffsll(<#long long#>)', 'kind': 'f'}
{'menu': '_RuneLocale', 'abbr': 'typedef', 'word': '_RuneLocale', 'kind': 't'}
{'menu': 'pthread_attr_setstacksize(pthread_attr_t *, size_t)', 'abbr': 'int', 'word': 'pthread_attr_setstacksize(<#pthread_attr_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'vswscanf(const wchar_t *, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vswscanf(<#const wchar_t *#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'sradixsort(const unsigned char **, int, const unsigned char *, unsigned int)', 'abbr': 'int', 'word': 'sradixsort(<#const unsigned char **#>, <#int#>, <#const unsigned char *#>, <#unsigned int#>)', 'kind': 'f'}
{'menu': 'swab(const void *, void *, ssize_t)', 'abbr': 'void', 'word': 'swab(<#const void *#>, <#void *#>, <#ssize_t#>)', 'kind': 'f'}
{'menu': 'fgetwln(FILE *, size_t *)', 'abbr': 'wchar_t *', 'word': 'fgetwln(<#FILE *#>, <#size_t *#>)', 'kind': 'f'}
{'menu': 'localeconv_l(locale_t)', 'abbr': 'struct lconv *', 'word': 'localeconv_l(<#locale_t#>)', 'kind': 'f'}
{'menu': 'sranddev()', 'abbr': 'void', 'word': 'sranddev()', 'kind': 'f'}
{'menu': 'fwscanf(FILE *, const wchar_t *, ...)', 'abbr': 'int', 'word': 'fwscanf(<#FILE *#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'fpos_t', 'abbr': 'typedef', 'word': 'fpos_t', 'kind': 't'}
{'menu': 'vswscanf_l(const wchar_t *, locale_t, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vswscanf_l(<#const wchar_t *#>, <#locale_t#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'iswideogram(wint_t _wc)', 'abbr': 'int', 'word': 'iswideogram(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'div_t', 'abbr': 'typedef', 'word': 'div_t', 'kind': 't'}
{'menu': '_DefaultRuneLocale', 'abbr': '_RuneLocale', 'word': '_DefaultRuneLocale', 'kind': 'v'}
{'menu': 'wcslcpy(wchar_t *, const wchar_t *, size_t)', 'abbr': 'size_t', 'word': 'wcslcpy(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'gcvt(double, int, char *)', 'abbr': 'char *', 'word': 'gcvt(<#double#>, <#int#>, <#char *#>)', 'kind': 'f'}
{'menu': 'gets(char *)', 'abbr': 'char *', 'word': 'gets(<#char *#>)', 'kind': 'f'}
{'menu': 'newlocale(int, const char *, locale_t)', 'abbr': 'locale_t', 'word': 'newlocale(<#int#>, <#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'fls(int)', 'abbr': 'int', 'word': 'fls(<#int#>)', 'kind': 'f'}
{'menu': 'strsep(char **, const char *)', 'abbr': 'char *', 'word': 'strsep(<#char **#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'strcasestr_l(const char *, const char *, locale_t)', 'abbr': 'char *', 'word': 'strcasestr_l(<#const char *#>, <#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'heapsort_b(void *, size_t, size_t, ^int(const void *, const void *))', 'abbr': 'int', 'word': 'heapsort_b(<#void *#>, <#size_t#>, <#size_t#>, <#^int(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'vwscanf_l(locale_t, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vwscanf_l(<#locale_t#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'ldiv_t', 'abbr': 'typedef', 'word': 'ldiv_t', 'kind': 't'}
{'menu': 'getchar()', 'abbr': 'int', 'word': 'getchar()', 'kind': 'f'}
{'menu': 'strmode(int, char *)', 'abbr': 'void', 'word': 'strmode(<#int#>, <#char *#>)', 'kind': 'f'}
{'menu': 'querylocale(int, locale_t)', 'abbr': 'const char *', 'word': 'querylocale(<#int#>, <#locale_t#>)', 'kind': 'f'}
{'menu': '_opaque_pthread_mutex_t', 'abbr': 'struct', 'word': '_opaque_pthread_mutex_t', 'kind': 't'}
{'menu': '_opaque_pthread_mutex_t()', 'abbr': 'struct', 'word': '_opaque_pthread_mutex_t()', 'kind': 'm'}
{'menu': '_opaque_pthread_mutex_t(const _opaque_pthread_mutex_t &)', 'abbr': 'struct', 'word': '_opaque_pthread_mutex_t(<#const _opaque_pthread_mutex_t &#>)', 'kind': 'm'}
{'menu': 'strcoll_l(const char *, const char *, locale_t)', 'abbr': 'int', 'word': 'strcoll_l(<#const char *#>, <#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'getwchar()', 'abbr': 'wint_t', 'word': 'getwchar()', 'kind': 'f'}
{'menu': 'wcslcat(wchar_t *, const wchar_t *, size_t)', 'abbr': 'size_t', 'word': 'wcslcat(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'radixsort(const unsigned char **, int, const unsigned char *, unsigned int)', 'abbr': 'int', 'word': 'radixsort(<#const unsigned char **#>, <#int#>, <#const unsigned char *#>, <#unsigned int#>)', 'kind': 'f'}
{'menu': 'setprogname(const char *)', 'abbr': 'void', 'word': 'setprogname(<#const char *#>)', 'kind': 'f'}
{'menu': 'getc(FILE *)', 'abbr': 'int', 'word': 'getc(<#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_attr_setstackaddr(pthread_attr_t *, void *)', 'abbr': 'int', 'word': 'pthread_attr_setstackaddr(<#pthread_attr_t *#>, <#void *#>)', 'kind': 'f'}
{'menu': 'uid_t', 'abbr': 'typedef', 'word': 'uid_t', 'kind': 't'}
{'menu': 'sigval', 'abbr': 'union', 'word': 'sigval', 'kind': 't'}
{'menu': 'vfwscanf(FILE *, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vfwscanf(<#FILE *#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'pthread_rwlock_wrlock(pthread_rwlock_t *)', 'abbr': 'int', 'word': 'pthread_rwlock_wrlock(<#pthread_rwlock_t *#>)', 'kind': 'f'}
{'menu': 'ucontext_t', 'abbr': 'typedef', 'word': 'ucontext_t', 'kind': 't'}
{'menu': 'mergesort(void *, size_t, size_t, int (*)(const void *, const void *))', 'abbr': 'int', 'word': 'mergesort(<#void *#>, <#size_t#>, <#size_t#>, <#int (*)(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'off_t', 'abbr': 'typedef', 'word': 'off_t', 'kind': 't'}
{'menu': 'ctime_r(const time_t *, char *)', 'abbr': 'char *', 'word': 'ctime_r(<#const time_t *#>, <#char *#>)', 'kind': 'f'}
{'menu': 'wmemchr(const wchar_t *, wchar_t, size_t)', 'abbr': 'wchar_t *', 'word': 'wmemchr(<#const wchar_t *#>, <#wchar_t#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'uint_least64_t', 'abbr': 'typedef', 'word': 'uint_least64_t', 'kind': 't'}
{'menu': 'iswxdigit(wint_t _wc)', 'abbr': 'int', 'word': 'iswxdigit(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'wprintf_l(locale_t, const wchar_t *, ...)', 'abbr': 'int', 'word': 'wprintf_l(<#locale_t#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'pthread_attr_setstack(pthread_attr_t *, void *, size_t)', 'abbr': 'int', 'word': 'pthread_attr_setstack(<#pthread_attr_t *#>, <#void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'int_fast8_t', 'abbr': 'typedef', 'word': 'int_fast8_t', 'kind': 't'}
{'menu': 'getloadavg(double *, int)', 'abbr': 'int', 'word': 'getloadavg(<#double *#>, <#int#>)', 'kind': 'f'}
{'menu': 'strlcpy(char *, const char *, size_t)', 'abbr': 'size_t', 'word': 'strlcpy(<#char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'vfscanf_l(FILE *, locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vfscanf_l(<#FILE *#>, <#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'pthread_from_mach_thread_np(mach_port_t)', 'abbr': 'pthread_t', 'word': 'pthread_from_mach_thread_np(<#mach_port_t#>)', 'kind': 'f'}
{'menu': 'int_fast16_t', 'abbr': 'typedef', 'word': 'int_fast16_t', 'kind': 't'}
{'menu': 'int_fast32_t', 'abbr': 'typedef', 'word': 'int_fast32_t', 'kind': 't'}
{'menu': 'pthread_mutexattr_setprioceiling(pthread_mutexattr_t *, int)', 'abbr': 'int', 'word': 'pthread_mutexattr_setprioceiling(<#pthread_mutexattr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'fseek(FILE *, long, int)', 'abbr': 'int', 'word': 'fseek(<#FILE *#>, <#long#>, <#int#>)', 'kind': 'f'}
{'menu': 'int_fast64_t', 'abbr': 'typedef', 'word': 'int_fast64_t', 'kind': 't'}
{'menu': 'iswspace(wint_t _wc)', 'abbr': 'int', 'word': 'iswspace(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'asctime_r(const struct tm *, char *)', 'abbr': 'char *', 'word': 'asctime_r(<#const struct tm *#>, <#char *#>)', 'kind': 'f'}
{'menu': 'getprogname()', 'abbr': 'const char *', 'word': 'getprogname()', 'kind': 'f'}
{'menu': 'strlcat(char *, const char *, size_t)', 'abbr': 'size_t', 'word': 'strlcat(<#char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'int_least64_t', 'abbr': 'typedef', 'word': 'int_least64_t', 'kind': 't'}
{'menu': 'size_t', 'abbr': 'typedef', 'word': 'size_t', 'kind': 't'}
{'menu': 'strcoll(const char *, const char *)', 'abbr': 'int', 'word': 'strcoll(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'qsort_r(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *))', 'abbr': 'void', 'word': 'qsort_r(<#void *#>, <#size_t#>, <#size_t#>, <#void *#>, <#int (*)(void *, const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'wscanf_l(locale_t, const wchar_t *, ...)', 'abbr': 'int', 'word': 'wscanf_l(<#locale_t#>, <#const wchar_t *, ...#>)', 'kind': 'f'}
{'menu': 'tempnam(const char *, const char *)', 'abbr': 'char *', 'word': 'tempnam(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'uint_least8_t', 'abbr': 'typedef', 'word': 'uint_least8_t', 'kind': 't'}
{'menu': 'mbstate_t', 'abbr': 'typedef', 'word': 'mbstate_t', 'kind': 't'}
{'menu': 'iswupper(wint_t _wc)', 'abbr': 'int', 'word': 'iswupper(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'uint_least16_t', 'abbr': 'typedef', 'word': 'uint_least16_t', 'kind': 't'}
{'menu': 'ct_rune_t', 'abbr': 'typedef', 'word': 'ct_rune_t', 'kind': 't'}
{'menu': 'setrlimit(int, const struct rlimit *)', 'abbr': 'int', 'word': 'setrlimit(<#int#>, <#const struct rlimit *#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_setprotocol(pthread_mutexattr_t *, int)', 'abbr': 'int', 'word': 'pthread_mutexattr_setprotocol(<#pthread_mutexattr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'uint_least32_t', 'abbr': 'typedef', 'word': 'uint_least32_t', 'kind': 't'}
{'menu': 'vscanf_l(locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vscanf_l(<#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'rune_t', 'abbr': 'typedef', 'word': 'rune_t', 'kind': 't'}
{'menu': 'wctrans_l(const char *, locale_t)', 'abbr': 'wctrans_t', 'word': 'wctrans_l(<#const char *#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_setpshared(pthread_mutexattr_t *, int)', 'abbr': 'int', 'word': 'pthread_mutexattr_setpshared(<#pthread_mutexattr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'uintptr_t', 'abbr': 'typedef', 'word': 'uintptr_t', 'kind': 't'}
{'menu': 'ftell(FILE *)', 'abbr': 'long', 'word': 'ftell(<#FILE *#>)', 'kind': 'f'}
{'menu': 'intmax_t', 'abbr': 'typedef', 'word': 'intmax_t', 'kind': 't'}
{'menu': 'idtype_t', 'abbr': 'typedef', 'word': 'idtype_t', 'kind': 't'}
{'menu': 'wcsnrtombs(char *, const wchar_t **, size_t, size_t, mbstate_t *)', 'abbr': 'size_t', 'word': 'wcsnrtombs(<#char *#>, <#const wchar_t **#>, <#size_t#>, <#size_t#>, <#mbstate_t *#>)', 'kind': 'f'}
{'menu': 'pthread_create_suspended_np(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *)', 'abbr': 'int', 'word': 'pthread_create_suspended_np(<#pthread_t *#>, <#const pthread_attr_t *#>, <#void *(*)(void *)#>, <#void *#>)', 'kind': 'f'}
{'menu': 'qsort_b(void *, size_t, size_t, ^int(const void *, const void *))', 'abbr': 'void', 'word': 'qsort_b(<#void *#>, <#size_t#>, <#size_t#>, <#^int(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'uintmax_t', 'abbr': 'typedef', 'word': 'uintmax_t', 'kind': 't'}
{'menu': 'digittoint_l(int c, locale_t l)', 'abbr': 'int', 'word': 'digittoint_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'P_PGID', 'abbr': 'enumidtype_t', 'word': 'P_PGID', 'kind': 't'}
{'menu': 'strcmp(const char *, const char *)', 'abbr': 'int', 'word': 'strcmp(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'wcstoul(const wchar_t *, wchar_t **, int)', 'abbr': 'unsigned long', 'word': 'wcstoul(<#const wchar_t *#>, <#wchar_t **#>, <#int#>)', 'kind': 'f'}
{'menu': 'wctype(const char *)', 'abbr': 'wctype_t', 'word': 'wctype(<#const char *#>)', 'kind': 'f'}
{'menu': 'gmtime_r(const time_t *, struct tm *)', 'abbr': 'struct tm *', 'word': 'gmtime_r(<#const time_t *#>, <#struct tm *#>)', 'kind': 'f'}
{'menu': 'va_list', 'abbr': 'typedef', 'word': 'va_list', 'kind': 't'}
{'menu': 'P_PID', 'abbr': 'enumidtype_t', 'word': 'P_PID', 'kind': 't'}
{'menu': 'P_ALL', 'abbr': 'enumidtype_t', 'word': 'P_ALL', 'kind': 't'}
{'menu': 'pthread_kill(pthread_t, int)', 'abbr': 'int', 'word': 'pthread_kill(<#pthread_t#>, <#int#>)', 'kind': 'f'}
{'menu': '_OSSwapInt16(__uint16_t _data)', 'abbr': '__uint16_t', 'word': '_OSSwapInt16(<#__uint16_t _data#>)', 'kind': 'f'}
{'menu': 'pid_t', 'abbr': 'typedef', 'word': 'pid_t', 'kind': 't'}
{'menu': 'towlower(wint_t _wc)', 'abbr': 'wint_t', 'word': 'towlower(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'vsnprintf_l(char *, size_t, locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vsnprintf_l(<#char *#>, <#size_t#>, <#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'fsetpos(FILE *, const fpos_t *)', 'abbr': 'int', 'word': 'fsetpos(<#FILE *#>, <#const fpos_t *#>)', 'kind': 'f'}
{'menu': 'heapsort(void *, size_t, size_t, int (*)(const void *, const void *))', 'abbr': 'int', 'word': 'heapsort(<#void *#>, <#size_t#>, <#size_t#>, <#int (*)(const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'uint_fast8_t', 'abbr': 'typedef', 'word': 'uint_fast8_t', 'kind': 't'}
{'menu': 'uint_fast16_t', 'abbr': 'typedef', 'word': 'uint_fast16_t', 'kind': 't'}
{'menu': 'putw(int, FILE *)', 'abbr': 'int', 'word': 'putw(<#int#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_attr_setscope(pthread_attr_t *, int)', 'abbr': 'int', 'word': 'pthread_attr_setscope(<#pthread_attr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'pthread_mutexattr_settype(pthread_mutexattr_t *, int)', 'abbr': 'int', 'word': 'pthread_mutexattr_settype(<#pthread_mutexattr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'wcstol(const wchar_t *, wchar_t **, int)', 'abbr': 'long', 'word': 'wcstol(<#const wchar_t *#>, <#wchar_t **#>, <#int#>)', 'kind': 'f'}
{'menu': 'pthread_attr_setschedpolicy(pthread_attr_t *, int)', 'abbr': 'int', 'word': 'pthread_attr_setschedpolicy(<#pthread_attr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'strchr(const char *, int)', 'abbr': 'char *', 'word': 'strchr(<#const char *#>, <#int#>)', 'kind': 'f'}
{'menu': 'uint_fast32_t', 'abbr': 'typedef', 'word': 'uint_fast32_t', 'kind': 't'}
{'menu': '_OSSwapInt64(__uint64_t _data)', 'abbr': '__uint64_t', 'word': '_OSSwapInt64(<#__uint64_t _data#>)', 'kind': 'f'}
{'menu': 'uint_fast64_t', 'abbr': 'typedef', 'word': 'uint_fast64_t', 'kind': 't'}
{'menu': 'getw(FILE *)', 'abbr': 'int', 'word': 'getw(<#FILE *#>)', 'kind': 'f'}
{'menu': 'towupper(wint_t _wc)', 'abbr': 'wint_t', 'word': 'towupper(<#wint_t _wc#>)', 'kind': 'f'}
{'menu': 'strnstr(const char *, const char *, size_t)', 'abbr': 'char *', 'word': 'strnstr(<#const char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'isalnum_l(int c, locale_t l)', 'abbr': 'int', 'word': 'isalnum_l(<#int c#>, <#locale_t l#>)', 'kind': 'f'}
{'menu': 'vfwscanf_l(FILE *, locale_t, const wchar_t *, __va_list_tag *)', 'abbr': 'int', 'word': 'vfwscanf_l(<#FILE *#>, <#locale_t#>, <#const wchar_t *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': '_OSSwapInt32(__uint32_t _data)', 'abbr': '__uint32_t', 'word': '_OSSwapInt32(<#__uint32_t _data#>)', 'kind': 'f'}
{'menu': 'intptr_t', 'abbr': 'typedef', 'word': 'intptr_t', 'kind': 't'}
{'menu': 'id_t', 'abbr': 'typedef', 'word': 'id_t', 'kind': 't'}
{'menu': 'wait(int *)', 'abbr': 'pid_t', 'word': 'wait(<#int *#>)', 'kind': 'f'}
{'menu': 'sig_atomic_t', 'abbr': 'typedef', 'word': 'sig_atomic_t', 'kind': 't'}
{'menu': 'devname(dev_t, mode_t)', 'abbr': 'char *', 'word': 'devname(<#dev_t#>, <#mode_t#>)', 'kind': 'f'}
{'menu': 'pthread_attr_setschedparam(pthread_attr_t *, const struct sched_param *)', 'abbr': 'int', 'word': 'pthread_attr_setschedparam(<#pthread_attr_t *#>, <#const struct sched_param *#>)', 'kind': 'f'}
{'menu': 'strcasestr(const char *, const char *)', 'abbr': 'char *', 'word': 'strcasestr(<#const char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'mcontext_t', 'abbr': 'typedef', 'word': 'mcontext_t', 'kind': 't'}
{'menu': 'psort_r(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *))', 'abbr': 'void', 'word': 'psort_r(<#void *#>, <#size_t#>, <#size_t#>, <#void *#>, <#int (*)(void *, const void *, const void *)#>)', 'kind': 'f'}
{'menu': 'getrusage(int, struct rusage *)', 'abbr': 'int', 'word': 'getrusage(<#int#>, <#struct rusage *#>)', 'kind': 'f'}
{'menu': 'wcswidth_l(const wchar_t *, size_t, locale_t)', 'abbr': 'int', 'word': 'wcswidth_l(<#const wchar_t *#>, <#size_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'operator delete(void *__p, const std::nothrow_t &)', 'abbr': 'void', 'word': 'operator delete(<#void *__p#>, <#const std::nothrow_t &#>)', 'kind': 'f'}
{'menu': 'strcat(char *, const char *)', 'abbr': 'char *', 'word': 'strcat(<#char *#>, <#const char *#>)', 'kind': 'f'}
{'menu': 'fgetwc(FILE *)', 'abbr': 'wint_t', 'word': 'fgetwc(<#FILE *#>)', 'kind': 'f'}
{'menu': 'strncat(char *, const char *, size_t)', 'abbr': 'char *', 'word': 'strncat(<#char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'pthread_yield_np()', 'abbr': 'void', 'word': 'pthread_yield_np()', 'kind': 'f'}
{'menu': 'putchar_unlocked(int)', 'abbr': 'int', 'word': 'putchar_unlocked(<#int#>)', 'kind': 'f'}
{'menu': 'operator delete(void *__p)', 'abbr': 'void', 'word': 'operator delete(<#void *__p#>)', 'kind': 'f'}
{'menu': 'memset_pattern16(void *, const void *, size_t)', 'abbr': 'void', 'word': 'memset_pattern16(<#void *#>, <#const void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'wcsxfrm_l(wchar_t *, const wchar_t *, size_t, locale_t)', 'abbr': 'size_t', 'word': 'wcsxfrm_l(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'putc_unlocked(int, FILE *)', 'abbr': 'int', 'word': 'putc_unlocked(<#int#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_once(pthread_once_t *, void (*)())', 'abbr': 'int', 'word': 'pthread_once(<#pthread_once_t *#>, <#void (*)()#>)', 'kind': 'f'}
{'menu': 'vsscanf_l(const char *, locale_t, const char *, __va_list_tag *)', 'abbr': 'int', 'word': 'vsscanf_l(<#const char *#>, <#locale_t#>, <#const char *#>, <#__va_list_tag *#>)', 'kind': 'f'}
{'menu': 'wmemmove(wchar_t *, const wchar_t *, size_t)', 'abbr': 'wchar_t *', 'word': 'wmemmove(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'memset(void *, int, size_t)', 'abbr': 'void *', 'word': 'memset(<#void *#>, <#int#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'towctrans_l(wint_t, wctrans_t, locale_t)', 'abbr': 'wint_t', 'word': 'towctrans_l(<#wint_t#>, <#wctrans_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'devname_r(dev_t, mode_t, char *buf, int len)', 'abbr': 'char *', 'word': 'devname_r(<#dev_t#>, <#mode_t#>, <#char *buf#>, <#int len#>)', 'kind': 'f'}
{'menu': 'btowc(int)', 'abbr': 'wint_t', 'word': 'btowc(<#int#>)', 'kind': 'f'}
{'menu': 'fread(void *, size_t, size_t, FILE *)', 'abbr': 'size_t', 'word': 'fread(<#void *#>, <#size_t#>, <#size_t#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'waitpid(pid_t, int *, int)', 'abbr': 'pid_t', 'word': 'waitpid(<#pid_t#>, <#int *#>, <#int#>)', 'kind': 'f'}
{'menu': 'memmove(void *, const void *, size_t)', 'abbr': 'void *', 'word': 'memmove(<#void *#>, <#const void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'fgetws(wchar_t *, int, FILE *)', 'abbr': 'wchar_t *', 'word': 'fgetws(<#wchar_t *#>, <#int#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'wctob_l(wint_t, locale_t)', 'abbr': 'int', 'word': 'wctob_l(<#wint_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'strncpy(char *, const char *, size_t)', 'abbr': 'char *', 'word': 'strncpy(<#char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'operator new(std::size_t __sz, const std::nothrow_t &)', 'abbr': 'void *', 'word': 'operator new(<#std::size_t __sz#>, <#const std::nothrow_t &#>)', 'kind': 'f'}
{'menu': 'getchar_unlocked()', 'abbr': 'int', 'word': 'getchar_unlocked()', 'kind': 'f'}
{'menu': 'pthread_attr_setinheritsched(pthread_attr_t *, int)', 'abbr': 'int', 'word': 'pthread_attr_setinheritsched(<#pthread_attr_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'wmemcpy(wchar_t *, const wchar_t *, size_t)', 'abbr': 'wchar_t *', 'word': 'wmemcpy(<#wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'getc_unlocked(FILE *)', 'abbr': 'int', 'word': 'getc_unlocked(<#FILE *#>)', 'kind': 'f'}
{'menu': 'fscanf(FILE *, const char *, ...)', 'abbr': 'int', 'word': 'fscanf(<#FILE *#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'iswspecial_l(wint_t _wc, locale_t _l)', 'abbr': 'int', 'word': 'iswspecial_l(<#wint_t _wc#>, <#locale_t _l#>)', 'kind': 'f'}
{'menu': 'setpriority(int, id_t, int)', 'abbr': 'int', 'word': 'setpriority(<#int#>, <#id_t#>, <#int#>)', 'kind': 'f'}
{'menu': 'getbsize(int *, long *)', 'abbr': 'char *', 'word': 'getbsize(<#int *#>, <#long *#>)', 'kind': 'f'}
{'menu': 'memcpy(void *, const void *, size_t)', 'abbr': 'void *', 'word': 'memcpy(<#void *#>, <#const void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'funlockfile(FILE *)', 'abbr': 'void', 'word': 'funlockfile(<#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_rwlock_destroy(pthread_rwlock_t *)', 'abbr': 'int', 'word': 'pthread_rwlock_destroy(<#pthread_rwlock_t *#>)', 'kind': 'f'}
{'menu': 'dprintf_l(int, locale_t, const char *, ...)', 'abbr': 'int', 'word': 'dprintf_l(<#int#>, <#locale_t#>, <#const char *, ...#>)', 'kind': 'f'}
{'menu': 'pthread_attr_setguardsize(pthread_attr_t *, size_t)', 'abbr': 'int', 'word': 'pthread_attr_setguardsize(<#pthread_attr_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'wcwidth_l(wchar_t, locale_t)', 'abbr': 'int', 'word': 'wcwidth_l(<#wchar_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'nextwctype_l(wint_t, wctype_t, locale_t)', 'abbr': 'wint_t', 'word': 'nextwctype_l(<#wint_t#>, <#wctype_t#>, <#locale_t#>)', 'kind': 'f'}
{'menu': 'wmemcmp(const wchar_t *, const wchar_t *, size_t)', 'abbr': 'int', 'word': 'wmemcmp(<#const wchar_t *#>, <#const wchar_t *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'ftrylockfile(FILE *)', 'abbr': 'int', 'word': 'ftrylockfile(<#FILE *#>)', 'kind': 'f'}
{'menu': 'strncmp(const char *, const char *, size_t)', 'abbr': 'int', 'word': 'strncmp(<#const char *#>, <#const char *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'memset_pattern8(void *, const void *, size_t)', 'abbr': 'void', 'word': 'memset_pattern8(<#void *#>, <#const void *#>, <#size_t#>)', 'kind': 'f'}
{'menu': 'freopen(const char *, const char *, FILE *)', 'abbr': 'FILE *', 'word': 'freopen(<#const char *#>, <#const char *#>, <#FILE *#>)', 'kind': 'f'}
{'menu': 'pthread_sigmask(int, const sigset_t *, sigset_t *)', 'abbr': 'int', 'word': 'pthread_sigmask(<#int#>, <#const sigset_t *#>, <#sigset_t *#>)', 'kind': 'f'}
{'menu': 'waitid(idtype_t, id_t, siginfo_t *, int)', 'abbr': 'int', 'word': 'waitid(<#idtype_t#>, <#id_t#>, <#siginfo_t *#>, <#int#>)', 'kind': 'f'}
{'menu': 'typedef type name', 'abbr': 'int', 'word': 'typedef <#type#> <#name#>', 'kind': 'f'}
{'menu': 'try{statements\n}catch(declaration){statements\n}', 'abbr': 'int', 'word': 'try{<#statements#>\n}catch(<#declaration#>){<#statements#>\n}', 'kind': 'f'}
{'menu': 'if(condition){statements\n}', 'abbr': 'int', 'word': 'if(<#condition#>){<#statements#>\n}', 'kind': 'f'}
{'menu': 'switch(condition){\n}', 'abbr': 'int', 'word': 'switch(<#condition#>){\n}', 'kind': 'f'}
{'menu': 'while(condition){statements\n}', 'abbr': 'int', 'word': 'while(<#condition#>){<#statements#>\n}', 'kind': 'f'}
{'menu': 'do{statements\n}while(expression)', 'abbr': 'int', 'word': 'do{<#statements#>\n}while(<#expression#>)', 'kind': 'f'}
{'menu': 'for(init-statement;condition;inc-expression){\nstatements\n}', 'abbr': 'int', 'word': 'for(<#init-statement#>;<#condition#>;<#inc-expression#>){\n<#statements#>\n}', 'kind': 'f'}
{'menu': 'return expression', 'abbr': 'int', 'word': 'return <#expression#>', 'kind': 'f'}
{'menu': 'goto label', 'abbr': 'int', 'word': 'goto <#label#>', 'kind': 'f'}
{'menu': 'using namespace identifier', 'abbr': 'int', 'word': 'using namespace <#identifier#>', 'kind': 'f'}
{'menu': 'extern', 'abbr': 'int', 'word': 'extern', 'kind': 'f'}
{'menu': 'static', 'abbr': 'int', 'word': 'static', 'kind': 'f'}
{'menu': 'true', 'abbr': 'bool', 'word': 'true', 'kind': 'f'}
{'menu': 'false', 'abbr': 'bool', 'word': 'false', 'kind': 'f'}
{'menu': 'dynamic_cast<type>(expression)', 'abbr': 'bool', 'word': 'dynamic_cast<<#type#>>(<#expression#>)', 'kind': 'f'}
{'menu': 'static_cast<type>(expression)', 'abbr': 'bool', 'word': 'static_cast<<#type#>>(<#expression#>)', 'kind': 'f'}
{'menu': 'reinterpret_cast<type>(expression)', 'abbr': 'bool', 'word': 'reinterpret_cast<<#type#>>(<#expression#>)', 'kind': 'f'}
{'menu': 'const_cast<type>(expression)', 'abbr': 'bool', 'word': 'const_cast<<#type#>>(<#expression#>)', 'kind': 'f'}
{'menu': 'typeid(expression-or-type)', 'abbr': 'std::type_info', 'word': 'typeid(<#expression-or-type#>)', 'kind': 'f'}
{'menu': 'new type(expressions)', 'abbr': 'std::type_info', 'word': 'new <#type#>(<#expressions#>)', 'kind': 'f'}
{'menu': 'new type[size](expressions)', 'abbr': 'std::type_info', 'word': 'new <#type#>[<#size#>](<#expressions#>)', 'kind': 'f'}
{'menu': 'delete expression', 'abbr': 'void', 'word': 'delete <#expression#>', 'kind': 'f'}
{'menu': 'delete [] expression', 'abbr': 'void', 'word': 'delete [] <#expression#>', 'kind': 'f'}
{'menu': 'throw expression', 'abbr': 'void', 'word': 'throw <#expression#>', 'kind': 'f'}
{'menu': 'sizeof(expression-or-type)', 'abbr': 'size_t', 'word': 'sizeof(<#expression-or-type#>)', 'kind': 'f'}
{'menu': 'short', 'abbr': 'size_t', 'word': 'short', 'kind': 'f'}
{'menu': 'long', 'abbr': 'size_t', 'word': 'long', 'kind': 'f'}
{'menu': 'signed', 'abbr': 'size_t', 'word': 'signed', 'kind': 'f'}
{'menu': 'unsigned', 'abbr': 'size_t', 'word': 'unsigned', 'kind': 'f'}
{'menu': 'void', 'abbr': 'size_t', 'word': 'void', 'kind': 'f'}
{'menu': 'char', 'abbr': 'size_t', 'word': 'char', 'kind': 'f'}
{'menu': 'int', 'abbr': 'size_t', 'word': 'int', 'kind': 'f'}
{'menu': 'float', 'abbr': 'size_t', 'word': 'float', 'kind': 'f'}
{'menu': 'double', 'abbr': 'size_t', 'word': 'double', 'kind': 'f'}
{'menu': 'enum', 'abbr': 'size_t', 'word': 'enum', 'kind': 'f'}
{'menu': 'struct', 'abbr': 'size_t', 'word': 'struct', 'kind': 'f'}
{'menu': 'union', 'abbr': 'size_t', 'word': 'union', 'kind': 'f'}
{'menu': 'const', 'abbr': 'size_t', 'word': 'const', 'kind': 'f'}
{'menu': 'volatile', 'abbr': 'size_t', 'word': 'volatile', 'kind': 'f'}
{'menu': 'bool', 'abbr': 'size_t', 'word': 'bool', 'kind': 'f'}
{'menu': 'class', 'abbr': 'size_t', 'word': 'class', 'kind': 'f'}
{'menu': 'wchar_t', 'abbr': 'size_t', 'word': 'wchar_t', 'kind': 'f'}
{'menu': 'typename qualifier::name', 'abbr': 'size_t', 'word': 'typename <#qualifier#>::<#name#>', 'kind': 'f'}
{'menu': 'typeof expression', 'abbr': 'size_t', 'word': 'typeof <#expression#>', 'kind': 'f'}
{'menu': 'typeof(type)', 'abbr': 'size_t', 'word': 'typeof(<#type#>)', 'kind': 'f'}
{'menu': '_Nonnull', 'abbr': 'size_t', 'word': '_Nonnull', 'kind': 'f'}
{'menu': '_Null_unspecified', 'abbr': 'size_t', 'word': '_Null_unspecified', 'kind': 'f'}
{'menu': '_Nullable', 'abbr': 'size_t', 'word': '_Nullable', 'kind': 'f'}
{'menu': 'operator', 'abbr': 'size_t', 'word': 'operator', 'kind': 'f'}
{'menu': '__PRETTY_FUNCTION__', 'abbr': 'size_t', 'word': '__PRETTY_FUNCTION__', 'kind': 'f'}
{'menu': '__FUNCTION__', 'abbr': 'size_t', 'word': '__FUNCTION__', 'kind': 'f'}
{'menu': '_LIBCPP_BOOL_CONSTANT(__b)', 'abbr': 'size_t', 'word': '_LIBCPP_BOOL_CONSTANT(<#__b#>)', 'kind': 'M'}
{'menu': 'EXIT_FAILURE', 'abbr': 'size_t', 'word': 'EXIT_FAILURE', 'kind': 'M'}
{'menu': 'RAND_MAX', 'abbr': 'size_t', 'word': 'RAND_MAX', 'kind': 'M'}
{'menu': 'EXIT_SUCCESS', 'abbr': 'size_t', 'word': 'EXIT_SUCCESS', 'kind': 'M'}
{'menu': '__alloca(size)', 'abbr': 'size_t', 'word': '__alloca(<#size#>)', 'kind': 'M'}
{'menu': 'w_termsig', 'abbr': 'size_t', 'word': 'w_termsig', 'kind': 'M'}
{'menu': 'w_coredump', 'abbr': 'size_t', 'word': 'w_coredump', 'kind': 'M'}
{'menu': 'w_retcode', 'abbr': 'size_t', 'word': 'w_retcode', 'kind': 'M'}
{'menu': 'w_stopval', 'abbr': 'size_t', 'word': 'w_stopval', 'kind': 'M'}
{'menu': 'w_stopsig', 'abbr': 'size_t', 'word': 'w_stopsig', 'kind': 'M'}
{'menu': '__LP64__', 'abbr': 'size_t', 'word': '__LP64__', 'kind': 'M'}
{'menu': '__CHAR_BIT__', 'abbr': 'size_t', 'word': '__CHAR_BIT__', 'kind': 'M'}
{'menu': '__LITTLE_ENDIAN__', 'abbr': 'size_t', 'word': '__LITTLE_ENDIAN__', 'kind': 'M'}
{'menu': '_LP64', 'abbr': 'size_t', 'word': '_LP64', 'kind': 'M'}
{'menu': '__INT_MAX__', 'abbr': 'size_t', 'word': '__INT_MAX__', 'kind': 'M'}
{'menu': '__LONG_MAX__', 'abbr': 'size_t', 'word': '__LONG_MAX__', 'kind': 'M'}
{'menu': '__LONG_LONG_MAX__', 'abbr': 'size_t', 'word': '__LONG_LONG_MAX__', 'kind': 'M'}
{'menu': '__SCHAR_MAX__', 'abbr': 'size_t', 'word': '__SCHAR_MAX__', 'kind': 'M'}
{'menu': '__SHRT_MAX__', 'abbr': 'size_t', 'word': '__SHRT_MAX__', 'kind': 'M'}
{'menu': '__SIZE_MAX__', 'abbr': 'size_t', 'word': '__SIZE_MAX__', 'kind': 'M'}
{'menu': '__UINTMAX_MAX__', 'abbr': 'size_t', 'word': '__UINTMAX_MAX__', 'kind': 'M'}
{'menu': '__WCHAR_MAX__', 'abbr': 'size_t', 'word': '__WCHAR_MAX__', 'kind': 'M'}
{'menu': '__INTMAX_MAX__', 'abbr': 'size_t', 'word': '__INTMAX_MAX__', 'kind': 'M'}
{'menu': '__UINTPTR_MAX__', 'abbr': 'size_t', 'word': '__UINTPTR_MAX__', 'kind': 'M'}
{'menu': '__SIZEOF_DOUBLE__', 'abbr': 'size_t', 'word': '__SIZEOF_DOUBLE__', 'kind': 'M'}
{'menu': '__PTRDIFF_MAX__', 'abbr': 'size_t', 'word': '__PTRDIFF_MAX__', 'kind': 'M'}
{'menu': '__INTPTR_MAX__', 'abbr': 'size_t', 'word': '__INTPTR_MAX__', 'kind': 'M'}
{'menu': '__llvm__', 'abbr': 'size_t', 'word': '__llvm__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__clang_minor__', 'abbr': 'size_t', 'word': '__clang_minor__', 'kind': 'M'}
{'menu': '__clang__', 'abbr': 'size_t', 'word': '__clang__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__clang_major__', 'abbr': 'size_t', 'word': '__clang_major__', 'kind': 'M'}
{'menu': '__clang_version__', 'abbr': 'size_t', 'word': '__clang_version__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__clang_patchlevel__', 'abbr': 'size_t', 'word': '__clang_patchlevel__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9', 'kind': 'M'}
{'menu': '__GNUC_PATCHLEVEL__', 'abbr': 'size_t', 'word': '__GNUC_PATCHLEVEL__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__GNUC_MINOR__', 'abbr': 'size_t', 'word': '__GNUC_MINOR__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10', 'kind': 'M'}
{'menu': '__GXX_ABI_VERSION', 'abbr': 'size_t', 'word': '__GXX_ABI_VERSION', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1(<#x#>)', 'kind': 'M'}
{'menu': '__GNUC__', 'abbr': 'size_t', 'word': '__GNUC__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__ATOMIC_CONSUME', 'abbr': 'size_t', 'word': '__ATOMIC_CONSUME', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9', 'kind': 'M'}
{'menu': '__ATOMIC_RELAXED', 'abbr': 'size_t', 'word': '__ATOMIC_RELAXED', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0(<#x#>)', 'kind': 'M'}
{'menu': 'EQFULL', 'abbr': 'size_t', 'word': 'EQFULL', 'kind': 'M'}
{'menu': 'ELAST', 'abbr': 'size_t', 'word': 'ELAST', 'kind': 'M'}
{'menu': '__ATOMIC_RELEASE', 'abbr': 'size_t', 'word': '__ATOMIC_RELEASE', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__ATOMIC_ACQUIRE', 'abbr': 'size_t', 'word': '__ATOMIC_ACQUIRE', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0(<#x#>)', 'kind': 'M'}
{'menu': '__ATOMIC_SEQ_CST', 'abbr': 'size_t', 'word': '__ATOMIC_SEQ_CST', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1(<#x#>)', 'kind': 'M'}
{'menu': '__ATOMIC_ACQ_REL', 'abbr': 'size_t', 'word': '__ATOMIC_ACQ_REL', 'kind': 'M'}
{'menu': '__VERSION__', 'abbr': 'size_t', 'word': '__VERSION__', 'kind': 'M'}
{'menu': '__PRAGMA_REDEFINE_EXTNAME', 'abbr': 'size_t', 'word': '__PRAGMA_REDEFINE_EXTNAME', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3(<#x#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__cpp_exceptions', 'abbr': 'size_t', 'word': '__cpp_exceptions', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0(<#x#>)', 'kind': 'M'}
{'menu': '__cpp_rtti', 'abbr': 'size_t', 'word': '__cpp_rtti', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__block', 'abbr': 'size_t', 'word': '__block', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1(<#x#>)', 'kind': 'M'}
{'menu': '__CONSTANT_CFSTRINGS__', 'abbr': 'size_t', 'word': '__CONSTANT_CFSTRINGS__', 'kind': 'M'}
{'menu': '__BLOCKS__', 'abbr': 'size_t', 'word': '__BLOCKS__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2(<#x#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__GXX_RTTI', 'abbr': 'size_t', 'word': '__GXX_RTTI', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '__EXCEPTIONS', 'abbr': 'size_t', 'word': '__EXCEPTIONS', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0(<#x#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2(<#x#>)', 'kind': 'M'}
{'menu': '__GNUG__', 'abbr': 'size_t', 'word': '__GNUG__', 'kind': 'M'}
{'menu': '__DEPRECATED', 'abbr': 'size_t', 'word': '__DEPRECATED', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1(<#x#>)', 'kind': 'M'}
{'menu': '__ORDER_LITTLE_ENDIAN__', 'abbr': 'size_t', 'word': '__ORDER_LITTLE_ENDIAN__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0(<#x#>)', 'kind': 'M'}
{'menu': '__GXX_WEAK__', 'abbr': 'size_t', 'word': '__GXX_WEAK__', 'kind': 'M'}
{'menu': '__BYTE_ORDER__', 'abbr': 'size_t', 'word': '__BYTE_ORDER__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__ORDER_PDP_ENDIAN__', 'abbr': 'size_t', 'word': '__ORDER_PDP_ENDIAN__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__ORDER_BIG_ENDIAN__', 'abbr': 'size_t', 'word': '__ORDER_BIG_ENDIAN__', 'kind': 'M'}
{'menu': '__DARWIN_1050ALIAS_I(sym)', 'abbr': 'size_t', 'word': '__DARWIN_1050ALIAS_I(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_EXTSN(sym)', 'abbr': 'size_t', 'word': '__DARWIN_EXTSN(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_1050INODE64(sym)', 'abbr': 'size_t', 'word': '__DARWIN_1050INODE64(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_EXTSN_C(sym)', 'abbr': 'size_t', 'word': '__DARWIN_EXTSN_C(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_INODE64(sym)', 'abbr': 'size_t', 'word': '__DARWIN_INODE64(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_1050(sym)', 'abbr': 'size_t', 'word': '__DARWIN_1050(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_1050ALIAS(sym)', 'abbr': 'size_t', 'word': '__DARWIN_1050ALIAS(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_1050ALIAS_C(sym)', 'abbr': 'size_t', 'word': '__DARWIN_1050ALIAS_C(<#sym#>)', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_ATOMIC_SHARED_PTR', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_ATOMIC_SHARED_PTR', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_LOCALE_CATEGORY', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_LOCALE_CATEGORY', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_C(sym)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_C(<#sym#>)', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_TYPEINFO_VTABLE', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_TYPEINFO_VTABLE', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_I(sym)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_I(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_NOCANCEL(sym)', 'abbr': 'size_t', 'word': '__DARWIN_NOCANCEL(<#sym#>)', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_FUTURE_ERROR', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_FUTURE_ERROR', 'kind': 'M'}
{'menu': '__DARWIN_SUF_1050', 'abbr': 'size_t', 'word': '__DARWIN_SUF_1050', 'kind': 'M'}
{'menu': '__DARWIN_SUF_NON_CANCELABLE', 'abbr': 'size_t', 'word': '__DARWIN_SUF_NON_CANCELABLE', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_SIZED_NEW_DELETE', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_SIZED_NEW_DELETE', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_UNCAUGHT_EXCEPTIONS', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_UNCAUGHT_EXCEPTIONS', 'kind': 'M'}
{'menu': '__DARWIN_SUF_EXTSN', 'abbr': 'size_t', 'word': '__DARWIN_SUF_EXTSN', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_BAD_ARRAY_LENGTH', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_BAD_ARRAY_LENGTH', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS(sym)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS(<#sym#>)', 'kind': 'M'}
{'menu': '__DARWIN_VERS_1050', 'abbr': 'size_t', 'word': '__DARWIN_VERS_1050', 'kind': 'M'}
{'menu': '__DARWIN_NON_CANCELABLE', 'abbr': 'size_t', 'word': '__DARWIN_NON_CANCELABLE', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_NO_STREAMS_EXTERN_TEMPLATE', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_NO_STREAMS_EXTERN_TEMPLATE', 'kind': 'M'}
{'menu': '__DARWIN_SUF_UNIX03', 'abbr': 'size_t', 'word': '__DARWIN_SUF_UNIX03', 'kind': 'M'}
{'menu': '__DARWIN_SUF_64_BIT_INO_T', 'abbr': 'size_t', 'word': '__DARWIN_SUF_64_BIT_INO_T', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_FUTURE', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_FUTURE', 'kind': 'M'}
{'menu': '__DARWIN_64_BIT_INO_T', 'abbr': 'size_t', 'word': '__DARWIN_64_BIT_INO_T', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_DYNARRAY', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_DYNARRAY', 'kind': 'M'}
{'menu': '__DARWIN_ONLY_64_BIT_INO_T', 'abbr': 'size_t', 'word': '__DARWIN_ONLY_64_BIT_INO_T', 'kind': 'M'}
{'menu': '__CONCAT(x, y)', 'abbr': 'size_t', 'word': '__CONCAT(<#x#>, <#y#>)', 'kind': 'M'}
{'menu': '__DARWIN_ONLY_VERS_1050', 'abbr': 'size_t', 'word': '__DARWIN_ONLY_VERS_1050', 'kind': 'M'}
{'menu': '__DARWIN_ONLY_UNIX_CONFORMANCE', 'abbr': 'size_t', 'word': '__DARWIN_ONLY_UNIX_CONFORMANCE', 'kind': 'M'}
{'menu': '__P(protos)', 'abbr': 'size_t', 'word': '__P(<#protos#>)', 'kind': 'M'}
{'menu': '__END_DECLS', 'abbr': 'size_t', 'word': '__END_DECLS', 'kind': 'M'}
{'menu': '__DARWIN_UNIX03', 'abbr': 'size_t', 'word': '__DARWIN_UNIX03', 'kind': 'M'}
{'menu': '__BEGIN_DECLS', 'abbr': 'size_t', 'word': '__BEGIN_DECLS', 'kind': 'M'}
{'menu': '__CAST_AWAY_QUALIFIER(variable, qualifier, type)', 'abbr': 'size_t', 'word': '__CAST_AWAY_QUALIFIER(<#variable#>, <#qualifier#>, <#type#>)', 'kind': 'M'}
{'menu': '__DEVOLATILE(type, var)', 'abbr': 'size_t', 'word': '__DEVOLATILE(<#type#>, <#var#>)', 'kind': 'M'}
{'menu': '__DEQUALIFY(type, var)', 'abbr': 'size_t', 'word': '__DEQUALIFY(<#type#>, <#var#>)', 'kind': 'M'}
{'menu': 'PRIO_DARWIN_THREAD', 'abbr': 'size_t', 'word': 'PRIO_DARWIN_THREAD', 'kind': 'M'}
{'menu': 'PRIO_USER', 'abbr': 'size_t', 'word': 'PRIO_USER', 'kind': 'M'}
{'menu': 'PRIO_PGRP', 'abbr': 'size_t', 'word': 'PRIO_PGRP', 'kind': 'M'}
{'menu': 'PRIO_PROCESS', 'abbr': 'size_t', 'word': 'PRIO_PROCESS', 'kind': 'M'}
{'menu': '_GNUC_VER', 'abbr': 'size_t', 'word': '_GNUC_VER', 'kind': 'M'}
{'menu': '_LIBCPP_VERSION', 'abbr': 'size_t', 'word': '_LIBCPP_VERSION', 'kind': 'M'}
{'menu': '__DARWIN_NULL', 'abbr': 'size_t', 'word': '__DARWIN_NULL', 'kind': 'M'}
{'menu': '_LIBCPP_ABI_VERSION', 'abbr': 'size_t', 'word': '_LIBCPP_ABI_VERSION', 'kind': 'M'}
{'menu': '_LIBCPP_CONCAT1(_LIBCPP_X, _LIBCPP_Y)', 'abbr': 'size_t', 'word': '_LIBCPP_CONCAT1(<#_LIBCPP_X#>, <#_LIBCPP_Y#>)', 'kind': 'M'}
{'menu': '_LIBCPP_CONCAT(_LIBCPP_X, _LIBCPP_Y)', 'abbr': 'size_t', 'word': '_LIBCPP_CONCAT(<#_LIBCPP_X#>, <#_LIBCPP_Y#>)', 'kind': 'M'}
{'menu': '__PTHREAD_MUTEXATTR_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_MUTEXATTR_SIZE__', 'kind': 'M'}
{'menu': '__PTHREAD_MUTEX_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_MUTEX_SIZE__', 'kind': 'M'}
{'menu': '_LIBCPP_NAMESPACE', 'abbr': 'size_t', 'word': '_LIBCPP_NAMESPACE', 'kind': 'M'}
{'menu': '_LIBCPP_BIG_ENDIAN', 'abbr': 'size_t', 'word': '_LIBCPP_BIG_ENDIAN', 'kind': 'M'}
{'menu': '__PTHREAD_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_SIZE__', 'kind': 'M'}
{'menu': '_LIBCPP_LITTLE_ENDIAN', 'abbr': 'size_t', 'word': '_LIBCPP_LITTLE_ENDIAN', 'kind': 'M'}
{'menu': '__PTHREAD_ATTR_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_ATTR_SIZE__', 'kind': 'M'}
{'menu': '__PTHREAD_ONCE_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_ONCE_SIZE__', 'kind': 'M'}
{'menu': '__PTHREAD_RWLOCK_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_RWLOCK_SIZE__', 'kind': 'M'}
{'menu': '__PTHREAD_CONDATTR_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_CONDATTR_SIZE__', 'kind': 'M'}
{'menu': '__PTHREAD_COND_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_COND_SIZE__', 'kind': 'M'}
{'menu': '_LIBCPP_HIDDEN', 'abbr': 'size_t', 'word': '_LIBCPP_HIDDEN', 'kind': 'M'}
{'menu': '_LIBCPP_USING_DEV_RANDOM', 'abbr': 'size_t', 'word': '_LIBCPP_USING_DEV_RANDOM', 'kind': 'M'}
{'menu': '_LIBCPP_FUNC_VIS', 'abbr': 'size_t', 'word': '_LIBCPP_FUNC_VIS', 'kind': 'M'}
{'menu': '_LIBCPP_TYPE_VIS', 'abbr': 'size_t', 'word': '_LIBCPP_TYPE_VIS', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__SSE2_MATH__', 'abbr': 'size_t', 'word': '__SSE2_MATH__', 'kind': 'M'}
{'menu': '__SSE__', 'abbr': 'size_t', 'word': '__SSE__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '__SSE_MATH__', 'abbr': 'size_t', 'word': '__SSE_MATH__', 'kind': 'M'}
{'menu': '__MMX__', 'abbr': 'size_t', 'word': '__MMX__', 'kind': 'M'}
{'menu': '__PTHREAD_RWLOCKATTR_SIZE__', 'abbr': 'size_t', 'word': '__PTHREAD_RWLOCKATTR_SIZE__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1', 'abbr': 'size_t', 'word': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1', 'kind': 'M'}
{'menu': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2', 'abbr': 'size_t', 'word': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4', 'abbr': 'size_t', 'word': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4', 'kind': 'M'}
{'menu': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8', 'abbr': 'size_t', 'word': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8', 'kind': 'M'}
{'menu': '__APPLE_CC__', 'abbr': 'size_t', 'word': '__APPLE_CC__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '__APPLE__', 'abbr': 'size_t', 'word': '__APPLE__', 'kind': 'M'}
{'menu': 'decltype(__x)', 'abbr': 'size_t', 'word': 'decltype(<#__x#>)', 'kind': 'M'}
{'menu': 'OBJC_NEW_PROPERTIES', 'abbr': 'size_t', 'word': 'OBJC_NEW_PROPERTIES', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__apple_build_version__', 'abbr': 'size_t', 'word': '__apple_build_version__', 'kind': 'M'}
{'menu': 'nullptr', 'abbr': 'size_t', 'word': 'nullptr', 'kind': 'M'}
{'menu': 'static_assert(__b, __m)', 'abbr': 'size_t', 'word': 'static_assert(<#__b#>, <#__m#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__weak', 'abbr': 'size_t', 'word': '__weak', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__strong', 'abbr': 'size_t', 'word': '__strong', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__unsafe_unretained', 'abbr': 'size_t', 'word': '__unsafe_unretained', 'kind': 'M'}
{'menu': '__DYNAMIC__', 'abbr': 'size_t', 'word': '__DYNAMIC__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__has_warning', 'abbr': 'size_t', 'word': '__has_warning', 'kind': 'M'}
{'menu': '__is_identifier', 'abbr': 'size_t', 'word': '__is_identifier', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__has_declspec_attribute', 'abbr': 'size_t', 'word': '__has_declspec_attribute', 'kind': 'M'}
{'menu': '__MACH__', 'abbr': 'size_t', 'word': '__MACH__', 'kind': 'M'}
{'menu': '__has_include', 'abbr': 'size_t', 'word': '__has_include', 'kind': 'M'}
{'menu': '__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__', 'abbr': 'size_t', 'word': '__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__', 'kind': 'M'}
{'menu': '__STDC__', 'abbr': 'size_t', 'word': '__STDC__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__has_include_next', 'abbr': 'size_t', 'word': '__has_include_next', 'kind': 'M'}
{'menu': '__STDC_HOSTED__', 'abbr': 'size_t', 'word': '__STDC_HOSTED__', 'kind': 'M'}
{'menu': '__cplusplus', 'abbr': 'size_t', 'word': '__cplusplus', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__STDC_UTF_16__', 'abbr': 'size_t', 'word': '__STDC_UTF_16__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__STDC_UTF_32__', 'abbr': 'size_t', 'word': '__STDC_UTF_32__', 'kind': 'M'}
{'menu': '__BASE_FILE__', 'abbr': 'size_t', 'word': '__BASE_FILE__', 'kind': 'M'}
{'menu': '_NOEXCEPT_(x)', 'abbr': 'size_t', 'word': '_NOEXCEPT_(<#x#>)', 'kind': 'M'}
{'menu': 'INT16_MIN', 'abbr': 'size_t', 'word': 'INT16_MIN', 'kind': 'M'}
{'menu': 'INT32_MIN', 'abbr': 'size_t', 'word': 'INT32_MIN', 'kind': 'M'}
{'menu': '__has_cpp_attribute', 'abbr': 'size_t', 'word': '__has_cpp_attribute', 'kind': 'M'}
{'menu': 'INT64_MIN', 'abbr': 'size_t', 'word': 'INT64_MIN', 'kind': 'M'}
{'menu': 'WCONTINUED', 'abbr': 'size_t', 'word': 'WCONTINUED', 'kind': 'M'}
{'menu': 'UINT8_MAX', 'abbr': 'size_t', 'word': 'UINT8_MAX', 'kind': 'M'}
{'menu': 'WEXITED', 'abbr': 'size_t', 'word': 'WEXITED', 'kind': 'M'}
{'menu': '__TIMESTAMP__', 'abbr': 'size_t', 'word': '__TIMESTAMP__', 'kind': 'M'}
{'menu': 'W_STOPCODE(sig)', 'abbr': 'size_t', 'word': 'W_STOPCODE(<#sig#>)', 'kind': 'M'}
{'menu': 'UINT16_MAX', 'abbr': 'size_t', 'word': 'UINT16_MAX', 'kind': 'M'}
{'menu': '__INCLUDE_LEVEL__', 'abbr': 'size_t', 'word': '__INCLUDE_LEVEL__', 'kind': 'M'}
{'menu': 'WSTOPPED', 'abbr': 'size_t', 'word': 'WSTOPPED', 'kind': 'M'}
{'menu': 'WNOWAIT', 'abbr': 'size_t', 'word': 'WNOWAIT', 'kind': 'M'}
{'menu': '__has_extension', 'abbr': 'size_t', 'word': '__has_extension', 'kind': 'M'}
{'menu': 'UINT32_MAX', 'abbr': 'size_t', 'word': 'UINT32_MAX', 'kind': 'M'}
{'menu': '_QUAD_HIGHWORD', 'abbr': 'size_t', 'word': '_QUAD_HIGHWORD', 'kind': 'M'}
{'menu': '__has_feature', 'abbr': 'size_t', 'word': '__has_feature', 'kind': 'M'}
{'menu': 'UINT64_MAX', 'abbr': 'size_t', 'word': 'UINT64_MAX', 'kind': 'M'}
{'menu': 'INT_LEAST8_MIN', 'abbr': 'size_t', 'word': 'INT_LEAST8_MIN', 'kind': 'M'}
{'menu': 'WAIT_ANY', 'abbr': 'size_t', 'word': 'WAIT_ANY', 'kind': 'M'}
{'menu': '__has_attribute', 'abbr': 'size_t', 'word': '__has_attribute', 'kind': 'M'}
{'menu': 'INT_LEAST32_MIN', 'abbr': 'size_t', 'word': 'INT_LEAST32_MIN', 'kind': 'M'}
{'menu': 'INT_LEAST16_MIN', 'abbr': 'size_t', 'word': 'INT_LEAST16_MIN', 'kind': 'M'}
{'menu': '__has_builtin', 'abbr': 'size_t', 'word': '__has_builtin', 'kind': 'M'}
{'menu': '_LIBCPP_CONSTEXPR', 'abbr': 'size_t', 'word': '_LIBCPP_CONSTEXPR', 'kind': 'M'}
{'menu': 'INT_LEAST64_MIN', 'abbr': 'size_t', 'word': 'INT_LEAST64_MIN', 'kind': 'M'}
{'menu': 'WAIT_MYPGRP', 'abbr': 'size_t', 'word': 'WAIT_MYPGRP', 'kind': 'M'}
{'menu': '_LIBCPP_DEFAULT', 'abbr': 'size_t', 'word': '_LIBCPP_DEFAULT', 'kind': 'M'}
{'menu': 'INT_LEAST8_MAX', 'abbr': 'size_t', 'word': 'INT_LEAST8_MAX', 'kind': 'M'}
{'menu': '_NOALIAS', 'abbr': 'size_t', 'word': '_NOALIAS', 'kind': 'M'}
{'menu': 'INT_LEAST16_MAX', 'abbr': 'size_t', 'word': 'INT_LEAST16_MAX', 'kind': 'M'}
{'menu': 'INT_LEAST32_MAX', 'abbr': 'size_t', 'word': 'INT_LEAST32_MAX', 'kind': 'M'}
{'menu': 'INT_LEAST64_MAX', 'abbr': 'size_t', 'word': 'INT_LEAST64_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_EXPLICIT', 'abbr': 'size_t', 'word': '_LIBCPP_EXPLICIT', 'kind': 'M'}
{'menu': 'UINT_LEAST8_MAX', 'abbr': 'size_t', 'word': 'UINT_LEAST8_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_DECLARE_STRONG_ENUM(x)', 'abbr': 'size_t', 'word': '_LIBCPP_DECLARE_STRONG_ENUM(<#x#>)', 'kind': 'M'}
{'menu': 'UINT_LEAST16_MAX', 'abbr': 'size_t', 'word': 'UINT_LEAST16_MAX', 'kind': 'M'}
{'menu': 'UINT_LEAST32_MAX', 'abbr': 'size_t', 'word': 'UINT_LEAST32_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_DECLARE_STRONG_ENUM_EPILOG(x)', 'abbr': 'size_t', 'word': '_LIBCPP_DECLARE_STRONG_ENUM_EPILOG(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_EXTERN_TEMPLATE(...)', 'abbr': 'size_t', 'word': '_LIBCPP_EXTERN_TEMPLATE(<#...#>)', 'kind': 'M'}
{'menu': '_LIBCPP_EXTERN_TEMPLATE2(...)', 'abbr': 'size_t', 'word': '_LIBCPP_EXTERN_TEMPLATE2(<#...#>)', 'kind': 'M'}
{'menu': '_LIBCPP_LOCALE__L_EXTENSIONS', 'abbr': 'size_t', 'word': '_LIBCPP_LOCALE__L_EXTENSIONS', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_CATOPEN', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_CATOPEN', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_DEFAULTRUNELOCALE', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_DEFAULTRUNELOCALE', 'kind': 'M'}
{'menu': 'alloca(size)', 'abbr': 'size_t', 'word': 'alloca(<#size#>)', 'kind': 'M'}
{'menu': '_LIBCPP_WCTYPE_IS_MASK', 'abbr': 'size_t', 'word': '_LIBCPP_WCTYPE_IS_MASK', 'kind': 'M'}
{'menu': 'INT8_MAX', 'abbr': 'size_t', 'word': 'INT8_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_TRIVIAL_PAIR_COPY_CTOR', 'abbr': 'size_t', 'word': '_LIBCPP_TRIVIAL_PAIR_COPY_CTOR', 'kind': 'M'}
{'menu': 'INT16_MAX', 'abbr': 'size_t', 'word': 'INT16_MAX', 'kind': 'M'}
{'menu': 'INT32_MAX', 'abbr': 'size_t', 'word': 'INT32_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_STD_VER', 'abbr': 'size_t', 'word': '_LIBCPP_STD_VER', 'kind': 'M'}
{'menu': 'INT64_MAX', 'abbr': 'size_t', 'word': 'INT64_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_DEPRECATED', 'abbr': 'size_t', 'word': '_LIBCPP_DEPRECATED', 'kind': 'M'}
{'menu': 'INT8_MIN', 'abbr': 'size_t', 'word': 'INT8_MIN', 'kind': 'M'}
{'menu': '_LIBCPP_EXPLICIT_AFTER_CXX11', 'abbr': 'size_t', 'word': '_LIBCPP_EXPLICIT_AFTER_CXX11', 'kind': 'M'}
{'menu': '_LIBCPP_INLINE_VISIBILITY', 'abbr': 'size_t', 'word': '_LIBCPP_INLINE_VISIBILITY', 'kind': 'M'}
{'menu': '_LIBCPP_CONSTEXPR_AFTER_CXX11', 'abbr': 'size_t', 'word': '_LIBCPP_CONSTEXPR_AFTER_CXX11', 'kind': 'M'}
{'menu': 'htonll(x)', 'abbr': 'size_t', 'word': 'htonll(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_DEPRECATED_AFTER_CXX11', 'abbr': 'size_t', 'word': '_LIBCPP_DEPRECATED_AFTER_CXX11', 'kind': 'M'}
{'menu': 'ntohll(x)', 'abbr': 'size_t', 'word': 'ntohll(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_TYPE_VIS_ONLY', 'abbr': 'size_t', 'word': '_LIBCPP_TYPE_VIS_ONLY', 'kind': 'M'}
{'menu': 'htonl(x)', 'abbr': 'size_t', 'word': 'htonl(<#x#>)', 'kind': 'M'}
{'menu': 'ntohl(x)', 'abbr': 'size_t', 'word': 'ntohl(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_FUNC_VIS_ONLY', 'abbr': 'size_t', 'word': '_LIBCPP_FUNC_VIS_ONLY', 'kind': 'M'}
{'menu': 'htons(x)', 'abbr': 'size_t', 'word': 'htons(<#x#>)', 'kind': 'M'}
{'menu': 'HTONLL(x)', 'abbr': 'size_t', 'word': 'HTONLL(<#x#>)', 'kind': 'M'}
{'menu': 'HTONS(x)', 'abbr': 'size_t', 'word': 'HTONS(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_WEAK', 'abbr': 'size_t', 'word': '_LIBCPP_WEAK', 'kind': 'M'}
{'menu': 'HTONL(x)', 'abbr': 'size_t', 'word': 'HTONL(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_EXCEPTION_ABI', 'abbr': 'size_t', 'word': '_LIBCPP_EXCEPTION_ABI', 'kind': 'M'}
{'menu': 'NTOHLL(x)', 'abbr': 'size_t', 'word': 'NTOHLL(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_ALWAYS_INLINE', 'abbr': 'size_t', 'word': '_LIBCPP_ALWAYS_INLINE', 'kind': 'M'}
{'menu': 'NTOHS(x)', 'abbr': 'size_t', 'word': 'NTOHS(<#x#>)', 'kind': 'M'}
{'menu': 'NTOHL(x)', 'abbr': 'size_t', 'word': 'NTOHL(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_CXX03_LANG', 'abbr': 'size_t', 'word': '_LIBCPP_CXX03_LANG', 'kind': 'M'}
{'menu': 'ntohs(x)', 'abbr': 'size_t', 'word': 'ntohs(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_USE_AVAILABILITY_APPLE', 'abbr': 'size_t', 'word': '_LIBCPP_USE_AVAILABILITY_APPLE', 'kind': 'M'}
{'menu': '__DARWIN_OSSwapInt64(x)', 'abbr': 'size_t', 'word': '__DARWIN_OSSwapInt64(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_SHARED_MUTEX', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_SHARED_MUTEX', 'kind': 'M'}
{'menu': '__DARWIN_OSSwapInt32(x)', 'abbr': 'size_t', 'word': '__DARWIN_OSSwapInt32(<#x#>)', 'kind': 'M'}
{'menu': '__DARWIN_OSSwapInt16(x)', 'abbr': 'size_t', 'word': '__DARWIN_OSSwapInt16(<#x#>)', 'kind': 'M'}
{'menu': 'INT_FAST8_MIN', 'abbr': 'size_t', 'word': 'INT_FAST8_MIN', 'kind': 'M'}
{'menu': '__DARWIN_OSSwapConstInt16(x)', 'abbr': 'size_t', 'word': '__DARWIN_OSSwapConstInt16(<#x#>)', 'kind': 'M'}
{'menu': 'INT_FAST16_MIN', 'abbr': 'size_t', 'word': 'INT_FAST16_MIN', 'kind': 'M'}
{'menu': 'UINT_LEAST64_MAX', 'abbr': 'size_t', 'word': 'UINT_LEAST64_MAX', 'kind': 'M'}
{'menu': 'INT_FAST64_MIN', 'abbr': 'size_t', 'word': 'INT_FAST64_MIN', 'kind': 'M'}
{'menu': 'BYTE_ORDER', 'abbr': 'size_t', 'word': 'BYTE_ORDER', 'kind': 'M'}
{'menu': 'INT_FAST32_MIN', 'abbr': 'size_t', 'word': 'INT_FAST32_MIN', 'kind': 'M'}
{'menu': '_LIBCPP_AVAILABILITY_BAD_OPTIONAL_ACCESS', 'abbr': 'size_t', 'word': '_LIBCPP_AVAILABILITY_BAD_OPTIONAL_ACCESS', 'kind': 'M'}
{'menu': 'INT_FAST16_MAX', 'abbr': 'size_t', 'word': 'INT_FAST16_MAX', 'kind': 'M'}
{'menu': '__DARWIN_OS_INLINE', 'abbr': 'size_t', 'word': '__DARWIN_OS_INLINE', 'kind': 'M'}
{'menu': 'INT_FAST8_MAX', 'abbr': 'size_t', 'word': 'INT_FAST8_MAX', 'kind': 'M'}
{'menu': 'INT_FAST64_MAX', 'abbr': 'size_t', 'word': 'INT_FAST64_MAX', 'kind': 'M'}
{'menu': '__DARWIN_OSSwapConstInt64(x)', 'abbr': 'size_t', 'word': '__DARWIN_OSSwapConstInt64(<#x#>)', 'kind': 'M'}
{'menu': '__DARWIN_OSSwapConstInt32(x)', 'abbr': 'size_t', 'word': '__DARWIN_OSSwapConstInt32(<#x#>)', 'kind': 'M'}
{'menu': 'INT_FAST32_MAX', 'abbr': 'size_t', 'word': 'INT_FAST32_MAX', 'kind': 'M'}
{'menu': '__DARWIN_PDP_ENDIAN', 'abbr': 'size_t', 'word': '__DARWIN_PDP_ENDIAN', 'kind': 'M'}
{'menu': '__DARWIN_BIG_ENDIAN', 'abbr': 'size_t', 'word': '__DARWIN_BIG_ENDIAN', 'kind': 'M'}
{'menu': '__DARWIN_LITTLE_ENDIAN', 'abbr': 'size_t', 'word': '__DARWIN_LITTLE_ENDIAN', 'kind': 'M'}
{'menu': '_QUAD_LOWWORD', 'abbr': 'size_t', 'word': '_QUAD_LOWWORD', 'kind': 'M'}
{'menu': 'PDP_ENDIAN', 'abbr': 'size_t', 'word': 'PDP_ENDIAN', 'kind': 'M'}
{'menu': 'BIG_ENDIAN', 'abbr': 'size_t', 'word': 'BIG_ENDIAN', 'kind': 'M'}
{'menu': 'LITTLE_ENDIAN', 'abbr': 'size_t', 'word': 'LITTLE_ENDIAN', 'kind': 'M'}
{'menu': '__DARWIN_BYTE_ORDER', 'abbr': 'size_t', 'word': '__DARWIN_BYTE_ORDER', 'kind': 'M'}
{'menu': '_Pragma', 'abbr': 'size_t', 'word': '_Pragma', 'kind': 'M'}
{'menu': '__COUNTER__', 'abbr': 'size_t', 'word': '__COUNTER__', 'kind': 'M'}
{'menu': '__TIME__', 'abbr': 'size_t', 'word': '__TIME__', 'kind': 'M'}
{'menu': '__DATE__', 'abbr': 'size_t', 'word': '__DATE__', 'kind': 'M'}
{'menu': '__FILE__', 'abbr': 'size_t', 'word': '__FILE__', 'kind': 'M'}
{'menu': '__LINE__', 'abbr': 'size_t', 'word': '__LINE__', 'kind': 'M'}
{'menu': '__UINT_FAST8_FMTX__', 'abbr': 'size_t', 'word': '__UINT_FAST8_FMTX__', 'kind': 'M'}
{'menu': '__INT_FAST16_TYPE__', 'abbr': 'size_t', 'word': '__INT_FAST16_TYPE__', 'kind': 'M'}
{'menu': '__INT_FAST16_MAX__', 'abbr': 'size_t', 'word': '__INT_FAST16_MAX__', 'kind': 'M'}
{'menu': '__INT_FAST16_FMTd__', 'abbr': 'size_t', 'word': '__INT_FAST16_FMTd__', 'kind': 'M'}
{'menu': '__UINT_FAST8_MAX__', 'abbr': 'size_t', 'word': '__UINT_FAST8_MAX__', 'kind': 'M'}
{'menu': '__UINT_FAST8_FMTo__', 'abbr': 'size_t', 'word': '__UINT_FAST8_FMTo__', 'kind': 'M'}
{'menu': '__UINT_FAST8_FMTu__', 'abbr': 'size_t', 'word': '__UINT_FAST8_FMTu__', 'kind': 'M'}
{'menu': '__UINT_FAST8_FMTx__', 'abbr': 'size_t', 'word': '__UINT_FAST8_FMTx__', 'kind': 'M'}
{'menu': '__SIZEOF_WCHAR_T__', 'abbr': 'size_t', 'word': '__SIZEOF_WCHAR_T__', 'kind': 'M'}
{'menu': '__SIZEOF_WINT_T__', 'abbr': 'size_t', 'word': '__SIZEOF_WINT_T__', 'kind': 'M'}
{'menu': '__signed', 'abbr': 'size_t', 'word': '__signed', 'kind': 'M'}
{'menu': '__SIZEOF_INT128__', 'abbr': 'size_t', 'word': '__SIZEOF_INT128__', 'kind': 'M'}
{'menu': '__INTMAX_TYPE__', 'abbr': 'size_t', 'word': '__INTMAX_TYPE__', 'kind': 'M'}
{'menu': '__restrict', 'abbr': 'size_t', 'word': '__restrict', 'kind': 'M'}
{'menu': '__INTMAX_FMTd__', 'abbr': 'size_t', 'word': '__INTMAX_FMTd__', 'kind': 'M'}
{'menu': '_toupper(c)', 'abbr': 'size_t', 'word': '_toupper(<#c#>)', 'kind': 'M'}
{'menu': '_tolower(c)', 'abbr': 'size_t', 'word': '_tolower(<#c#>)', 'kind': 'M'}
{'menu': '__INTMAX_FMTi__', 'abbr': 'size_t', 'word': '__INTMAX_FMTi__', 'kind': 'M'}
{'menu': '__inline', 'abbr': 'size_t', 'word': '__inline', 'kind': 'M'}
{'menu': '__INTMAX_C_SUFFIX__', 'abbr': 'size_t', 'word': '__INTMAX_C_SUFFIX__', 'kind': 'M'}
{'menu': '__SIZEOF_INT__', 'abbr': 'size_t', 'word': '__SIZEOF_INT__', 'kind': 'M'}
{'menu': '__SIZEOF_FLOAT__', 'abbr': 'size_t', 'word': '__SIZEOF_FLOAT__', 'kind': 'M'}
{'menu': '__SIZEOF_LONG__', 'abbr': 'size_t', 'word': '__SIZEOF_LONG__', 'kind': 'M'}
{'menu': '__SIZEOF_LONG_DOUBLE__', 'abbr': 'size_t', 'word': '__SIZEOF_LONG_DOUBLE__', 'kind': 'M'}
{'menu': '__SIZEOF_LONG_LONG__', 'abbr': 'size_t', 'word': '__SIZEOF_LONG_LONG__', 'kind': 'M'}
{'menu': '__SIZEOF_POINTER__', 'abbr': 'size_t', 'word': '__SIZEOF_POINTER__', 'kind': 'M'}
{'menu': '__SIZEOF_SHORT__', 'abbr': 'size_t', 'word': '__SIZEOF_SHORT__', 'kind': 'M'}
{'menu': '__volatile', 'abbr': 'size_t', 'word': '__volatile', 'kind': 'M'}
{'menu': '__SIZEOF_PTRDIFF_T__', 'abbr': 'size_t', 'word': '__SIZEOF_PTRDIFF_T__', 'kind': 'M'}
{'menu': '__SIZEOF_SIZE_T__', 'abbr': 'size_t', 'word': '__SIZEOF_SIZE_T__', 'kind': 'M'}
{'menu': 'CLOCKS_PER_SEC', 'abbr': 'size_t', 'word': 'CLOCKS_PER_SEC', 'kind': 'M'}
{'menu': 'LC_NUMERIC_MASK', 'abbr': 'size_t', 'word': 'LC_NUMERIC_MASK', 'kind': 'M'}
{'menu': '__PTRDIFF_FMTi__', 'abbr': 'size_t', 'word': '__PTRDIFF_FMTi__', 'kind': 'M'}
{'menu': 'LC_TIME_MASK', 'abbr': 'size_t', 'word': 'LC_TIME_MASK', 'kind': 'M'}
{'menu': '__PTRDIFF_FMTd__', 'abbr': 'size_t', 'word': '__PTRDIFF_FMTd__', 'kind': 'M'}
{'menu': '__INTPTR_TYPE__', 'abbr': 'size_t', 'word': '__INTPTR_TYPE__', 'kind': 'M'}
{'menu': '_LC_NUM_MASK', 'abbr': 'size_t', 'word': '_LC_NUM_MASK', 'kind': 'M'}
{'menu': '__PTRDIFF_WIDTH__', 'abbr': 'size_t', 'word': '__PTRDIFF_WIDTH__', 'kind': 'M'}
{'menu': '_LC_LAST_MASK', 'abbr': 'size_t', 'word': '_LC_LAST_MASK', 'kind': 'M'}
{'menu': '__INTPTR_FMTi__', 'abbr': 'size_t', 'word': '__INTPTR_FMTi__', 'kind': 'M'}
{'menu': '__DARWIN_CTYPE_inline', 'abbr': 'size_t', 'word': '__DARWIN_CTYPE_inline', 'kind': 'M'}
{'menu': 'LC_GLOBAL_LOCALE', 'abbr': 'size_t', 'word': 'LC_GLOBAL_LOCALE', 'kind': 'M'}
{'menu': '__INTPTR_FMTd__', 'abbr': 'size_t', 'word': '__INTPTR_FMTd__', 'kind': 'M'}
{'menu': '__SIZE_TYPE__', 'abbr': 'size_t', 'word': '__SIZE_TYPE__', 'kind': 'M'}
{'menu': 'MB_CUR_MAX', 'abbr': 'size_t', 'word': 'MB_CUR_MAX', 'kind': 'M'}
{'menu': '__DARWIN_CTYPE_TOP_inline', 'abbr': 'size_t', 'word': '__DARWIN_CTYPE_TOP_inline', 'kind': 'M'}
{'menu': '__INTPTR_WIDTH__', 'abbr': 'size_t', 'word': '__INTPTR_WIDTH__', 'kind': 'M'}
{'menu': '__UINTMAX_FMTo__', 'abbr': 'size_t', 'word': '__UINTMAX_FMTo__', 'kind': 'M'}
{'menu': 'fileno_unlocked(p)', 'abbr': 'size_t', 'word': 'fileno_unlocked(<#p#>)', 'kind': 'M'}
{'menu': '__UINTMAX_TYPE__', 'abbr': 'size_t', 'word': '__UINTMAX_TYPE__', 'kind': 'M'}
{'menu': '_CTYPE_SW2', 'abbr': 'size_t', 'word': '_CTYPE_SW2', 'kind': 'M'}
{'menu': '_CTYPE_SW3', 'abbr': 'size_t', 'word': '_CTYPE_SW3', 'kind': 'M'}
{'menu': '__UINTMAX_FMTx__', 'abbr': 'size_t', 'word': '__UINTMAX_FMTx__', 'kind': 'M'}
{'menu': '_CTYPE_SWM', 'abbr': 'size_t', 'word': '_CTYPE_SWM', 'kind': 'M'}
{'menu': 'ferror_unlocked(p)', 'abbr': 'size_t', 'word': 'ferror_unlocked(<#p#>)', 'kind': 'M'}
{'menu': '__UINTMAX_FMTu__', 'abbr': 'size_t', 'word': '__UINTMAX_FMTu__', 'kind': 'M'}
{'menu': '__const', 'abbr': 'size_t', 'word': '__const', 'kind': 'M'}
{'menu': '_CTYPE_SWS', 'abbr': 'size_t', 'word': '_CTYPE_SWS', 'kind': 'M'}
{'menu': 'clearerr_unlocked(p)', 'abbr': 'size_t', 'word': 'clearerr_unlocked(<#p#>)', 'kind': 'M'}
{'menu': '__UINTMAX_C_SUFFIX__', 'abbr': 'size_t', 'word': '__UINTMAX_C_SUFFIX__', 'kind': 'M'}
{'menu': '_CTYPE_I', 'abbr': 'size_t', 'word': '_CTYPE_I', 'kind': 'M'}
{'menu': '__UINTMAX_FMTX__', 'abbr': 'size_t', 'word': '__UINTMAX_FMTX__', 'kind': 'M'}
{'menu': '_CTYPE_Q', 'abbr': 'size_t', 'word': '_CTYPE_Q', 'kind': 'M'}
{'menu': '_USE_EXTENDED_LOCALES_', 'abbr': 'size_t', 'word': '_USE_EXTENDED_LOCALES_', 'kind': 'M'}
{'menu': '_CTYPE_T', 'abbr': 'size_t', 'word': '_CTYPE_T', 'kind': 'M'}
{'menu': '_CTYPE_SW0', 'abbr': 'size_t', 'word': '_CTYPE_SW0', 'kind': 'M'}
{'menu': '__PTRDIFF_TYPE__', 'abbr': 'size_t', 'word': '__PTRDIFF_TYPE__', 'kind': 'M'}
{'menu': '_CTYPE_SW1', 'abbr': 'size_t', 'word': '_CTYPE_SW1', 'kind': 'M'}
{'menu': '__INTMAX_WIDTH__', 'abbr': 'size_t', 'word': '__INTMAX_WIDTH__', 'kind': 'M'}
{'menu': 'LC_MONETARY', 'abbr': 'size_t', 'word': 'LC_MONETARY', 'kind': 'M'}
{'menu': '__SIG_ATOMIC_MAX__', 'abbr': 'size_t', 'word': '__SIG_ATOMIC_MAX__', 'kind': 'M'}
{'menu': 'LC_NUMERIC', 'abbr': 'size_t', 'word': 'LC_NUMERIC', 'kind': 'M'}
{'menu': '__SIG_ATOMIC_WIDTH__', 'abbr': 'size_t', 'word': '__SIG_ATOMIC_WIDTH__', 'kind': 'M'}
{'menu': 'LC_TIME', 'abbr': 'size_t', 'word': 'LC_TIME', 'kind': 'M'}
{'menu': 'LC_MESSAGES', 'abbr': 'size_t', 'word': 'LC_MESSAGES', 'kind': 'M'}
{'menu': '__CHAR32_TYPE__', 'abbr': 'size_t', 'word': '__CHAR32_TYPE__', 'kind': 'M'}
{'menu': '_LC_LAST', 'abbr': 'size_t', 'word': '_LC_LAST', 'kind': 'M'}
{'menu': '__CHAR16_TYPE__', 'abbr': 'size_t', 'word': '__CHAR16_TYPE__', 'kind': 'M'}
{'menu': '__UINTPTR_TYPE__', 'abbr': 'size_t', 'word': '__UINTPTR_TYPE__', 'kind': 'M'}
{'menu': 'fwopen(cookie, fn)', 'abbr': 'size_t', 'word': 'fwopen(<#cookie#>, <#fn#>)', 'kind': 'M'}
{'menu': '__UINTMAX_WIDTH__', 'abbr': 'size_t', 'word': '__UINTMAX_WIDTH__', 'kind': 'M'}
{'menu': 'feof_unlocked(p)', 'abbr': 'size_t', 'word': 'feof_unlocked(<#p#>)', 'kind': 'M'}
{'menu': 'fropen(cookie, fn)', 'abbr': 'size_t', 'word': 'fropen(<#cookie#>, <#fn#>)', 'kind': 'M'}
{'menu': '__UINTPTR_FMTu__', 'abbr': 'size_t', 'word': '__UINTPTR_FMTu__', 'kind': 'M'}
{'menu': '__UINTPTR_FMTo__', 'abbr': 'size_t', 'word': '__UINTPTR_FMTo__', 'kind': 'M'}
{'menu': '__SIZE_FMTu__', 'abbr': 'size_t', 'word': '__SIZE_FMTu__', 'kind': 'M'}
{'menu': '__private_extern__', 'abbr': 'size_t', 'word': '__private_extern__', 'kind': 'M'}
{'menu': '__SIZE_FMTo__', 'abbr': 'size_t', 'word': '__SIZE_FMTo__', 'kind': 'M'}
{'menu': '__SIZE_WIDTH__', 'abbr': 'size_t', 'word': '__SIZE_WIDTH__', 'kind': 'M'}
{'menu': '__SIZE_FMTX__', 'abbr': 'size_t', 'word': '__SIZE_FMTX__', 'kind': 'M'}
{'menu': '__SIZE_FMTx__', 'abbr': 'size_t', 'word': '__SIZE_FMTx__', 'kind': 'M'}
{'menu': '__WCHAR_WIDTH__', 'abbr': 'size_t', 'word': '__WCHAR_WIDTH__', 'kind': 'M'}
{'menu': 'LC_ALL_MASK', 'abbr': 'size_t', 'word': 'LC_ALL_MASK', 'kind': 'M'}
{'menu': 'LC_COLLATE_MASK', 'abbr': 'size_t', 'word': 'LC_COLLATE_MASK', 'kind': 'M'}
{'menu': '__WCHAR_TYPE__', 'abbr': 'size_t', 'word': '__WCHAR_TYPE__', 'kind': 'M'}
{'menu': 'LC_CTYPE_MASK', 'abbr': 'size_t', 'word': 'LC_CTYPE_MASK', 'kind': 'M'}
{'menu': 'LC_MESSAGES_MASK', 'abbr': 'size_t', 'word': 'LC_MESSAGES_MASK', 'kind': 'M'}
{'menu': '__WINT_WIDTH__', 'abbr': 'size_t', 'word': '__WINT_WIDTH__', 'kind': 'M'}
{'menu': 'LC_MONETARY_MASK', 'abbr': 'size_t', 'word': 'LC_MONETARY_MASK', 'kind': 'M'}
{'menu': '__WINT_TYPE__', 'abbr': 'size_t', 'word': '__WINT_TYPE__', 'kind': 'M'}
{'menu': '__FLT_MAX_10_EXP__', 'abbr': 'size_t', 'word': '__FLT_MAX_10_EXP__', 'kind': 'M'}
{'menu': 'SIGXFSZ', 'abbr': 'size_t', 'word': 'SIGXFSZ', 'kind': 'M'}
{'menu': 'SIGIO', 'abbr': 'size_t', 'word': 'SIGIO', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '_STRUCT_FP_CONTROL', 'abbr': 'size_t', 'word': '_STRUCT_FP_CONTROL', 'kind': 'M'}
{'menu': '__FLT_MAX_EXP__', 'abbr': 'size_t', 'word': '__FLT_MAX_EXP__', 'kind': 'M'}
{'menu': 'SIGXCPU', 'abbr': 'size_t', 'word': 'SIGXCPU', 'kind': 'M'}
{'menu': 'SIGPROF', 'abbr': 'size_t', 'word': 'SIGPROF', 'kind': 'M'}
{'menu': '__FLT_HAS_QUIET_NAN__', 'abbr': 'size_t', 'word': '__FLT_HAS_QUIET_NAN__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'SIGVTALRM', 'abbr': 'size_t', 'word': 'SIGVTALRM', 'kind': 'M'}
{'menu': '__FLT_MANT_DIG__', 'abbr': 'size_t', 'word': '__FLT_MANT_DIG__', 'kind': 'M'}
{'menu': '__FLT_MIN_EXP__', 'abbr': 'size_t', 'word': '__FLT_MIN_EXP__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'SIGUSR1', 'abbr': 'size_t', 'word': 'SIGUSR1', 'kind': 'M'}
{'menu': '__FLT_MIN__', 'abbr': 'size_t', 'word': '__FLT_MIN__', 'kind': 'M'}
{'menu': 'SIGWINCH', 'abbr': 'size_t', 'word': 'SIGWINCH', 'kind': 'M'}
{'menu': 'SIGINFO', 'abbr': 'size_t', 'word': 'SIGINFO', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': 'SIG_DFL', 'abbr': 'size_t', 'word': 'SIG_DFL', 'kind': 'M'}
{'menu': '__FLT_MAX__', 'abbr': 'size_t', 'word': '__FLT_MAX__', 'kind': 'M'}
{'menu': 'SIG_IGN', 'abbr': 'size_t', 'word': 'SIG_IGN', 'kind': 'M'}
{'menu': 'SIGUSR2', 'abbr': 'size_t', 'word': 'SIGUSR2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__FLT_MIN_10_EXP__', 'abbr': 'size_t', 'word': '__FLT_MIN_10_EXP__', 'kind': 'M'}
{'menu': '__UINTPTR_WIDTH__', 'abbr': 'size_t', 'word': '__UINTPTR_WIDTH__', 'kind': 'M'}
{'menu': 'SIG_ERR', 'abbr': 'size_t', 'word': 'SIG_ERR', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'FP_PREC_64B', 'abbr': 'size_t', 'word': 'FP_PREC_64B', 'kind': 'M'}
{'menu': '__FLT_DENORM_MIN__', 'abbr': 'size_t', 'word': '__FLT_DENORM_MIN__', 'kind': 'M'}
{'menu': 'FP_PREC_53B', 'abbr': 'size_t', 'word': 'FP_PREC_53B', 'kind': 'M'}
{'menu': 'SIG_HOLD', 'abbr': 'size_t', 'word': 'SIG_HOLD', 'kind': 'M'}
{'menu': '__UINTPTR_FMTx__', 'abbr': 'size_t', 'word': '__UINTPTR_FMTx__', 'kind': 'M'}
{'menu': 'FP_PREC_24B', 'abbr': 'size_t', 'word': 'FP_PREC_24B', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__UINTPTR_FMTX__', 'abbr': 'size_t', 'word': '__UINTPTR_FMTX__', 'kind': 'M'}
{'menu': 'getchar_unlocked()', 'abbr': 'size_t', 'word': 'getchar_unlocked()', 'kind': 'M'}
{'menu': 'getc_unlocked(fp)', 'abbr': 'size_t', 'word': 'getc_unlocked(<#fp#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': 'FP_CHOP', 'abbr': 'size_t', 'word': 'FP_CHOP', 'kind': 'M'}
{'menu': 'putchar_unlocked(x)', 'abbr': 'size_t', 'word': 'putchar_unlocked(<#x#>)', 'kind': 'M'}
{'menu': '__FLT_EPSILON__', 'abbr': 'size_t', 'word': '__FLT_EPSILON__', 'kind': 'M'}
{'menu': 'FP_RND_UP', 'abbr': 'size_t', 'word': 'FP_RND_UP', 'kind': 'M'}
{'menu': 'ILL_NOOP', 'abbr': 'size_t', 'word': 'ILL_NOOP', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__FLT_HAS_INFINITY__', 'abbr': 'size_t', 'word': '__FLT_HAS_INFINITY__', 'kind': 'M'}
{'menu': '__FLT_HAS_DENORM__', 'abbr': 'size_t', 'word': '__FLT_HAS_DENORM__', 'kind': 'M'}
{'menu': 'putc_unlocked(x, fp)', 'abbr': 'size_t', 'word': 'putc_unlocked(<#x#>, <#fp#>)', 'kind': 'M'}
{'menu': '_STRUCT_X86_THREAD_STATE32', 'abbr': 'size_t', 'word': '_STRUCT_X86_THREAD_STATE32', 'kind': 'M'}
{'menu': '__FLT_DIG__', 'abbr': 'size_t', 'word': '__FLT_DIG__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11', 'kind': 'M'}
{'menu': 'ILL_ILLOPC', 'abbr': 'size_t', 'word': 'ILL_ILLOPC', 'kind': 'M'}
{'menu': 'FP_RND_NEAR', 'abbr': 'size_t', 'word': 'FP_RND_NEAR', 'kind': 'M'}
{'menu': '__FLT_DECIMAL_DIG__', 'abbr': 'size_t', 'word': '__FLT_DECIMAL_DIG__', 'kind': 'M'}
{'menu': 'ILL_ILLADR', 'abbr': 'size_t', 'word': 'ILL_ILLADR', 'kind': 'M'}
{'menu': '__sgetc(p)', 'abbr': 'size_t', 'word': '__sgetc(<#p#>)', 'kind': 'M'}
{'menu': 'FP_RND_DOWN', 'abbr': 'size_t', 'word': 'FP_RND_DOWN', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_TEMPLATE_ALIASES', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_TEMPLATE_ALIASES', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ILL_ILLOPN', 'abbr': 'size_t', 'word': 'ILL_ILLOPN', 'kind': 'M'}
{'menu': 'ILL_PRVOPC', 'abbr': 'size_t', 'word': 'ILL_PRVOPC', 'kind': 'M'}
{'menu': '_ALIGNAS(x)', 'abbr': 'size_t', 'word': '_ALIGNAS(<#x#>)', 'kind': 'M'}
{'menu': 'ILL_ILLTRP', 'abbr': 'size_t', 'word': 'ILL_ILLTRP', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__sferror(p)', 'abbr': 'size_t', 'word': '__sferror(<#p#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__sclearerr(p)', 'abbr': 'size_t', 'word': '__sclearerr(<#p#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '_ALIGNAS_TYPE(x)', 'abbr': 'size_t', 'word': '_ALIGNAS_TYPE(<#x#>)', 'kind': 'M'}
{'menu': '__sfeof(p)', 'abbr': 'size_t', 'word': '__sfeof(<#p#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2', 'kind': 'M'}
{'menu': '__sfileno(p)', 'abbr': 'size_t', 'word': '__sfileno(<#p#>)', 'kind': 'M'}
{'menu': 'SIGEV_NONE', 'abbr': 'size_t', 'word': 'SIGEV_NONE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': 'SIGEV_SIGNAL', 'abbr': 'size_t', 'word': 'SIGEV_SIGNAL', 'kind': 'M'}
{'menu': 'SIGEV_THREAD', 'abbr': 'size_t', 'word': 'SIGEV_THREAD', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__APPLE_API_STANDARD', 'abbr': 'size_t', 'word': '__APPLE_API_STANDARD', 'kind': 'M'}
{'menu': '__APPLE_API_STABLE', 'abbr': 'size_t', 'word': '__APPLE_API_STABLE', 'kind': 'M'}
{'menu': '__APPLE_API_EVOLVING', 'abbr': 'size_t', 'word': '__APPLE_API_EVOLVING', 'kind': 'M'}
{'menu': '__APPLE_API_UNSTABLE', 'abbr': 'size_t', 'word': '__APPLE_API_UNSTABLE', 'kind': 'M'}
{'menu': '__APPLE_API_PRIVATE', 'abbr': 'size_t', 'word': '__APPLE_API_PRIVATE', 'kind': 'M'}
{'menu': '__APPLE_API_OBSOLETE', 'abbr': 'size_t', 'word': '__APPLE_API_OBSOLETE', 'kind': 'M'}
{'menu': '__DARWIN_NSIG', 'abbr': 'size_t', 'word': '__DARWIN_NSIG', 'kind': 'M'}
{'menu': 'NSIG', 'abbr': 'size_t', 'word': 'NSIG', 'kind': 'M'}
{'menu': 'SIGHUP', 'abbr': 'size_t', 'word': 'SIGHUP', 'kind': 'M'}
{'menu': 'SIGINT', 'abbr': 'size_t', 'word': 'SIGINT', 'kind': 'M'}
{'menu': 'ILL_COPROC', 'abbr': 'size_t', 'word': 'ILL_COPROC', 'kind': 'M'}
{'menu': 'SIGQUIT', 'abbr': 'size_t', 'word': 'SIGQUIT', 'kind': 'M'}
{'menu': 'SIGTRAP', 'abbr': 'size_t', 'word': 'SIGTRAP', 'kind': 'M'}
{'menu': 'SIGILL', 'abbr': 'size_t', 'word': 'SIGILL', 'kind': 'M'}
{'menu': 'SIGABRT', 'abbr': 'size_t', 'word': 'SIGABRT', 'kind': 'M'}
{'menu': 'FPE_NOOP', 'abbr': 'size_t', 'word': 'FPE_NOOP', 'kind': 'M'}
{'menu': 'ILL_PRVREG', 'abbr': 'size_t', 'word': 'ILL_PRVREG', 'kind': 'M'}
{'menu': 'ILL_BADSTK', 'abbr': 'size_t', 'word': 'ILL_BADSTK', 'kind': 'M'}
{'menu': 'FPE_FLTDIV', 'abbr': 'size_t', 'word': 'FPE_FLTDIV', 'kind': 'M'}
{'menu': 'SIGIOT', 'abbr': 'size_t', 'word': 'SIGIOT', 'kind': 'M'}
{'menu': 'SIGFPE', 'abbr': 'size_t', 'word': 'SIGFPE', 'kind': 'M'}
{'menu': 'SIGEMT', 'abbr': 'size_t', 'word': 'SIGEMT', 'kind': 'M'}
{'menu': 'FPE_FLTUND', 'abbr': 'size_t', 'word': 'FPE_FLTUND', 'kind': 'M'}
{'menu': 'SIGKILL', 'abbr': 'size_t', 'word': 'SIGKILL', 'kind': 'M'}
{'menu': 'FPE_FLTOVF', 'abbr': 'size_t', 'word': 'FPE_FLTOVF', 'kind': 'M'}
{'menu': 'FPE_FLTINV', 'abbr': 'size_t', 'word': 'FPE_FLTINV', 'kind': 'M'}
{'menu': 'SIGBUS', 'abbr': 'size_t', 'word': 'SIGBUS', 'kind': 'M'}
{'menu': 'SIGSYS', 'abbr': 'size_t', 'word': 'SIGSYS', 'kind': 'M'}
{'menu': 'SIGSEGV', 'abbr': 'size_t', 'word': 'SIGSEGV', 'kind': 'M'}
{'menu': 'FPE_FLTRES', 'abbr': 'size_t', 'word': 'FPE_FLTRES', 'kind': 'M'}
{'menu': 'SIGPIPE', 'abbr': 'size_t', 'word': 'SIGPIPE', 'kind': 'M'}
{'menu': 'SIGALRM', 'abbr': 'size_t', 'word': 'SIGALRM', 'kind': 'M'}
{'menu': 'SIGURG', 'abbr': 'size_t', 'word': 'SIGURG', 'kind': 'M'}
{'menu': 'SIGTERM', 'abbr': 'size_t', 'word': 'SIGTERM', 'kind': 'M'}
{'menu': 'SIGSTOP', 'abbr': 'size_t', 'word': 'SIGSTOP', 'kind': 'M'}
{'menu': 'SIGTSTP', 'abbr': 'size_t', 'word': 'SIGTSTP', 'kind': 'M'}
{'menu': 'SIGCHLD', 'abbr': 'size_t', 'word': 'SIGCHLD', 'kind': 'M'}
{'menu': 'SIGCONT', 'abbr': 'size_t', 'word': 'SIGCONT', 'kind': 'M'}
{'menu': 'SIGTTIN', 'abbr': 'size_t', 'word': 'SIGTTIN', 'kind': 'M'}
{'menu': 'SIGTTOU', 'abbr': 'size_t', 'word': 'SIGTTOU', 'kind': 'M'}
{'menu': '__deprecated_msg(_msg)', 'abbr': 'size_t', 'word': '__deprecated_msg(<#_msg#>)', 'kind': 'M'}
{'menu': '__deprecated_enum_msg(_msg)', 'abbr': 'size_t', 'word': '__deprecated_enum_msg(<#_msg#>)', 'kind': 'M'}
{'menu': '__unavailable', 'abbr': 'size_t', 'word': '__unavailable', 'kind': 'M'}
{'menu': '__dead', 'abbr': 'size_t', 'word': '__dead', 'kind': 'M'}
{'menu': '__pure', 'abbr': 'size_t', 'word': '__pure', 'kind': 'M'}
{'menu': '__STRING(x)', 'abbr': 'size_t', 'word': '__STRING(<#x#>)', 'kind': 'M'}
{'menu': '__dead2', 'abbr': 'size_t', 'word': '__dead2', 'kind': 'M'}
{'menu': '__pure2', 'abbr': 'size_t', 'word': '__pure2', 'kind': 'M'}
{'menu': '__unused', 'abbr': 'size_t', 'word': '__unused', 'kind': 'M'}
{'menu': '__used', 'abbr': 'size_t', 'word': '__used', 'kind': 'M'}
{'menu': '__deprecated', 'abbr': 'size_t', 'word': '__deprecated', 'kind': 'M'}
{'menu': '_PTHREAD_ERRORCHECK_MUTEX_SIG_init', 'abbr': 'size_t', 'word': '_PTHREAD_ERRORCHECK_MUTEX_SIG_init', 'kind': 'M'}
{'menu': '_PTHREAD_RECURSIVE_MUTEX_SIG_init', 'abbr': 'size_t', 'word': '_PTHREAD_RECURSIVE_MUTEX_SIG_init', 'kind': 'M'}
{'menu': '__scanflike(fmtarg, firstvararg)', 'abbr': 'size_t', 'word': '__scanflike(<#fmtarg#>, <#firstvararg#>)', 'kind': 'M'}
{'menu': '_PTHREAD_MUTEX_SIG_init', 'abbr': 'size_t', 'word': '_PTHREAD_MUTEX_SIG_init', 'kind': 'M'}
{'menu': '__IDSTRING(name, string)', 'abbr': 'size_t', 'word': '__IDSTRING(<#name#>, <#string#>)', 'kind': 'M'}
{'menu': '_PTHREAD_COND_SIG_init', 'abbr': 'size_t', 'word': '_PTHREAD_COND_SIG_init', 'kind': 'M'}
{'menu': '_PTHREAD_ONCE_SIG_init', 'abbr': 'size_t', 'word': '_PTHREAD_ONCE_SIG_init', 'kind': 'M'}
{'menu': '__COPYRIGHT(s)', 'abbr': 'size_t', 'word': '__COPYRIGHT(<#s#>)', 'kind': 'M'}
{'menu': '_PTHREAD_FIRSTFIT_MUTEX_SIG_init', 'abbr': 'size_t', 'word': '_PTHREAD_FIRSTFIT_MUTEX_SIG_init', 'kind': 'M'}
{'menu': '__header_inline', 'abbr': 'size_t', 'word': '__header_inline', 'kind': 'M'}
{'menu': '__header_always_inline', 'abbr': 'size_t', 'word': '__header_always_inline', 'kind': 'M'}
{'menu': '__unreachable_ok_push', 'abbr': 'size_t', 'word': '__unreachable_ok_push', 'kind': 'M'}
{'menu': '__unreachable_ok_pop', 'abbr': 'size_t', 'word': '__unreachable_ok_pop', 'kind': 'M'}
{'menu': '__printflike(fmtarg, firstvararg)', 'abbr': 'size_t', 'word': '__printflike(<#fmtarg#>, <#firstvararg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '_STRUCT_X86_FLOAT_STATE32', 'abbr': 'size_t', 'word': '_STRUCT_X86_FLOAT_STATE32', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__SCHED_PARAM_SIZE__', 'abbr': 'size_t', 'word': '__SCHED_PARAM_SIZE__', 'kind': 'M'}
{'menu': 'SCHED_FIFO', 'abbr': 'size_t', 'word': 'SCHED_FIFO', 'kind': 'M'}
{'menu': '__RCSID(s)', 'abbr': 'size_t', 'word': '__RCSID(<#s#>)', 'kind': 'M'}
{'menu': 'SCHED_OTHER', 'abbr': 'size_t', 'word': 'SCHED_OTHER', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__SCCSID(s)', 'abbr': 'size_t', 'word': '__SCCSID(<#s#>)', 'kind': 'M'}
{'menu': '_PTHREAD_RWLOCK_SIG_init', 'abbr': 'size_t', 'word': '_PTHREAD_RWLOCK_SIG_init', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11', 'kind': 'M'}
{'menu': 'SCHED_RR', 'abbr': 'size_t', 'word': 'SCHED_RR', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__FBSDID(s)', 'abbr': 'size_t', 'word': '__FBSDID(<#s#>)', 'kind': 'M'}
{'menu': '__PROJECT_VERSION(s)', 'abbr': 'size_t', 'word': '__PROJECT_VERSION(<#s#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__DECONST(type, var)', 'abbr': 'size_t', 'word': '__DECONST(<#type#>, <#var#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '_STRUCT_FP_STATUS', 'abbr': 'size_t', 'word': '_STRUCT_FP_STATUS', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '_STRUCT_XMM_REG', 'abbr': 'size_t', 'word': '_STRUCT_XMM_REG', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'FP_STATE_BYTES', 'abbr': 'size_t', 'word': 'FP_STATE_BYTES', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '_STRUCT_MMST_REG', 'abbr': 'size_t', 'word': '_STRUCT_MMST_REG', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA', 'kind': 'M'}
{'menu': 'CAST_USER_ADDR_T(a_ptr)', 'abbr': 'size_t', 'word': 'CAST_USER_ADDR_T(<#a_ptr#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_10_3', 'kind': 'M'}
{'menu': 'USER_ADDR_NULL', 'abbr': 'size_t', 'word': 'USER_ADDR_NULL', 'kind': 'M'}
{'menu': '__INT32_MAX__', 'abbr': 'size_t', 'word': '__INT32_MAX__', 'kind': 'M'}
{'menu': '__UINT64_TYPE__', 'abbr': 'size_t', 'word': '__UINT64_TYPE__', 'kind': 'M'}
{'menu': '__UINT64_FMTo__', 'abbr': 'size_t', 'word': '__UINT64_FMTo__', 'kind': 'M'}
{'menu': '__UINT32_MAX__', 'abbr': 'size_t', 'word': '__UINT32_MAX__', 'kind': 'M'}
{'menu': '__UINT64_FMTX__', 'abbr': 'size_t', 'word': '__UINT64_FMTX__', 'kind': 'M'}
{'menu': '__UINT64_C_SUFFIX__', 'abbr': 'size_t', 'word': '__UINT64_C_SUFFIX__', 'kind': 'M'}
{'menu': '__UINT64_FMTu__', 'abbr': 'size_t', 'word': '__UINT64_FMTu__', 'kind': 'M'}
{'menu': '__UINT64_FMTx__', 'abbr': 'size_t', 'word': '__UINT64_FMTx__', 'kind': 'M'}
{'menu': '__UINT_LEAST8_FMTu__', 'abbr': 'size_t', 'word': '__UINT_LEAST8_FMTu__', 'kind': 'M'}
{'menu': '__UINT_LEAST8_FMTx__', 'abbr': 'size_t', 'word': '__UINT_LEAST8_FMTx__', 'kind': 'M'}
{'menu': '__UINT_LEAST8_MAX__', 'abbr': 'size_t', 'word': '__UINT_LEAST8_MAX__', 'kind': 'M'}
{'menu': '__UINT_LEAST8_FMTo__', 'abbr': 'size_t', 'word': '__UINT_LEAST8_FMTo__', 'kind': 'M'}
{'menu': '__INT_LEAST16_MAX__', 'abbr': 'size_t', 'word': '__INT_LEAST16_MAX__', 'kind': 'M'}
{'menu': '__INT_LEAST16_FMTd__', 'abbr': 'size_t', 'word': '__INT_LEAST16_FMTd__', 'kind': 'M'}
{'menu': '__UINT_LEAST8_FMTX__', 'abbr': 'size_t', 'word': '__UINT_LEAST8_FMTX__', 'kind': 'M'}
{'menu': '__INT_LEAST16_TYPE__', 'abbr': 'size_t', 'word': '__INT_LEAST16_TYPE__', 'kind': 'M'}
{'menu': '__INT64_MAX__', 'abbr': 'size_t', 'word': '__INT64_MAX__', 'kind': 'M'}
{'menu': '__INT_LEAST8_TYPE__', 'abbr': 'size_t', 'word': '__INT_LEAST8_TYPE__', 'kind': 'M'}
{'menu': '__UINT64_MAX__', 'abbr': 'size_t', 'word': '__UINT64_MAX__', 'kind': 'M'}
{'menu': '__INT_LEAST8_FMTi__', 'abbr': 'size_t', 'word': '__INT_LEAST8_FMTi__', 'kind': 'M'}
{'menu': '__UINT_LEAST8_TYPE__', 'abbr': 'size_t', 'word': '__UINT_LEAST8_TYPE__', 'kind': 'M'}
{'menu': '__INT_LEAST8_MAX__', 'abbr': 'size_t', 'word': '__INT_LEAST8_MAX__', 'kind': 'M'}
{'menu': '__INT_LEAST8_FMTd__', 'abbr': 'size_t', 'word': '__INT_LEAST8_FMTd__', 'kind': 'M'}
{'menu': '__UINT_LEAST32_TYPE__', 'abbr': 'size_t', 'word': '__UINT_LEAST32_TYPE__', 'kind': 'M'}
{'menu': '__INT_LEAST32_FMTi__', 'abbr': 'size_t', 'word': '__INT_LEAST32_FMTi__', 'kind': 'M'}
{'menu': 'MB_CUR_MAX_L(x)', 'abbr': 'size_t', 'word': 'MB_CUR_MAX_L(<#x#>)', 'kind': 'M'}
{'menu': '__INT_LEAST32_FMTd__', 'abbr': 'size_t', 'word': '__INT_LEAST32_FMTd__', 'kind': 'M'}
{'menu': '__INT_LEAST32_MAX__', 'abbr': 'size_t', 'word': '__INT_LEAST32_MAX__', 'kind': 'M'}
{'menu': '__UINT_LEAST32_FMTx__', 'abbr': 'size_t', 'word': '__UINT_LEAST32_FMTx__', 'kind': 'M'}
{'menu': '__UINT_LEAST32_FMTu__', 'abbr': 'size_t', 'word': '__UINT_LEAST32_FMTu__', 'kind': 'M'}
{'menu': '__UINT_LEAST32_FMTo__', 'abbr': 'size_t', 'word': '__UINT_LEAST32_FMTo__', 'kind': 'M'}
{'menu': '__UINT_LEAST32_MAX__', 'abbr': 'size_t', 'word': '__UINT_LEAST32_MAX__', 'kind': 'M'}
{'menu': '__UINT_LEAST16_FMTo__', 'abbr': 'size_t', 'word': '__UINT_LEAST16_FMTo__', 'kind': 'M'}
{'menu': '__UINT_LEAST16_MAX__', 'abbr': 'size_t', 'word': '__UINT_LEAST16_MAX__', 'kind': 'M'}
{'menu': '__UINT_LEAST16_TYPE__', 'abbr': 'size_t', 'word': '__UINT_LEAST16_TYPE__', 'kind': 'M'}
{'menu': '__INT_LEAST16_FMTi__', 'abbr': 'size_t', 'word': '__INT_LEAST16_FMTi__', 'kind': 'M'}
{'menu': '__INT_LEAST32_TYPE__', 'abbr': 'size_t', 'word': '__INT_LEAST32_TYPE__', 'kind': 'M'}
{'menu': '__UINT_LEAST16_FMTX__', 'abbr': 'size_t', 'word': '__UINT_LEAST16_FMTX__', 'kind': 'M'}
{'menu': '__UINT_LEAST16_FMTx__', 'abbr': 'size_t', 'word': '__UINT_LEAST16_FMTx__', 'kind': 'M'}
{'menu': '__UINT_LEAST16_FMTu__', 'abbr': 'size_t', 'word': '__UINT_LEAST16_FMTu__', 'kind': 'M'}
{'menu': '__INT_FAST8_TYPE__', 'abbr': 'size_t', 'word': '__INT_FAST8_TYPE__', 'kind': 'M'}
{'menu': '__UINT_LEAST64_FMTX__', 'abbr': 'size_t', 'word': '__UINT_LEAST64_FMTX__', 'kind': 'M'}
{'menu': '__UINT_LEAST64_FMTx__', 'abbr': 'size_t', 'word': '__UINT_LEAST64_FMTx__', 'kind': 'M'}
{'menu': '__UINT_LEAST64_FMTu__', 'abbr': 'size_t', 'word': '__UINT_LEAST64_FMTu__', 'kind': 'M'}
{'menu': '__UINT_FAST8_TYPE__', 'abbr': 'size_t', 'word': '__UINT_FAST8_TYPE__', 'kind': 'M'}
{'menu': '__INT_FAST8_FMTi__', 'abbr': 'size_t', 'word': '__INT_FAST8_FMTi__', 'kind': 'M'}
{'menu': '__INT_FAST8_FMTd__', 'abbr': 'size_t', 'word': '__INT_FAST8_FMTd__', 'kind': 'M'}
{'menu': '__INT_FAST8_MAX__', 'abbr': 'size_t', 'word': '__INT_FAST8_MAX__', 'kind': 'M'}
{'menu': '__INT_LEAST64_FMTd__', 'abbr': 'size_t', 'word': '__INT_LEAST64_FMTd__', 'kind': 'M'}
{'menu': '__INT_LEAST64_MAX__', 'abbr': 'size_t', 'word': '__INT_LEAST64_MAX__', 'kind': 'M'}
{'menu': '__INT_LEAST64_TYPE__', 'abbr': 'size_t', 'word': '__INT_LEAST64_TYPE__', 'kind': 'M'}
{'menu': '__UINT_LEAST32_FMTX__', 'abbr': 'size_t', 'word': '__UINT_LEAST32_FMTX__', 'kind': 'M'}
{'menu': '__UINT_LEAST64_FMTo__', 'abbr': 'size_t', 'word': '__UINT_LEAST64_FMTo__', 'kind': 'M'}
{'menu': '__UINT_LEAST64_MAX__', 'abbr': 'size_t', 'word': '__UINT_LEAST64_MAX__', 'kind': 'M'}
{'menu': '__UINT_LEAST64_TYPE__', 'abbr': 'size_t', 'word': '__UINT_LEAST64_TYPE__', 'kind': 'M'}
{'menu': '__INT_LEAST64_FMTi__', 'abbr': 'size_t', 'word': '__INT_LEAST64_FMTi__', 'kind': 'M'}
{'menu': '__MAC_10_5', 'abbr': 'size_t', 'word': '__MAC_10_5', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__UINT_FAST32_MAX__', 'abbr': 'size_t', 'word': '__UINT_FAST32_MAX__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_2(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_2(<#x#>)', 'kind': 'M'}
{'menu': '__MAC_10_6', 'abbr': 'size_t', 'word': '__MAC_10_6', 'kind': 'M'}
{'menu': '__CTERMID_DEFINED', 'abbr': 'size_t', 'word': '__CTERMID_DEFINED', 'kind': 'M'}
{'menu': '__UINT_FAST32_FMTo__', 'abbr': 'size_t', 'word': '__UINT_FAST32_FMTo__', 'kind': 'M'}
{'menu': 'CHAR_BIT', 'abbr': 'size_t', 'word': 'CHAR_BIT', 'kind': 'M'}
{'menu': 'L_ctermid', 'abbr': 'size_t', 'word': 'L_ctermid', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_4(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_4(<#x#>)', 'kind': 'M'}
{'menu': '__UINT_FAST32_FMTu__', 'abbr': 'size_t', 'word': '__UINT_FAST32_FMTu__', 'kind': 'M'}
{'menu': '__MAC_10_2', 'abbr': 'size_t', 'word': '__MAC_10_2', 'kind': 'M'}
{'menu': '__MAC_10_4', 'abbr': 'size_t', 'word': '__MAC_10_4', 'kind': 'M'}
{'menu': '__UINT_FAST32_FMTx__', 'abbr': 'size_t', 'word': '__UINT_FAST32_FMTx__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_3(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_3(<#x#>)', 'kind': 'M'}
{'menu': '__MAC_10_3', 'abbr': 'size_t', 'word': '__MAC_10_3', 'kind': 'M'}
{'menu': '__MAC_10_0', 'abbr': 'size_t', 'word': '__MAC_10_0', 'kind': 'M'}
{'menu': '__INT_FAST32_MAX__', 'abbr': 'size_t', 'word': '__INT_FAST32_MAX__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__INT_FAST32_FMTd__', 'abbr': 'size_t', 'word': '__INT_FAST32_FMTd__', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2(<#x#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_1(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_1(<#x#>)', 'kind': 'M'}
{'menu': '_FORTIFY_SOURCE', 'abbr': 'size_t', 'word': '_FORTIFY_SOURCE', 'kind': 'M'}
{'menu': '__INT_FAST32_FMTi__', 'abbr': 'size_t', 'word': '__INT_FAST32_FMTi__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__MAC_10_1', 'abbr': 'size_t', 'word': '__MAC_10_1', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_0(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_0(<#x#>)', 'kind': 'M'}
{'menu': '__UINT_FAST32_TYPE__', 'abbr': 'size_t', 'word': '__UINT_FAST32_TYPE__', 'kind': 'M'}
{'menu': 'CHAR_MAX', 'abbr': 'size_t', 'word': 'CHAR_MAX', 'kind': 'M'}
{'menu': '__DARWIN_WCHAR_MIN', 'abbr': 'size_t', 'word': '__DARWIN_WCHAR_MIN', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5', 'kind': 'M'}
{'menu': '__INT_FAST64_FMTi__', 'abbr': 'size_t', 'word': '__INT_FAST64_FMTi__', 'kind': 'M'}
{'menu': '__DARWIN_WEOF', 'abbr': 'size_t', 'word': '__DARWIN_WEOF', 'kind': 'M'}
{'menu': '__UINT_FAST64_TYPE__', 'abbr': 'size_t', 'word': '__UINT_FAST64_TYPE__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5', 'kind': 'M'}
{'menu': 'SCHAR_MAX', 'abbr': 'size_t', 'word': 'SCHAR_MAX', 'kind': 'M'}
{'menu': '__UINT_FAST64_MAX__', 'abbr': 'size_t', 'word': '__UINT_FAST64_MAX__', 'kind': 'M'}
{'menu': '__DARWIN_WCHAR_MAX', 'abbr': 'size_t', 'word': '__DARWIN_WCHAR_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__UINT_FAST64_FMTo__', 'abbr': 'size_t', 'word': '__UINT_FAST64_FMTo__', 'kind': 'M'}
{'menu': '__UINT_FAST32_FMTX__', 'abbr': 'size_t', 'word': '__UINT_FAST32_FMTX__', 'kind': 'M'}
{'menu': '__INT_FAST64_TYPE__', 'abbr': 'size_t', 'word': '__INT_FAST64_TYPE__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'MB_LEN_MAX', 'abbr': 'size_t', 'word': 'MB_LEN_MAX', 'kind': 'M'}
{'menu': '__INT_FAST64_MAX__', 'abbr': 'size_t', 'word': '__INT_FAST64_MAX__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6', 'kind': 'M'}
{'menu': '__strftimelike(fmtarg)', 'abbr': 'size_t', 'word': '__strftimelike(<#fmtarg#>)', 'kind': 'M'}
{'menu': '__INT_FAST64_FMTd__', 'abbr': 'size_t', 'word': '__INT_FAST64_FMTd__', 'kind': 'M'}
{'menu': '_GCC_LIMITS_H_', 'abbr': 'size_t', 'word': '_GCC_LIMITS_H_', 'kind': 'M'}
{'menu': 'RLIM_SAVED_CUR', 'abbr': 'size_t', 'word': 'RLIM_SAVED_CUR', 'kind': 'M'}
{'menu': 'LLONG_MIN', 'abbr': 'size_t', 'word': 'LLONG_MIN', 'kind': 'M'}
{'menu': '_STRUCT_X86_AVX_STATE64', 'abbr': 'size_t', 'word': '_STRUCT_X86_AVX_STATE64', 'kind': 'M'}
{'menu': '__strfmonlike(fmtarg, firstvararg)', 'abbr': 'size_t', 'word': '__strfmonlike(<#fmtarg#>, <#firstvararg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7', 'kind': 'M'}
{'menu': 'pthread_cleanup_push(func, val)', 'abbr': 'size_t', 'word': 'pthread_cleanup_push(<#func#>, <#val#>)', 'kind': 'M'}
{'menu': 'UCHAR_MAX', 'abbr': 'size_t', 'word': 'UCHAR_MAX', 'kind': 'M'}
{'menu': 'LONG_BIT', 'abbr': 'size_t', 'word': 'LONG_BIT', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8', 'kind': 'M'}
{'menu': 'ULLONG_MAX', 'abbr': 'size_t', 'word': 'ULLONG_MAX', 'kind': 'M'}
{'menu': 'RLIM_SAVED_MAX', 'abbr': 'size_t', 'word': 'RLIM_SAVED_MAX', 'kind': 'M'}
{'menu': 'RLIMIT_CPU_USAGE_MONITOR', 'abbr': 'size_t', 'word': 'RLIMIT_CPU_USAGE_MONITOR', 'kind': 'M'}
{'menu': 'LLONG_MAX', 'abbr': 'size_t', 'word': 'LLONG_MAX', 'kind': 'M'}
{'menu': '__offsetof(type, field)', 'abbr': 'size_t', 'word': '__offsetof(<#type#>, <#field#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'UQUAD_MAX', 'abbr': 'size_t', 'word': 'UQUAD_MAX', 'kind': 'M'}
{'menu': 'RLIM_NLIMITS', 'abbr': 'size_t', 'word': 'RLIM_NLIMITS', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'CLK_TCK', 'abbr': 'size_t', 'word': 'CLK_TCK', 'kind': 'M'}
{'menu': 'QUAD_MAX', 'abbr': 'size_t', 'word': 'QUAD_MAX', 'kind': 'M'}
{'menu': '_STRUCT_X86_FLOAT_STATE64', 'abbr': 'size_t', 'word': '_STRUCT_X86_FLOAT_STATE64', 'kind': 'M'}
{'menu': 'WORD_BIT', 'abbr': 'size_t', 'word': 'WORD_BIT', 'kind': 'M'}
{'menu': 'RLIMIT_THREAD_CPULIMITS', 'abbr': 'size_t', 'word': 'RLIMIT_THREAD_CPULIMITS', 'kind': 'M'}
{'menu': '__DARWIN_CLK_TCK', 'abbr': 'size_t', 'word': '__DARWIN_CLK_TCK', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9', 'kind': 'M'}
{'menu': 'SIZE_T_MAX', 'abbr': 'size_t', 'word': 'SIZE_T_MAX', 'kind': 'M'}
{'menu': 'SCHAR_MIN', 'abbr': 'size_t', 'word': 'SCHAR_MIN', 'kind': 'M'}
{'menu': '_RLIMIT_POSIX_FLAG', 'abbr': 'size_t', 'word': '_RLIMIT_POSIX_FLAG', 'kind': 'M'}
{'menu': 'SHRT_MIN', 'abbr': 'size_t', 'word': 'SHRT_MIN', 'kind': 'M'}
{'menu': '__UINT_FAST16_FMTu__', 'abbr': 'size_t', 'word': '__UINT_FAST16_FMTu__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10', 'kind': 'M'}
{'menu': 'RLIMIT_AS', 'abbr': 'size_t', 'word': 'RLIMIT_AS', 'kind': 'M'}
{'menu': 'UINT_MAX', 'abbr': 'size_t', 'word': 'UINT_MAX', 'kind': 'M'}
{'menu': '__UINT_FAST16_FMTx__', 'abbr': 'size_t', 'word': '__UINT_FAST16_FMTx__', 'kind': 'M'}
{'menu': 'RLIMIT_RSS', 'abbr': 'size_t', 'word': 'RLIMIT_RSS', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'RLIMIT_MEMLOCK', 'abbr': 'size_t', 'word': 'RLIMIT_MEMLOCK', 'kind': 'M'}
{'menu': '__UINT_FAST16_FMTX__', 'abbr': 'size_t', 'word': '__UINT_FAST16_FMTX__', 'kind': 'M'}
{'menu': 'CHAR_MIN', 'abbr': 'size_t', 'word': 'CHAR_MIN', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'USHRT_MAX', 'abbr': 'size_t', 'word': 'USHRT_MAX', 'kind': 'M'}
{'menu': '__INT_FAST32_TYPE__', 'abbr': 'size_t', 'word': '__INT_FAST32_TYPE__', 'kind': 'M'}
{'menu': 'SHRT_MAX', 'abbr': 'size_t', 'word': 'SHRT_MAX', 'kind': 'M'}
{'menu': 'RLIMIT_NPROC', 'abbr': 'size_t', 'word': 'RLIMIT_NPROC', 'kind': 'M'}
{'menu': 'SSIZE_MAX', 'abbr': 'size_t', 'word': 'SSIZE_MAX', 'kind': 'M'}
{'menu': '__INT_FAST16_FMTi__', 'abbr': 'size_t', 'word': '__INT_FAST16_FMTi__', 'kind': 'M'}
{'menu': 'LONG_MAX', 'abbr': 'size_t', 'word': 'LONG_MAX', 'kind': 'M'}
{'menu': 'QOS_MIN_RELATIVE_PRIORITY', 'abbr': 'size_t', 'word': 'QOS_MIN_RELATIVE_PRIORITY', 'kind': 'M'}
{'menu': 'LONG_MIN', 'abbr': 'size_t', 'word': 'LONG_MIN', 'kind': 'M'}
{'menu': '__UINT_FAST16_TYPE__', 'abbr': 'size_t', 'word': '__UINT_FAST16_TYPE__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__QOS_CLASS_AVAILABLE_STARTING', 'abbr': 'size_t', 'word': '__QOS_CLASS_AVAILABLE_STARTING', 'kind': 'M'}
{'menu': '__UINT_FAST16_MAX__', 'abbr': 'size_t', 'word': '__UINT_FAST16_MAX__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': 'INT_MAX', 'abbr': 'size_t', 'word': 'INT_MAX', 'kind': 'M'}
{'menu': '__UINT_FAST16_FMTo__', 'abbr': 'size_t', 'word': '__UINT_FAST16_FMTo__', 'kind': 'M'}
{'menu': 'INT_MIN', 'abbr': 'size_t', 'word': 'INT_MIN', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__FLT_EVAL_METHOD__', 'abbr': 'size_t', 'word': '__FLT_EVAL_METHOD__', 'kind': 'M'}
{'menu': 'TMP_MAX', 'abbr': 'size_t', 'word': 'TMP_MAX', 'kind': 'M'}
{'menu': '__TVOS_9_0', 'abbr': 'size_t', 'word': '__TVOS_9_0', 'kind': 'M'}
{'menu': 'ULONG_MAX', 'abbr': 'size_t', 'word': 'ULONG_MAX', 'kind': 'M'}
{'menu': '__pic__', 'abbr': 'size_t', 'word': '__pic__', 'kind': 'M'}
{'menu': 'SEEK_SET', 'abbr': 'size_t', 'word': 'SEEK_SET', 'kind': 'M'}
{'menu': '__IPHONE_9_3', 'abbr': 'size_t', 'word': '__IPHONE_9_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__IPHONE_9_2', 'abbr': 'size_t', 'word': '__IPHONE_9_2', 'kind': 'M'}
{'menu': 'P_tmpdir', 'abbr': 'size_t', 'word': 'P_tmpdir', 'kind': 'M'}
{'menu': '__DECIMAL_DIG__', 'abbr': 'size_t', 'word': '__DECIMAL_DIG__', 'kind': 'M'}
{'menu': '__FLT_RADIX__', 'abbr': 'size_t', 'word': '__FLT_RADIX__', 'kind': 'M'}
{'menu': '__IPHONE_9_1', 'abbr': 'size_t', 'word': '__IPHONE_9_1', 'kind': 'M'}
{'menu': 'UID_MAX', 'abbr': 'size_t', 'word': 'UID_MAX', 'kind': 'M'}
{'menu': '_XOPEN_IOV_MAX', 'abbr': 'size_t', 'word': '_XOPEN_IOV_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_LLONG_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_LLONG_LOCK_FREE', 'kind': 'M'}
{'menu': '__IPHONE_9_0', 'abbr': 'size_t', 'word': '__IPHONE_9_0', 'kind': 'M'}
{'menu': '__IPHONE_8_4', 'abbr': 'size_t', 'word': '__IPHONE_8_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_LONG_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_LONG_LOCK_FREE', 'kind': 'M'}
{'menu': '__IPHONE_8_3', 'abbr': 'size_t', 'word': '__IPHONE_8_3', 'kind': 'M'}
{'menu': 'NL_SETMAX', 'abbr': 'size_t', 'word': 'NL_SETMAX', 'kind': 'M'}
{'menu': '__PIC__', 'abbr': 'size_t', 'word': '__PIC__', 'kind': 'M'}
{'menu': '__NO_INLINE__', 'abbr': 'size_t', 'word': '__NO_INLINE__', 'kind': 'M'}
{'menu': '__IPHONE_8_2', 'abbr': 'size_t', 'word': '__IPHONE_8_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__IPHONE_8_1', 'abbr': 'size_t', 'word': '__IPHONE_8_1', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_POINTER_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_POINTER_LOCK_FREE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__x86_64', 'abbr': 'size_t', 'word': '__x86_64', 'kind': 'M'}
{'menu': '__IPHONE_8_0', 'abbr': 'size_t', 'word': '__IPHONE_8_0', 'kind': 'M'}
{'menu': '__IPHONE_7_1', 'abbr': 'size_t', 'word': '__IPHONE_7_1', 'kind': 'M'}
{'menu': '__amd64', 'abbr': 'size_t', 'word': '__amd64', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4', 'kind': 'M'}
{'menu': 'ARG_MAX', 'abbr': 'size_t', 'word': 'ARG_MAX', 'kind': 'M'}
{'menu': '__core2__', 'abbr': 'size_t', 'word': '__core2__', 'kind': 'M'}
{'menu': '__IPHONE_7_0', 'abbr': 'size_t', 'word': '__IPHONE_7_0', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '__core2', 'abbr': 'size_t', 'word': '__core2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3', 'kind': 'M'}
{'menu': '__IPHONE_6_1', 'abbr': 'size_t', 'word': '__IPHONE_6_1', 'kind': 'M'}
{'menu': '__x86_64__', 'abbr': 'size_t', 'word': '__x86_64__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5', 'kind': 'M'}
{'menu': 'SEEK_END', 'abbr': 'size_t', 'word': 'SEEK_END', 'kind': 'M'}
{'menu': '__IPHONE_6_0', 'abbr': 'size_t', 'word': '__IPHONE_6_0', 'kind': 'M'}
{'menu': '__IPHONE_5_1', 'abbr': 'size_t', 'word': '__IPHONE_5_1', 'kind': 'M'}
{'menu': '__nonnull', 'abbr': 'size_t', 'word': '__nonnull', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6', 'kind': 'M'}
{'menu': '__IPHONE_5_0', 'abbr': 'size_t', 'word': '__IPHONE_5_0', 'kind': 'M'}
{'menu': '__SSP__', 'abbr': 'size_t', 'word': '__SSP__', 'kind': 'M'}
{'menu': '__amd64__', 'abbr': 'size_t', 'word': '__amd64__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__IPHONE_4_3', 'abbr': 'size_t', 'word': '__IPHONE_4_3', 'kind': 'M'}
{'menu': '__nullable', 'abbr': 'size_t', 'word': '__nullable', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA', 'kind': 'M'}
{'menu': 'stdout', 'abbr': 'size_t', 'word': 'stdout', 'kind': 'M'}
{'menu': '__null_unspecified', 'abbr': 'size_t', 'word': '__null_unspecified', 'kind': 'M'}
{'menu': '__IPHONE_4_2', 'abbr': 'size_t', 'word': '__IPHONE_4_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__GNUC_GNU_INLINE__', 'abbr': 'size_t', 'word': '__GNUC_GNU_INLINE__', 'kind': 'M'}
{'menu': '__IPHONE_4_1', 'abbr': 'size_t', 'word': '__IPHONE_4_1', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7', 'kind': 'M'}
{'menu': '_POSIX_NGROUPS_MAX', 'abbr': 'size_t', 'word': '_POSIX_NGROUPS_MAX', 'kind': 'M'}
{'menu': '__FINITE_MATH_ONLY__', 'abbr': 'size_t', 'word': '__FINITE_MATH_ONLY__', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_TEST_AND_SET_TRUEVAL', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_TEST_AND_SET_TRUEVAL', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8', 'kind': 'M'}
{'menu': '__IPHONE_4_0', 'abbr': 'size_t', 'word': '__IPHONE_4_0', 'kind': 'M'}
{'menu': '__IPHONE_3_2', 'abbr': 'size_t', 'word': '__IPHONE_3_2', 'kind': 'M'}
{'menu': '_POSIX_MAX_CANON', 'abbr': 'size_t', 'word': '_POSIX_MAX_CANON', 'kind': 'M'}
{'menu': '__IPHONE_3_0', 'abbr': 'size_t', 'word': '__IPHONE_3_0', 'kind': 'M'}
{'menu': '__IPHONE_3_1', 'abbr': 'size_t', 'word': '__IPHONE_3_1', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__UINT_FAST64_FMTx__', 'abbr': 'size_t', 'word': '__UINT_FAST64_FMTx__', 'kind': 'M'}
{'menu': '__IPHONE_2_2', 'abbr': 'size_t', 'word': '__IPHONE_2_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'BC_BASE_MAX', 'abbr': 'size_t', 'word': 'BC_BASE_MAX', 'kind': 'M'}
{'menu': '__UINT_FAST64_FMTu__', 'abbr': 'size_t', 'word': '__UINT_FAST64_FMTu__', 'kind': 'M'}
{'menu': '__IPHONE_2_1', 'abbr': 'size_t', 'word': '__IPHONE_2_1', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__USER_LABEL_PREFIX__', 'abbr': 'size_t', 'word': '__USER_LABEL_PREFIX__', 'kind': 'M'}
{'menu': '__IPHONE_2_0', 'abbr': 'size_t', 'word': '__IPHONE_2_0', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'L_tmpnam', 'abbr': 'size_t', 'word': 'L_tmpnam', 'kind': 'M'}
{'menu': '__UINT_FAST64_FMTX__', 'abbr': 'size_t', 'word': '__UINT_FAST64_FMTX__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': 'NAME_MAX', 'abbr': 'size_t', 'word': 'NAME_MAX', 'kind': 'M'}
{'menu': '__MAC_10_11_4', 'abbr': 'size_t', 'word': '__MAC_10_11_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9', 'kind': 'M'}
{'menu': '_POSIX_TRACE_NAME_MAX', 'abbr': 'size_t', 'word': '_POSIX_TRACE_NAME_MAX', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_SHORT_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_SHORT_LOCK_FREE', 'kind': 'M'}
{'menu': '__MAC_10_11_3', 'abbr': 'size_t', 'word': '__MAC_10_11_3', 'kind': 'M'}
{'menu': '_POSIX_PIPE_BUF', 'abbr': 'size_t', 'word': '_POSIX_PIPE_BUF', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_WCHAR_T_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_WCHAR_T_LOCK_FREE', 'kind': 'M'}
{'menu': '__MAC_10_11_2', 'abbr': 'size_t', 'word': '__MAC_10_11_2', 'kind': 'M'}
{'menu': '__MAC_10_10_3', 'abbr': 'size_t', 'word': '__MAC_10_10_3', 'kind': 'M'}
{'menu': 'COLL_WEIGHTS_MAX', 'abbr': 'size_t', 'word': 'COLL_WEIGHTS_MAX', 'kind': 'M'}
{'menu': '__MAC_10_11', 'abbr': 'size_t', 'word': '__MAC_10_11', 'kind': 'M'}
{'menu': '__MAC_10_10_2', 'abbr': 'size_t', 'word': '__MAC_10_10_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_INT_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_INT_LOCK_FREE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_CHAR_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_CHAR_LOCK_FREE', 'kind': 'M'}
{'menu': '__MAC_10_10', 'abbr': 'size_t', 'word': '__MAC_10_10', 'kind': 'M'}
{'menu': '_POSIX_CHILD_MAX', 'abbr': 'size_t', 'word': '_POSIX_CHILD_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'CHARCLASS_NAME_MAX', 'abbr': 'size_t', 'word': 'CHARCLASS_NAME_MAX', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_BOOL_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_BOOL_LOCK_FREE', 'kind': 'M'}
{'menu': '__MAC_10_9', 'abbr': 'size_t', 'word': '__MAC_10_9', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': 'EQUIV_CLASS_MAX', 'abbr': 'size_t', 'word': 'EQUIV_CLASS_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__MAC_10_8', 'abbr': 'size_t', 'word': '__MAC_10_8', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_CHAR32_T_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_CHAR32_T_LOCK_FREE', 'kind': 'M'}
{'menu': '__GCC_ATOMIC_CHAR16_T_LOCK_FREE', 'abbr': 'size_t', 'word': '__GCC_ATOMIC_CHAR16_T_LOCK_FREE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__MAC_10_7', 'abbr': 'size_t', 'word': '__MAC_10_7', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11', 'kind': 'M'}
{'menu': 'RE_DUP_MAX', 'abbr': 'size_t', 'word': 'RE_DUP_MAX', 'kind': 'M'}
{'menu': 'MAX_INPUT', 'abbr': 'size_t', 'word': 'MAX_INPUT', 'kind': 'M'}
{'menu': 'NZERO', 'abbr': 'size_t', 'word': 'NZERO', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '_POSIX_OPEN_MAX', 'abbr': 'size_t', 'word': '_POSIX_OPEN_MAX', 'kind': 'M'}
{'menu': '_XOPEN_PATH_MAX', 'abbr': 'size_t', 'word': '_XOPEN_PATH_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'LONG_LONG_MAX', 'abbr': 'size_t', 'word': 'LONG_LONG_MAX', 'kind': 'M'}
{'menu': '_POSIX2_CHARCLASS_NAME_MAX', 'abbr': 'size_t', 'word': '_POSIX2_CHARCLASS_NAME_MAX', 'kind': 'M'}
{'menu': 'SEEK_CUR', 'abbr': 'size_t', 'word': 'SEEK_CUR', 'kind': 'M'}
{'menu': 'EBADARCH', 'abbr': 'size_t', 'word': 'EBADARCH', 'kind': 'M'}
{'menu': '_POSIX_LINK_MAX', 'abbr': 'size_t', 'word': '_POSIX_LINK_MAX', 'kind': 'M'}
{'menu': 'NL_ARGMAX', 'abbr': 'size_t', 'word': 'NL_ARGMAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'IOV_MAX', 'abbr': 'size_t', 'word': 'IOV_MAX', 'kind': 'M'}
{'menu': 'NGROUPS_MAX', 'abbr': 'size_t', 'word': 'NGROUPS_MAX', 'kind': 'M'}
{'menu': 'stdin', 'abbr': 'size_t', 'word': 'stdin', 'kind': 'M'}
{'menu': 'LONG_LONG_MIN', 'abbr': 'size_t', 'word': 'LONG_LONG_MIN', 'kind': 'M'}
{'menu': '_POSIX_TRACE_USER_EVENT_MAX', 'abbr': 'size_t', 'word': '_POSIX_TRACE_USER_EVENT_MAX', 'kind': 'M'}
{'menu': '_POSIX_TTY_NAME_MAX', 'abbr': 'size_t', 'word': '_POSIX_TTY_NAME_MAX', 'kind': 'M'}
{'menu': '_POSIX_ARG_MAX', 'abbr': 'size_t', 'word': '_POSIX_ARG_MAX', 'kind': 'M'}
{'menu': 'GID_MAX', 'abbr': 'size_t', 'word': 'GID_MAX', 'kind': 'M'}
{'menu': 'stderr', 'abbr': 'size_t', 'word': 'stderr', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': 'PASS_MAX', 'abbr': 'size_t', 'word': 'PASS_MAX', 'kind': 'M'}
{'menu': '_POSIX_NAME_MAX', 'abbr': 'size_t', 'word': '_POSIX_NAME_MAX', 'kind': 'M'}
{'menu': 'BC_DIM_MAX', 'abbr': 'size_t', 'word': 'BC_DIM_MAX', 'kind': 'M'}
{'menu': '_POSIX_TRACE_SYS_MAX', 'abbr': 'size_t', 'word': '_POSIX_TRACE_SYS_MAX', 'kind': 'M'}
{'menu': '_POSIX2_COLL_WEIGHTS_MAX', 'abbr': 'size_t', 'word': '_POSIX2_COLL_WEIGHTS_MAX', 'kind': 'M'}
{'menu': 'MAX_CANON', 'abbr': 'size_t', 'word': 'MAX_CANON', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': 'QUAD_MIN', 'abbr': 'size_t', 'word': 'QUAD_MIN', 'kind': 'M'}
{'menu': '_POSIX_RE_DUP_MAX', 'abbr': 'size_t', 'word': '_POSIX_RE_DUP_MAX', 'kind': 'M'}
{'menu': 'EXPR_NEST_MAX', 'abbr': 'size_t', 'word': 'EXPR_NEST_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': 'OFF_MIN', 'abbr': 'size_t', 'word': 'OFF_MIN', 'kind': 'M'}
{'menu': 'BC_STRING_MAX', 'abbr': 'size_t', 'word': 'BC_STRING_MAX', 'kind': 'M'}
{'menu': '_XOPEN_NAME_MAX', 'abbr': 'size_t', 'word': '_XOPEN_NAME_MAX', 'kind': 'M'}
{'menu': '_POSIX_SSIZE_MAX', 'abbr': 'size_t', 'word': '_POSIX_SSIZE_MAX', 'kind': 'M'}
{'menu': 'EMULTIHOP', 'abbr': 'size_t', 'word': 'EMULTIHOP', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'NL_NMAX', 'abbr': 'size_t', 'word': 'NL_NMAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'EAUTH', 'abbr': 'size_t', 'word': 'EAUTH', 'kind': 'M'}
{'menu': 'EIDRM', 'abbr': 'size_t', 'word': 'EIDRM', 'kind': 'M'}
{'menu': '_POSIX_PATH_MAX', 'abbr': 'size_t', 'word': '_POSIX_PATH_MAX', 'kind': 'M'}
{'menu': 'OPEN_MAX', 'abbr': 'size_t', 'word': 'OPEN_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA', 'kind': 'M'}
{'menu': 'NL_LANGMAX', 'abbr': 'size_t', 'word': 'NL_LANGMAX', 'kind': 'M'}
{'menu': 'CHILD_MAX', 'abbr': 'size_t', 'word': 'CHILD_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__SNBF', 'abbr': 'size_t', 'word': '__SNBF', 'kind': 'M'}
{'menu': 'EBADMACHO', 'abbr': 'size_t', 'word': 'EBADMACHO', 'kind': 'M'}
{'menu': 'ESHLIBVERS', 'abbr': 'size_t', 'word': 'ESHLIBVERS', 'kind': 'M'}
{'menu': '__SLBF', 'abbr': 'size_t', 'word': '__SLBF', 'kind': 'M'}
{'menu': '_POSIX_MAX_INPUT', 'abbr': 'size_t', 'word': '_POSIX_MAX_INPUT', 'kind': 'M'}
{'menu': 'BC_SCALE_MAX', 'abbr': 'size_t', 'word': 'BC_SCALE_MAX', 'kind': 'M'}
{'menu': '__XNU_PRIVATE_EXTERN', 'abbr': 'size_t', 'word': '__XNU_PRIVATE_EXTERN', 'kind': 'M'}
{'menu': '__SSE3__', 'abbr': 'size_t', 'word': '__SSE3__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3', 'kind': 'M'}
{'menu': '__SRW', 'abbr': 'size_t', 'word': '__SRW', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__SSE2__', 'abbr': 'size_t', 'word': '__SSE2__', 'kind': 'M'}
{'menu': '__SRD', 'abbr': 'size_t', 'word': '__SRD', 'kind': 'M'}
{'menu': '__SWR', 'abbr': 'size_t', 'word': '__SWR', 'kind': 'M'}
{'menu': 'LINE_MAX', 'abbr': 'size_t', 'word': 'LINE_MAX', 'kind': 'M'}
{'menu': 'EHOSTUNREACH', 'abbr': 'size_t', 'word': 'EHOSTUNREACH', 'kind': 'M'}
{'menu': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16', 'abbr': 'size_t', 'word': '__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16', 'kind': 'M'}
{'menu': '_DARWIN_FEATURE_UNIX_CONFORMANCE', 'abbr': 'size_t', 'word': '_DARWIN_FEATURE_UNIX_CONFORMANCE', 'kind': 'M'}
{'menu': '__SEOF', 'abbr': 'size_t', 'word': '__SEOF', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3', 'kind': 'M'}
{'menu': '__SSSE3__', 'abbr': 'size_t', 'word': '__SSSE3__', 'kind': 'M'}
{'menu': '__SSTR', 'abbr': 'size_t', 'word': '__SSTR', 'kind': 'M'}
{'menu': '_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE', 'abbr': 'size_t', 'word': '_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__NO_MATH_INLINES', 'abbr': 'size_t', 'word': '__NO_MATH_INLINES', 'kind': 'M'}
{'menu': 'ECONNREFUSED', 'abbr': 'size_t', 'word': 'ECONNREFUSED', 'kind': 'M'}
{'menu': '__SERR', 'abbr': 'size_t', 'word': '__SERR', 'kind': 'M'}
{'menu': '__FXSR__', 'abbr': 'size_t', 'word': '__FXSR__', 'kind': 'M'}
{'menu': '__SMBF', 'abbr': 'size_t', 'word': '__SMBF', 'kind': 'M'}
{'menu': '__SAPP', 'abbr': 'size_t', 'word': '__SAPP', 'kind': 'M'}
{'menu': '__SOFF', 'abbr': 'size_t', 'word': '__SOFF', 'kind': 'M'}
{'menu': '_DARWIN_FEATURE_64_BIT_INODE', 'abbr': 'size_t', 'word': '_DARWIN_FEATURE_64_BIT_INODE', 'kind': 'M'}
{'menu': '__tune_core2__', 'abbr': 'size_t', 'word': '__tune_core2__', 'kind': 'M'}
{'menu': 'ETIMEDOUT', 'abbr': 'size_t', 'word': 'ETIMEDOUT', 'kind': 'M'}
{'menu': '__SNPT', 'abbr': 'size_t', 'word': '__SNPT', 'kind': 'M'}
{'menu': 'ENOTEMPTY', 'abbr': 'size_t', 'word': 'ENOTEMPTY', 'kind': 'M'}
{'menu': '__REGISTER_PREFIX__', 'abbr': 'size_t', 'word': '__REGISTER_PREFIX__', 'kind': 'M'}
{'menu': '__DARWIN_NO_LONG_LONG', 'abbr': 'size_t', 'word': '__DARWIN_NO_LONG_LONG', 'kind': 'M'}
{'menu': 'ELOOP', 'abbr': 'size_t', 'word': 'ELOOP', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4', 'kind': 'M'}
{'menu': '__SALC', 'abbr': 'size_t', 'word': '__SALC', 'kind': 'M'}
{'menu': 'ETOOMANYREFS', 'abbr': 'size_t', 'word': 'ETOOMANYREFS', 'kind': 'M'}
{'menu': '__SMOD', 'abbr': 'size_t', 'word': '__SMOD', 'kind': 'M'}
{'menu': 'EPROGMISMATCH', 'abbr': 'size_t', 'word': 'EPROGMISMATCH', 'kind': 'M'}
{'menu': '__STDC_WANT_LIB_EXT1__', 'abbr': 'size_t', 'word': '__STDC_WANT_LIB_EXT1__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6', 'kind': 'M'}
{'menu': '_IOLBF', 'abbr': 'size_t', 'word': '_IOLBF', 'kind': 'M'}
{'menu': 'ERPCMISMATCH', 'abbr': 'size_t', 'word': 'ERPCMISMATCH', 'kind': 'M'}
{'menu': '__DARWIN_C_LEVEL', 'abbr': 'size_t', 'word': '__DARWIN_C_LEVEL', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__SOPT', 'abbr': 'size_t', 'word': '__SOPT', 'kind': 'M'}
{'menu': '__SIGN', 'abbr': 'size_t', 'word': '__SIGN', 'kind': 'M'}
{'menu': '__DARWIN_C_ANSI', 'abbr': 'size_t', 'word': '__DARWIN_C_ANSI', 'kind': 'M'}
{'menu': 'EOF', 'abbr': 'size_t', 'word': 'EOF', 'kind': 'M'}
{'menu': '_IOFBF', 'abbr': 'size_t', 'word': '_IOFBF', 'kind': 'M'}
{'menu': '__DARWIN_C_FULL', 'abbr': 'size_t', 'word': '__DARWIN_C_FULL', 'kind': 'M'}
{'menu': 'BUFSIZ', 'abbr': 'size_t', 'word': 'BUFSIZ', 'kind': 'M'}
{'menu': 'ULONG_LONG_MAX', 'abbr': 'size_t', 'word': 'ULONG_LONG_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '_IONBF', 'abbr': 'size_t', 'word': '_IONBF', 'kind': 'M'}
{'menu': 'PTHREAD_CREATE_JOINABLE', 'abbr': 'size_t', 'word': 'PTHREAD_CREATE_JOINABLE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'FILENAME_MAX', 'abbr': 'size_t', 'word': 'FILENAME_MAX', 'kind': 'M'}
{'menu': 'EBADRPC', 'abbr': 'size_t', 'word': 'EBADRPC', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7', 'kind': 'M'}
{'menu': '__POSIX_C_DEPRECATED(ver)', 'abbr': 'size_t', 'word': '__POSIX_C_DEPRECATED(<#ver#>)', 'kind': 'M'}
{'menu': 'EPROCUNAVAIL', 'abbr': 'size_t', 'word': 'EPROCUNAVAIL', 'kind': 'M'}
{'menu': 'FOPEN_MAX', 'abbr': 'size_t', 'word': 'FOPEN_MAX', 'kind': 'M'}
{'menu': 'EPFNOSUPPORT', 'abbr': 'size_t', 'word': 'EPFNOSUPPORT', 'kind': 'M'}
{'menu': 'EPROGUNAVAIL', 'abbr': 'size_t', 'word': 'EPROGUNAVAIL', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '___POSIX_C_DEPRECATED_STARTING_200112L', 'abbr': 'size_t', 'word': '___POSIX_C_DEPRECATED_STARTING_200112L', 'kind': 'M'}
{'menu': 'EPROCLIM', 'abbr': 'size_t', 'word': 'EPROCLIM', 'kind': 'M'}
{'menu': '___POSIX_C_DEPRECATED_STARTING_200809L', 'abbr': 'size_t', 'word': '___POSIX_C_DEPRECATED_STARTING_200809L', 'kind': 'M'}
{'menu': 'EAFNOSUPPORT', 'abbr': 'size_t', 'word': 'EAFNOSUPPORT', 'kind': 'M'}
{'menu': '___POSIX_C_DEPRECATED_STARTING_199506L', 'abbr': 'size_t', 'word': '___POSIX_C_DEPRECATED_STARTING_199506L', 'kind': 'M'}
{'menu': 'ESOCKTNOSUPPORT', 'abbr': 'size_t', 'word': 'ESOCKTNOSUPPORT', 'kind': 'M'}
{'menu': 'ENOMSG', 'abbr': 'size_t', 'word': 'ENOMSG', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'EHOSTDOWN', 'abbr': 'size_t', 'word': 'EHOSTDOWN', 'kind': 'M'}
{'menu': 'EFTYPE', 'abbr': 'size_t', 'word': 'EFTYPE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': 'EDQUOT', 'abbr': 'size_t', 'word': 'EDQUOT', 'kind': 'M'}
{'menu': '___POSIX_C_DEPRECATED_STARTING_199209L', 'abbr': 'size_t', 'word': '___POSIX_C_DEPRECATED_STARTING_199209L', 'kind': 'M'}
{'menu': 'ENOPROTOOPT', 'abbr': 'size_t', 'word': 'ENOPROTOOPT', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '___POSIX_C_DEPRECATED_STARTING_199309L', 'abbr': 'size_t', 'word': '___POSIX_C_DEPRECATED_STARTING_199309L', 'kind': 'M'}
{'menu': 'ENAMETOOLONG', 'abbr': 'size_t', 'word': 'ENAMETOOLONG', 'kind': 'M'}
{'menu': '_LIBCPP_NEW_DELETE_VIS', 'abbr': 'size_t', 'word': '_LIBCPP_NEW_DELETE_VIS', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'EMSGSIZE', 'abbr': 'size_t', 'word': 'EMSGSIZE', 'kind': 'M'}
{'menu': 'EPROTONOSUPPORT', 'abbr': 'size_t', 'word': 'EPROTONOSUPPORT', 'kind': 'M'}
{'menu': 'PATH_MAX', 'abbr': 'size_t', 'word': 'PATH_MAX', 'kind': 'M'}
{'menu': 'EPROTOTYPE', 'abbr': 'size_t', 'word': 'EPROTOTYPE', 'kind': 'M'}
{'menu': '_STRUCT_X86_EXCEPTION_STATE32', 'abbr': 'size_t', 'word': '_STRUCT_X86_EXCEPTION_STATE32', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '___POSIX_C_DEPRECATED_STARTING_199009L', 'abbr': 'size_t', 'word': '___POSIX_C_DEPRECATED_STARTING_199009L', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENOATTR', 'abbr': 'size_t', 'word': 'ENOATTR', 'kind': 'M'}
{'menu': 'ENOSYS', 'abbr': 'size_t', 'word': 'ENOSYS', 'kind': 'M'}
{'menu': 'ENOTCONN', 'abbr': 'size_t', 'word': 'ENOTCONN', 'kind': 'M'}
{'menu': '___POSIX_C_DEPRECATED_STARTING_198808L', 'abbr': 'size_t', 'word': '___POSIX_C_DEPRECATED_STARTING_198808L', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': 'EISCONN', 'abbr': 'size_t', 'word': 'EISCONN', 'kind': 'M'}
{'menu': 'OFF_MAX', 'abbr': 'size_t', 'word': 'OFF_MAX', 'kind': 'M'}
{'menu': 'ECONNABORTED', 'abbr': 'size_t', 'word': 'ECONNABORTED', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': 'PTHREAD_INHERIT_SCHED', 'abbr': 'size_t', 'word': 'PTHREAD_INHERIT_SCHED', 'kind': 'M'}
{'menu': '_POSIX_TRACE_EVENT_NAME_MAX', 'abbr': 'size_t', 'word': '_POSIX_TRACE_EVENT_NAME_MAX', 'kind': 'M'}
{'menu': 'ECANCELED', 'abbr': 'size_t', 'word': 'ECANCELED', 'kind': 'M'}
{'menu': 'ENETUNREACH', 'abbr': 'size_t', 'word': 'ENETUNREACH', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENETDOWN', 'abbr': 'size_t', 'word': 'ENETDOWN', 'kind': 'M'}
{'menu': 'ENOLCK', 'abbr': 'size_t', 'word': 'ENOLCK', 'kind': 'M'}
{'menu': 'ENOTSUP', 'abbr': 'size_t', 'word': 'ENOTSUP', 'kind': 'M'}
{'menu': 'ENOBUFS', 'abbr': 'size_t', 'word': 'ENOBUFS', 'kind': 'M'}
{'menu': 'ESTALE', 'abbr': 'size_t', 'word': 'ESTALE', 'kind': 'M'}
{'menu': 'NL_TEXTMAX', 'abbr': 'size_t', 'word': 'NL_TEXTMAX', 'kind': 'M'}
{'menu': 'EADDRINUSE', 'abbr': 'size_t', 'word': 'EADDRINUSE', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING(_mac, _iphone, x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING(<#_mac#>, <#_iphone#>, <#x#>)', 'kind': 'M'}
{'menu': 'ECONNRESET', 'abbr': 'size_t', 'word': 'ECONNRESET', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENETRESET', 'abbr': 'size_t', 'word': 'ENETRESET', 'kind': 'M'}
{'menu': 'EADDRNOTAVAIL', 'abbr': 'size_t', 'word': 'EADDRNOTAVAIL', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6', 'kind': 'M'}
{'menu': 'EREMOTE', 'abbr': 'size_t', 'word': 'EREMOTE', 'kind': 'M'}
{'menu': '_W_INT(w)', 'abbr': 'size_t', 'word': '_W_INT(<#w#>)', 'kind': 'M'}
{'menu': 'EBADEXEC', 'abbr': 'size_t', 'word': 'EBADEXEC', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4(<#x#>)', 'kind': 'M'}
{'menu': 'PTHREAD_CANCEL_ASYNCHRONOUS', 'abbr': 'size_t', 'word': 'PTHREAD_CANCEL_ASYNCHRONOUS', 'kind': 'M'}
{'menu': 'EILSEQ', 'abbr': 'size_t', 'word': 'EILSEQ', 'kind': 'M'}
{'menu': 'WAKEMON_GET_PARAMS', 'abbr': 'size_t', 'word': 'WAKEMON_GET_PARAMS', 'kind': 'M'}
{'menu': 'PIPE_BUF', 'abbr': 'size_t', 'word': 'PIPE_BUF', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2(<#x#>)', 'kind': 'M'}
{'menu': '_STRUCT_X86_DEBUG_STATE32', 'abbr': 'size_t', 'word': '_STRUCT_X86_DEBUG_STATE32', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6', 'kind': 'M'}
{'menu': 'LINK_MAX', 'abbr': 'size_t', 'word': 'LINK_MAX', 'kind': 'M'}
{'menu': 'EUSERS', 'abbr': 'size_t', 'word': 'EUSERS', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_11(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_11(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ESHUTDOWN', 'abbr': 'size_t', 'word': 'ESHUTDOWN', 'kind': 'M'}
{'menu': 'EOVERFLOW', 'abbr': 'size_t', 'word': 'EOVERFLOW', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7', 'kind': 'M'}
{'menu': 'PTHREAD_CREATE_DETACHED', 'abbr': 'size_t', 'word': 'PTHREAD_CREATE_DETACHED', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3(<#x#>)', 'kind': 'M'}
{'menu': 'PTHREAD_CANCEL_DISABLE', 'abbr': 'size_t', 'word': 'PTHREAD_CANCEL_DISABLE', 'kind': 'M'}
{'menu': 'PTHREAD_PROCESS_SHARED', 'abbr': 'size_t', 'word': 'PTHREAD_PROCESS_SHARED', 'kind': 'M'}
{'menu': 'EALREADY', 'abbr': 'size_t', 'word': 'EALREADY', 'kind': 'M'}
{'menu': 'ENOTSOCK', 'abbr': 'size_t', 'word': 'ENOTSOCK', 'kind': 'M'}
{'menu': 'PTHREAD_CANCEL_ENABLE', 'abbr': 'size_t', 'word': 'PTHREAD_CANCEL_ENABLE', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_10(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_10(<#x#>)', 'kind': 'M'}
{'menu': 'EBADMSG', 'abbr': 'size_t', 'word': 'EBADMSG', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9', 'kind': 'M'}
{'menu': 'EDESTADDRREQ', 'abbr': 'size_t', 'word': 'EDESTADDRREQ', 'kind': 'M'}
{'menu': 'EWOULDBLOCK', 'abbr': 'size_t', 'word': 'EWOULDBLOCK', 'kind': 'M'}
{'menu': 'IOPOL_UTILITY', 'abbr': 'size_t', 'word': 'IOPOL_UTILITY', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_8(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_8(<#x#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'EINPROGRESS', 'abbr': 'size_t', 'word': 'EINPROGRESS', 'kind': 'M'}
{'menu': 'RLIMIT_DATA', 'abbr': 'size_t', 'word': 'RLIMIT_DATA', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_9(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_9(<#x#>)', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_6(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_6(<#x#>)', 'kind': 'M'}
{'menu': 'EDEVERR', 'abbr': 'size_t', 'word': 'EDEVERR', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10', 'kind': 'M'}
{'menu': 'ERANGE', 'abbr': 'size_t', 'word': 'ERANGE', 'kind': 'M'}
{'menu': 'EAGAIN', 'abbr': 'size_t', 'word': 'EAGAIN', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_7(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_7(<#x#>)', 'kind': 'M'}
{'menu': 'EPWROFF', 'abbr': 'size_t', 'word': 'EPWROFF', 'kind': 'M'}
{'menu': 'ENEEDAUTH', 'abbr': 'size_t', 'word': 'ENEEDAUTH', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'EMLINK', 'abbr': 'size_t', 'word': 'EMLINK', 'kind': 'M'}
{'menu': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_5(x)', 'abbr': 'size_t', 'word': '__DARWIN_ALIAS_STARTING_MAC___MAC_10_5(<#x#>)', 'kind': 'M'}
{'menu': 'WAKEMON_DISABLE', 'abbr': 'size_t', 'word': 'WAKEMON_DISABLE', 'kind': 'M'}
{'menu': 'EPIPE', 'abbr': 'size_t', 'word': 'EPIPE', 'kind': 'M'}
{'menu': 'EDOM', 'abbr': 'size_t', 'word': 'EDOM', 'kind': 'M'}
{'menu': 'PTHREAD_SCOPE_SYSTEM', 'abbr': 'size_t', 'word': 'PTHREAD_SCOPE_SYSTEM', 'kind': 'M'}
{'menu': 'RSIZE_MAX', 'abbr': 'size_t', 'word': 'RSIZE_MAX', 'kind': 'M'}
{'menu': 'pthread_cleanup_pop(execute)', 'abbr': 'size_t', 'word': 'pthread_cleanup_pop(<#execute#>)', 'kind': 'M'}
{'menu': 'PTHREAD_CANCELED', 'abbr': 'size_t', 'word': 'PTHREAD_CANCELED', 'kind': 'M'}
{'menu': 'IOPOL_APPLICATION', 'abbr': 'size_t', 'word': 'IOPOL_APPLICATION', 'kind': 'M'}
{'menu': 'SIZE_MAX', 'abbr': 'size_t', 'word': 'SIZE_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_VARIABLE_TEMPLATES', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_VARIABLE_TEMPLATES', 'kind': 'M'}
{'menu': 'PTHREAD_CANCEL_DEFERRED', 'abbr': 'size_t', 'word': 'PTHREAD_CANCEL_DEFERRED', 'kind': 'M'}
{'menu': 'IOPOL_STANDARD', 'abbr': 'size_t', 'word': 'IOPOL_STANDARD', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_NOEXCEPT', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_NOEXCEPT', 'kind': 'M'}
{'menu': 'PTRDIFF_MAX', 'abbr': 'size_t', 'word': 'PTRDIFF_MAX', 'kind': 'M'}
{'menu': '_STRUCT_X86_THREAD_STATE64', 'abbr': 'size_t', 'word': '_STRUCT_X86_THREAD_STATE64', 'kind': 'M'}
{'menu': 'IOPOL_SCOPE_PROCESS', 'abbr': 'size_t', 'word': 'IOPOL_SCOPE_PROCESS', 'kind': 'M'}
{'menu': 'WIFCONTINUED(x)', 'abbr': 'size_t', 'word': 'WIFCONTINUED(<#x#>)', 'kind': 'M'}
{'menu': 'PTRDIFF_MIN', 'abbr': 'size_t', 'word': 'PTRDIFF_MIN', 'kind': 'M'}
{'menu': 'IOPOL_NORMAL', 'abbr': 'size_t', 'word': 'IOPOL_NORMAL', 'kind': 'M'}
{'menu': 'RLIMIT_STACK', 'abbr': 'size_t', 'word': 'RLIMIT_STACK', 'kind': 'M'}
{'menu': '_LIBCPP_UNDERLYING_TYPE(T)', 'abbr': 'size_t', 'word': '_LIBCPP_UNDERLYING_TYPE(<#T#>)', 'kind': 'M'}
{'menu': 'INT8_C(v)', 'abbr': 'size_t', 'word': 'INT8_C(<#v#>)', 'kind': 'M'}
{'menu': 'SIG_ATOMIC_MIN', 'abbr': 'size_t', 'word': 'SIG_ATOMIC_MIN', 'kind': 'M'}
{'menu': 'RLIM_INFINITY', 'abbr': 'size_t', 'word': 'RLIM_INFINITY', 'kind': 'M'}
{'menu': 'IOPOL_IMPORTANT', 'abbr': 'size_t', 'word': 'IOPOL_IMPORTANT', 'kind': 'M'}
{'menu': 'SIG_ATOMIC_MAX', 'abbr': 'size_t', 'word': 'SIG_ATOMIC_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_IS_LITERAL(T)', 'abbr': 'size_t', 'word': '_LIBCPP_IS_LITERAL(<#T#>)', 'kind': 'M'}
{'menu': 'WINT_MAX', 'abbr': 'size_t', 'word': 'WINT_MAX', 'kind': 'M'}
{'menu': 'WAKEMON_MAKE_FATAL', 'abbr': 'size_t', 'word': 'WAKEMON_MAKE_FATAL', 'kind': 'M'}
{'menu': 'WINT_MIN', 'abbr': 'size_t', 'word': 'WINT_MIN', 'kind': 'M'}
{'menu': 'RLIMIT_CPU', 'abbr': 'size_t', 'word': 'RLIMIT_CPU', 'kind': 'M'}
{'menu': 'RLIMIT_NOFILE', 'abbr': 'size_t', 'word': 'RLIMIT_NOFILE', 'kind': 'M'}
{'menu': 'UINT8_C(v)', 'abbr': 'size_t', 'word': 'UINT8_C(<#v#>)', 'kind': 'M'}
{'menu': 'CPUMON_MAKE_FATAL', 'abbr': 'size_t', 'word': 'CPUMON_MAKE_FATAL', 'kind': 'M'}
{'menu': 'RLIMIT_FSIZE', 'abbr': 'size_t', 'word': 'RLIMIT_FSIZE', 'kind': 'M'}
{'menu': 'INT64_C(v)', 'abbr': 'size_t', 'word': 'INT64_C(<#v#>)', 'kind': 'M'}
{'menu': 'INT16_C(v)', 'abbr': 'size_t', 'word': 'INT16_C(<#v#>)', 'kind': 'M'}
{'menu': 'INT32_C(v)', 'abbr': 'size_t', 'word': 'INT32_C(<#v#>)', 'kind': 'M'}
{'menu': 'WCOREDUMP(x)', 'abbr': 'size_t', 'word': 'WCOREDUMP(<#x#>)', 'kind': 'M'}
{'menu': 'PTHREAD_SCOPE_PROCESS', 'abbr': 'size_t', 'word': 'PTHREAD_SCOPE_PROCESS', 'kind': 'M'}
{'menu': 'IOPOL_TYPE_DISK', 'abbr': 'size_t', 'word': 'IOPOL_TYPE_DISK', 'kind': 'M'}
{'menu': 'WAKEMON_ENABLE', 'abbr': 'size_t', 'word': 'WAKEMON_ENABLE', 'kind': 'M'}
{'menu': 'WNOHANG', 'abbr': 'size_t', 'word': 'WNOHANG', 'kind': 'M'}
{'menu': '_STRUCT_X86_AVX_STATE32', 'abbr': 'size_t', 'word': '_STRUCT_X86_AVX_STATE32', 'kind': 'M'}
{'menu': 'UINTMAX_C(v)', 'abbr': 'size_t', 'word': 'UINTMAX_C(<#v#>)', 'kind': 'M'}
{'menu': 'ENODATA', 'abbr': 'size_t', 'word': 'ENODATA', 'kind': 'M'}
{'menu': 'UINT64_C(v)', 'abbr': 'size_t', 'word': 'UINT64_C(<#v#>)', 'kind': 'M'}
{'menu': 'INTMAX_C(v)', 'abbr': 'size_t', 'word': 'INTMAX_C(<#v#>)', 'kind': 'M'}
{'menu': 'RLIMIT_WAKEUPS_MONITOR', 'abbr': 'size_t', 'word': 'RLIMIT_WAKEUPS_MONITOR', 'kind': 'M'}
{'menu': 'UINT32_C(v)', 'abbr': 'size_t', 'word': 'UINT32_C(<#v#>)', 'kind': 'M'}
{'menu': 'PTHREAD_EXPLICIT_SCHED', 'abbr': 'size_t', 'word': 'PTHREAD_EXPLICIT_SCHED', 'kind': 'M'}
{'menu': 'UINT16_C(v)', 'abbr': 'size_t', 'word': 'UINT16_C(<#v#>)', 'kind': 'M'}
{'menu': 'WUNTRACED', 'abbr': 'size_t', 'word': 'WUNTRACED', 'kind': 'M'}
{'menu': 'WCOREFLAG', 'abbr': 'size_t', 'word': 'WCOREFLAG', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_VARIADICS', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_VARIADICS', 'kind': 'M'}
{'menu': '_U_LONG', 'abbr': 'size_t', 'word': '_U_LONG', 'kind': 'M'}
{'menu': 'WEXITSTATUS(x)', 'abbr': 'size_t', 'word': 'WEXITSTATUS(<#x#>)', 'kind': 'M'}
{'menu': '_WSTOPPED', 'abbr': 'size_t', 'word': '_WSTOPPED', 'kind': 'M'}
{'menu': '_RUNE_MAGIC_A', 'abbr': 'size_t', 'word': '_RUNE_MAGIC_A', 'kind': 'M'}
{'menu': 'WIFSIGNALED(x)', 'abbr': 'size_t', 'word': 'WIFSIGNALED(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_TRAILING_RETURN', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_TRAILING_RETURN', 'kind': 'M'}
{'menu': 'WSTOPSIG(x)', 'abbr': 'size_t', 'word': 'WSTOPSIG(<#x#>)', 'kind': 'M'}
{'menu': 'IOPOL_SCOPE_DARWIN_BG', 'abbr': 'size_t', 'word': 'IOPOL_SCOPE_DARWIN_BG', 'kind': 'M'}
{'menu': 'RLIMIT_CORE', 'abbr': 'size_t', 'word': 'RLIMIT_CORE', 'kind': 'M'}
{'menu': 'IOPOL_SCOPE_THREAD', 'abbr': 'size_t', 'word': 'IOPOL_SCOPE_THREAD', 'kind': 'M'}
{'menu': 'NL_MSGMAX', 'abbr': 'size_t', 'word': 'NL_MSGMAX', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_GENERALIZED_INITIALIZERS', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_GENERALIZED_INITIALIZERS', 'kind': 'M'}
{'menu': '_WSTATUS(x)', 'abbr': 'size_t', 'word': '_WSTATUS(<#x#>)', 'kind': 'M'}
{'menu': 'IOPOL_THROTTLE', 'abbr': 'size_t', 'word': 'IOPOL_THROTTLE', 'kind': 'M'}
{'menu': '_CTYPE_C', 'abbr': 'size_t', 'word': '_CTYPE_C', 'kind': 'M'}
{'menu': 'WIFSTOPPED(x)', 'abbr': 'size_t', 'word': 'WIFSTOPPED(<#x#>)', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_IS_BASE_OF', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_IS_BASE_OF', 'kind': 'M'}
{'menu': 'IOPOL_PASSIVE', 'abbr': 'size_t', 'word': 'IOPOL_PASSIVE', 'kind': 'M'}
{'menu': '_CTYPE_A', 'abbr': 'size_t', 'word': '_CTYPE_A', 'kind': 'M'}
{'menu': '_CTYPE_L', 'abbr': 'size_t', 'word': '_CTYPE_L', 'kind': 'M'}
{'menu': '_CTYPE_G', 'abbr': 'size_t', 'word': '_CTYPE_G', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_IS_FINAL', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_IS_FINAL', 'kind': 'M'}
{'menu': 'W_EXITCODE(ret, sig)', 'abbr': 'size_t', 'word': 'W_EXITCODE(<#ret#>, <#sig#>)', 'kind': 'M'}
{'menu': '_CTYPE_D', 'abbr': 'size_t', 'word': '_CTYPE_D', 'kind': 'M'}
{'menu': '_CTYPE_S', 'abbr': 'size_t', 'word': '_CTYPE_S', 'kind': 'M'}
{'menu': '_CTYPE_P', 'abbr': 'size_t', 'word': '_CTYPE_P', 'kind': 'M'}
{'menu': 'WTERMSIG(x)', 'abbr': 'size_t', 'word': 'WTERMSIG(<#x#>)', 'kind': 'M'}
{'menu': '_CTYPE_X', 'abbr': 'size_t', 'word': '_CTYPE_X', 'kind': 'M'}
{'menu': 'IOPOL_DEFAULT', 'abbr': 'size_t', 'word': 'IOPOL_DEFAULT', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_CONSTEXPR', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_CONSTEXPR', 'kind': 'M'}
{'menu': '_CTYPE_U', 'abbr': 'size_t', 'word': '_CTYPE_U', 'kind': 'M'}
{'menu': 'WIFEXITED(x)', 'abbr': 'size_t', 'word': 'WIFEXITED(<#x#>)', 'kind': 'M'}
{'menu': '_CTYPE_R', 'abbr': 'size_t', 'word': '_CTYPE_R', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_CXX14_CONSTEXPR', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_CXX14_CONSTEXPR', 'kind': 'M'}
{'menu': '_CTYPE_B', 'abbr': 'size_t', 'word': '_CTYPE_B', 'kind': 'M'}
{'menu': 'SV_ONSTACK', 'abbr': 'size_t', 'word': 'SV_ONSTACK', 'kind': 'M'}
{'menu': '_STRUCT_MCONTEXT_AVX32', 'abbr': 'size_t', 'word': '_STRUCT_MCONTEXT_AVX32', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_DELETED_FUNCTIONS', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_DELETED_FUNCTIONS', 'kind': 'M'}
{'menu': 'SV_INTERRUPT', 'abbr': 'size_t', 'word': 'SV_INTERRUPT', 'kind': 'M'}
{'menu': 'SV_RESETHAND', 'abbr': 'size_t', 'word': 'SV_RESETHAND', 'kind': 'M'}
{'menu': '_STRUCT_MCONTEXT32', 'abbr': 'size_t', 'word': '_STRUCT_MCONTEXT32', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_LAMBDAS', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_LAMBDAS', 'kind': 'M'}
{'menu': '_STRUCT_X86_DEBUG_STATE64', 'abbr': 'size_t', 'word': '_STRUCT_X86_DEBUG_STATE64', 'kind': 'M'}
{'menu': 'SIGSTKSZ', 'abbr': 'size_t', 'word': 'SIGSTKSZ', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_NULLPTR', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_NULLPTR', 'kind': 'M'}
{'menu': 'SS_DISABLE', 'abbr': 'size_t', 'word': 'SS_DISABLE', 'kind': 'M'}
{'menu': '_STRUCT_X86_EXCEPTION_STATE64', 'abbr': 'size_t', 'word': '_STRUCT_X86_EXCEPTION_STATE64', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_RVALUE_REFERENCES', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_RVALUE_REFERENCES', 'kind': 'M'}
{'menu': 'MINSIGSTKSZ', 'abbr': 'size_t', 'word': 'MINSIGSTKSZ', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_STATIC_ASSERT', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_STATIC_ASSERT', 'kind': 'M'}
{'menu': 'SS_ONSTACK', 'abbr': 'size_t', 'word': 'SS_ONSTACK', 'kind': 'M'}
{'menu': 'SI_TIMER', 'abbr': 'size_t', 'word': 'SI_TIMER', 'kind': 'M'}
{'menu': 'SI_ASYNCIO', 'abbr': 'size_t', 'word': 'SI_ASYNCIO', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_AUTO_TYPE', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_AUTO_TYPE', 'kind': 'M'}
{'menu': 'SI_MESGQ', 'abbr': 'size_t', 'word': 'SI_MESGQ', 'kind': 'M'}
{'menu': 'SI_USER', 'abbr': 'size_t', 'word': 'SI_USER', 'kind': 'M'}
{'menu': 'SI_QUEUE', 'abbr': 'size_t', 'word': 'SI_QUEUE', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_ADVANCED_SFINAE', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_ADVANCED_SFINAE', 'kind': 'M'}
{'menu': 'SIG_UNBLOCK', 'abbr': 'size_t', 'word': 'SIG_UNBLOCK', 'kind': 'M'}
{'menu': '_LIBCPP_ASSERT(x, m)', 'abbr': 'size_t', 'word': '_LIBCPP_ASSERT(<#x#>, <#m#>)', 'kind': 'M'}
{'menu': 'SIG_SETMASK', 'abbr': 'size_t', 'word': 'SIG_SETMASK', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_STRONG_ENUMS', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_STRONG_ENUMS', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_DECLTYPE', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_DECLTYPE', 'kind': 'M'}
{'menu': '_LIBCPP_NORETURN', 'abbr': 'size_t', 'word': '_LIBCPP_NORETURN', 'kind': 'M'}
{'menu': 'WEOF', 'abbr': 'size_t', 'word': 'WEOF', 'kind': 'M'}
{'menu': '__DARWIN_WCTYPE_TOP_inline', 'abbr': 'size_t', 'word': '__DARWIN_WCTYPE_TOP_inline', 'kind': 'M'}
{'menu': 'UINT_FAST64_MAX', 'abbr': 'size_t', 'word': 'UINT_FAST64_MAX', 'kind': 'M'}
{'menu': '_STRUCT_MCONTEXT', 'abbr': 'size_t', 'word': '_STRUCT_MCONTEXT', 'kind': 'M'}
{'menu': 'INTPTR_MIN', 'abbr': 'size_t', 'word': 'INTPTR_MIN', 'kind': 'M'}
{'menu': '_LIBCPP_UNUSED', 'abbr': 'size_t', 'word': '_LIBCPP_UNUSED', 'kind': 'M'}
{'menu': 'UINT_FAST16_MAX', 'abbr': 'size_t', 'word': 'UINT_FAST16_MAX', 'kind': 'M'}
{'menu': 'UINT_FAST8_MAX', 'abbr': 'size_t', 'word': 'UINT_FAST8_MAX', 'kind': 'M'}
{'menu': '_CRMASK', 'abbr': 'size_t', 'word': '_CRMASK', 'kind': 'M'}
{'menu': 'UINT_FAST32_MAX', 'abbr': 'size_t', 'word': 'UINT_FAST32_MAX', 'kind': 'M'}
{'menu': '_MCONTEXT_T', 'abbr': 'size_t', 'word': '_MCONTEXT_T', 'kind': 'M'}
{'menu': '_CACHED_RUNES', 'abbr': 'size_t', 'word': '_CACHED_RUNES', 'kind': 'M'}
{'menu': '_STRUCT_MCONTEXT_AVX64', 'abbr': 'size_t', 'word': '_STRUCT_MCONTEXT_AVX64', 'kind': 'M'}
{'menu': 'SV_SIGINFO', 'abbr': 'size_t', 'word': 'SV_SIGINFO', 'kind': 'M'}
{'menu': 'INTMAX_MIN', 'abbr': 'size_t', 'word': 'INTMAX_MIN', 'kind': 'M'}
{'menu': 'UINTMAX_MAX', 'abbr': 'size_t', 'word': 'UINTMAX_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_DEFAULT_FUNCTION_TEMPLATE_ARGS', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_DEFAULT_FUNCTION_TEMPLATE_ARGS', 'kind': 'M'}
{'menu': 'INTMAX_MAX', 'abbr': 'size_t', 'word': 'INTMAX_MAX', 'kind': 'M'}
{'menu': '_STRUCT_MCONTEXT64', 'abbr': 'size_t', 'word': '_STRUCT_MCONTEXT64', 'kind': 'M'}
{'menu': 'SV_NODEFER', 'abbr': 'size_t', 'word': 'SV_NODEFER', 'kind': 'M'}
{'menu': 'INTPTR_MAX', 'abbr': 'size_t', 'word': 'INTPTR_MAX', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_DEFAULTED_FUNCTIONS', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_DEFAULTED_FUNCTIONS', 'kind': 'M'}
{'menu': 'SV_NOCLDSTOP', 'abbr': 'size_t', 'word': 'SV_NOCLDSTOP', 'kind': 'M'}
{'menu': 'UINTPTR_MAX', 'abbr': 'size_t', 'word': 'UINTPTR_MAX', 'kind': 'M'}
{'menu': 'POLL_HUP', 'abbr': 'size_t', 'word': 'POLL_HUP', 'kind': 'M'}
{'menu': 'sv_onstack', 'abbr': 'size_t', 'word': 'sv_onstack', 'kind': 'M'}
{'menu': 'sigmask(m)', 'abbr': 'size_t', 'word': 'sigmask(<#m#>)', 'kind': 'M'}
{'menu': '_POSIX_AIO_MAX', 'abbr': 'size_t', 'word': '_POSIX_AIO_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '_POSIX_AIO_LISTIO_MAX', 'abbr': 'size_t', 'word': '_POSIX_AIO_LISTIO_MAX', 'kind': 'M'}
{'menu': 'POLL_PRI', 'abbr': 'size_t', 'word': 'POLL_PRI', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA', 'kind': 'M'}
{'menu': '_POSIX2_RE_DUP_MAX', 'abbr': 'size_t', 'word': '_POSIX2_RE_DUP_MAX', 'kind': 'M'}
{'menu': 'BADSIG', 'abbr': 'size_t', 'word': 'BADSIG', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_NA', 'kind': 'M'}
{'menu': '_POSIX2_LINE_MAX', 'abbr': 'size_t', 'word': '_POSIX2_LINE_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_4', 'kind': 'M'}
{'menu': 'POLL_IN', 'abbr': 'size_t', 'word': 'POLL_IN', 'kind': 'M'}
{'menu': '_POSIX_RTSIG_MAX', 'abbr': 'size_t', 'word': '_POSIX_RTSIG_MAX', 'kind': 'M'}
{'menu': 'CLD_CONTINUED', 'abbr': 'size_t', 'word': 'CLD_CONTINUED', 'kind': 'M'}
{'menu': 'POLL_OUT', 'abbr': 'size_t', 'word': 'POLL_OUT', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '_POSIX_MQ_PRIO_MAX', 'abbr': 'size_t', 'word': '_POSIX_MQ_PRIO_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '_POSIX_DELAYTIMER_MAX', 'abbr': 'size_t', 'word': '_POSIX_DELAYTIMER_MAX', 'kind': 'M'}
{'menu': '_POSIX_MQ_OPEN_MAX', 'abbr': 'size_t', 'word': '_POSIX_MQ_OPEN_MAX', 'kind': 'M'}
{'menu': '_POSIX2_BC_DIM_MAX', 'abbr': 'size_t', 'word': '_POSIX2_BC_DIM_MAX', 'kind': 'M'}
{'menu': 'POLL_MSG', 'abbr': 'size_t', 'word': 'POLL_MSG', 'kind': 'M'}
{'menu': 'CLD_DUMPED', 'abbr': 'size_t', 'word': 'CLD_DUMPED', 'kind': 'M'}
{'menu': '_POSIX2_BC_BASE_MAX', 'abbr': 'size_t', 'word': '_POSIX2_BC_BASE_MAX', 'kind': 'M'}
{'menu': 'CLD_KILLED', 'abbr': 'size_t', 'word': 'CLD_KILLED', 'kind': 'M'}
{'menu': 'CLD_STOPPED', 'abbr': 'size_t', 'word': 'CLD_STOPPED', 'kind': 'M'}
{'menu': '_POSIX_TZNAME_MAX', 'abbr': 'size_t', 'word': '_POSIX_TZNAME_MAX', 'kind': 'M'}
{'menu': '__OSX_AVAILABLE_BUT_DEPRECATED(_osxIntro, _osxDep, _iosIntro, _iosDep)', 'abbr': 'size_t', 'word': '__OSX_AVAILABLE_BUT_DEPRECATED(<#_osxIntro#>, <#_osxDep#>, <#_iosIntro#>, <#_iosDep#>)', 'kind': 'M'}
{'menu': '_POSIX_STREAM_MAX', 'abbr': 'size_t', 'word': '_POSIX_STREAM_MAX', 'kind': 'M'}
{'menu': 'CLD_TRAPPED', 'abbr': 'size_t', 'word': 'CLD_TRAPPED', 'kind': 'M'}
{'menu': 'POLL_ERR', 'abbr': 'size_t', 'word': 'POLL_ERR', 'kind': 'M'}
{'menu': 'TRAP_BRKPT', 'abbr': 'size_t', 'word': 'TRAP_BRKPT', 'kind': 'M'}
{'menu': '_POSIX2_EXPR_NEST_MAX', 'abbr': 'size_t', 'word': '_POSIX2_EXPR_NEST_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA', 'kind': 'M'}
{'menu': '_POSIX2_EQUIV_CLASS_MAX', 'abbr': 'size_t', 'word': '_POSIX2_EQUIV_CLASS_MAX', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'CLD_NOOP', 'abbr': 'size_t', 'word': 'CLD_NOOP', 'kind': 'M'}
{'menu': '_POSIX2_BC_STRING_MAX', 'abbr': 'size_t', 'word': '_POSIX2_BC_STRING_MAX', 'kind': 'M'}
{'menu': 'BUS_OBJERR', 'abbr': 'size_t', 'word': 'BUS_OBJERR', 'kind': 'M'}
{'menu': 'TRAP_TRACE', 'abbr': 'size_t', 'word': 'TRAP_TRACE', 'kind': 'M'}
{'menu': '_POSIX2_BC_SCALE_MAX', 'abbr': 'size_t', 'word': '_POSIX2_BC_SCALE_MAX', 'kind': 'M'}
{'menu': '__OSX_AVAILABLE_STARTING(_osx, _ios)', 'abbr': 'size_t', 'word': '__OSX_AVAILABLE_STARTING(<#_osx#>, <#_ios#>)', 'kind': 'M'}
{'menu': 'CLD_EXITED', 'abbr': 'size_t', 'word': 'CLD_EXITED', 'kind': 'M'}
{'menu': '__OSX_AVAILABLE_BUT_DEPRECATED_MSG(_osxIntro, _osxDep, _iosIntro, _iosDep, _msg)', 'abbr': 'size_t', 'word': '__OSX_AVAILABLE_BUT_DEPRECATED_MSG(<#_osxIntro#>, <#_osxDep#>, <#_iosIntro#>, <#_iosDep#>, <#_msg#>)', 'kind': 'M'}
{'menu': '_POSIX_HOST_NAME_MAX', 'abbr': 'size_t', 'word': '_POSIX_HOST_NAME_MAX', 'kind': 'M'}
{'menu': 'PTHREAD_STACK_MIN', 'abbr': 'size_t', 'word': 'PTHREAD_STACK_MIN', 'kind': 'M'}
{'menu': 'SA_SIGINFO', 'abbr': 'size_t', 'word': 'SA_SIGINFO', 'kind': 'M'}
{'menu': '__OS_AVAILABILITY(_target, _availability)', 'abbr': 'size_t', 'word': '__OS_AVAILABILITY(<#_target#>, <#_availability#>)', 'kind': 'M'}
{'menu': 'PTHREAD_KEYS_MAX', 'abbr': 'size_t', 'word': 'PTHREAD_KEYS_MAX', 'kind': 'M'}
{'menu': 'SA_USERSPACE_MASK', 'abbr': 'size_t', 'word': 'SA_USERSPACE_MASK', 'kind': 'M'}
{'menu': 'SIG_BLOCK', 'abbr': 'size_t', 'word': 'SIG_BLOCK', 'kind': 'M'}
{'menu': 'PTHREAD_DESTRUCTOR_ITERATIONS', 'abbr': 'size_t', 'word': 'PTHREAD_DESTRUCTOR_ITERATIONS', 'kind': 'M'}
{'menu': 'SA_NOCLDSTOP', 'abbr': 'size_t', 'word': 'SA_NOCLDSTOP', 'kind': 'M'}
{'menu': 'SA_USERTRAMP', 'abbr': 'size_t', 'word': 'SA_USERTRAMP', 'kind': 'M'}
{'menu': '_POSIX_SYMLOOP_MAX', 'abbr': 'size_t', 'word': '_POSIX_SYMLOOP_MAX', 'kind': 'M'}
{'menu': '__STDDEF_H', 'abbr': 'size_t', 'word': '__STDDEF_H', 'kind': 'M'}
{'menu': 'SA_RESETHAND', 'abbr': 'size_t', 'word': 'SA_RESETHAND', 'kind': 'M'}
{'menu': '_POSIX_SYMLINK_MAX', 'abbr': 'size_t', 'word': '_POSIX_SYMLINK_MAX', 'kind': 'M'}
{'menu': 'WAKEMON_SET_DEFAULTS', 'abbr': 'size_t', 'word': 'WAKEMON_SET_DEFAULTS', 'kind': 'M'}
{'menu': 'SA_NOCLDWAIT', 'abbr': 'size_t', 'word': 'SA_NOCLDWAIT', 'kind': 'M'}
{'menu': '_POSIX_SS_REPL_MAX', 'abbr': 'size_t', 'word': '_POSIX_SS_REPL_MAX', 'kind': 'M'}
{'menu': 'SA_NODEFER', 'abbr': 'size_t', 'word': 'SA_NODEFER', 'kind': 'M'}
{'menu': '_POSIX_LOGIN_NAME_MAX', 'abbr': 'size_t', 'word': '_POSIX_LOGIN_NAME_MAX', 'kind': 'M'}
{'menu': '_POSIX_TIMER_MAX', 'abbr': 'size_t', 'word': '_POSIX_TIMER_MAX', 'kind': 'M'}
{'menu': 'sa_handler', 'abbr': 'size_t', 'word': 'sa_handler', 'kind': 'M'}
{'menu': '_POSIX_SIGQUEUE_MAX', 'abbr': 'size_t', 'word': '_POSIX_SIGQUEUE_MAX', 'kind': 'M'}
{'menu': '__IOS_EXTENSION_UNAVAILABLE(_msg)', 'abbr': 'size_t', 'word': '__IOS_EXTENSION_UNAVAILABLE(<#_msg#>)', 'kind': 'M'}
{'menu': '_POSIX_SEM_VALUE_MAX', 'abbr': 'size_t', 'word': '_POSIX_SEM_VALUE_MAX', 'kind': 'M'}
{'menu': 'SA_RESTART', 'abbr': 'size_t', 'word': 'SA_RESTART', 'kind': 'M'}
{'menu': '_POSIX_SEM_NSEMS_MAX', 'abbr': 'size_t', 'word': '_POSIX_SEM_NSEMS_MAX', 'kind': 'M'}
{'menu': 'SA_ONSTACK', 'abbr': 'size_t', 'word': 'SA_ONSTACK', 'kind': 'M'}
{'menu': '__OS_EXTENSION_UNAVAILABLE(_msg)', 'abbr': 'size_t', 'word': '__OS_EXTENSION_UNAVAILABLE(<#_msg#>)', 'kind': 'M'}
{'menu': 'sa_sigaction', 'abbr': 'size_t', 'word': 'sa_sigaction', 'kind': 'M'}
{'menu': '__OS_AVAILABILITY_MSG(_target, _availability, _msg)', 'abbr': 'size_t', 'word': '__OS_AVAILABILITY_MSG(<#_target#>, <#_availability#>, <#_msg#>)', 'kind': 'M'}
{'menu': '_POSIX_THREAD_THREADS_MAX', 'abbr': 'size_t', 'word': '_POSIX_THREAD_THREADS_MAX', 'kind': 'M'}
{'menu': 'SA_64REGSET', 'abbr': 'size_t', 'word': 'SA_64REGSET', 'kind': 'M'}
{'menu': '_POSIX_THREAD_KEYS_MAX', 'abbr': 'size_t', 'word': '_POSIX_THREAD_KEYS_MAX', 'kind': 'M'}
{'menu': '_POSIX_THREAD_DESTRUCTOR_ITERATIONS', 'abbr': 'size_t', 'word': '_POSIX_THREAD_DESTRUCTOR_ITERATIONS', 'kind': 'M'}
{'menu': '__OSX_EXTENSION_UNAVAILABLE(_msg)', 'abbr': 'size_t', 'word': '__OSX_EXTENSION_UNAVAILABLE(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11', 'kind': 'M'}
{'menu': 'offsetof(t, d)', 'abbr': 'size_t', 'word': 'offsetof(<#t#>, <#d#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '_PTRDIFF_T', 'abbr': 'size_t', 'word': '_PTRDIFF_T', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': 'SEGV_ACCERR', 'abbr': 'size_t', 'word': 'SEGV_ACCERR', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10', 'kind': 'M'}
{'menu': 'SEGV_MAPERR', 'abbr': 'size_t', 'word': 'SEGV_MAPERR', 'kind': 'M'}
{'menu': 'BUS_NOOP', 'abbr': 'size_t', 'word': 'BUS_NOOP', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'BUS_ADRALN', 'abbr': 'size_t', 'word': 'BUS_ADRALN', 'kind': 'M'}
{'menu': 'BUS_ADRERR', 'abbr': 'size_t', 'word': 'BUS_ADRERR', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': 'FPE_FLTSUB', 'abbr': 'size_t', 'word': 'FPE_FLTSUB', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'FPE_INTDIV', 'abbr': 'size_t', 'word': 'FPE_INTDIV', 'kind': 'M'}
{'menu': 'FPE_INTOVF', 'abbr': 'size_t', 'word': 'FPE_INTOVF', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': 'SEGV_NOOP', 'abbr': 'size_t', 'word': 'SEGV_NOOP', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'errno', 'abbr': 'size_t', 'word': 'errno', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4', 'kind': 'M'}
{'menu': 'EPERM', 'abbr': 'size_t', 'word': 'EPERM', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENOENT', 'abbr': 'size_t', 'word': 'ENOENT', 'kind': 'M'}
{'menu': 'EINTR', 'abbr': 'size_t', 'word': 'EINTR', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': 'EIO', 'abbr': 'size_t', 'word': 'EIO', 'kind': 'M'}
{'menu': 'ESRCH', 'abbr': 'size_t', 'word': 'ESRCH', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENXIO', 'abbr': 'size_t', 'word': 'ENXIO', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2', 'kind': 'M'}
{'menu': 'E2BIG', 'abbr': 'size_t', 'word': 'E2BIG', 'kind': 'M'}
{'menu': 'EBADF', 'abbr': 'size_t', 'word': 'EBADF', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENOEXEC', 'abbr': 'size_t', 'word': 'ENOEXEC', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_1', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_1', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__TVOS_PROHIBITED', 'abbr': 'size_t', 'word': '__TVOS_PROHIBITED', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__TVOS_UNAVAILABLE', 'abbr': 'size_t', 'word': '__TVOS_UNAVAILABLE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__IOS_DEPRECATED(_start, _dep, _msg)', 'abbr': 'size_t', 'word': '__IOS_DEPRECATED(<#_start#>, <#_dep#>, <#_msg#>)', 'kind': 'M'}
{'menu': '__WATCHOS_UNAVAILABLE', 'abbr': 'size_t', 'word': '__WATCHOS_UNAVAILABLE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '__TVOS_DEPRECATED(_start, _dep, _msg)', 'abbr': 'size_t', 'word': '__TVOS_DEPRECATED(<#_start#>, <#_dep#>, <#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'NL_SETD', 'abbr': 'size_t', 'word': 'NL_SETD', 'kind': 'M'}
{'menu': '__TVOS_AVAILABLE(_vers)', 'abbr': 'size_t', 'word': '__TVOS_AVAILABLE(<#_vers#>)', 'kind': 'M'}
{'menu': '__WORDSIZE', 'abbr': 'size_t', 'word': '__WORDSIZE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8', 'kind': 'M'}
{'menu': '__OSX_DEPRECATED(_start, _dep, _msg)', 'abbr': 'size_t', 'word': '__OSX_DEPRECATED(<#_start#>, <#_dep#>, <#_msg#>)', 'kind': 'M'}
{'menu': '__DARWIN_FD_ZERO(p)', 'abbr': 'size_t', 'word': '__DARWIN_FD_ZERO(<#p#>)', 'kind': 'M'}
{'menu': '__DARWIN_FD_ISSET(n, p)', 'abbr': 'size_t', 'word': '__DARWIN_FD_ISSET(<#n#>, <#p#>)', 'kind': 'M'}
{'menu': '__OSX_AVAILABLE(_vers)', 'abbr': 'size_t', 'word': '__OSX_AVAILABLE(<#_vers#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9', 'kind': 'M'}
{'menu': '__DARWIN_FD_COPY(f, t)', 'abbr': 'size_t', 'word': '__DARWIN_FD_COPY(<#f#>, <#t#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__OSX_UNAVAILABLE', 'abbr': 'size_t', 'word': '__OSX_UNAVAILABLE', 'kind': 'M'}
{'menu': 'howmany(x, y)', 'abbr': 'size_t', 'word': 'howmany(<#x#>, <#y#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__IOS_AVAILABLE(_vers)', 'abbr': 'size_t', 'word': '__IOS_AVAILABLE(<#_vers#>)', 'kind': 'M'}
{'menu': 'NFDBITS', 'abbr': 'size_t', 'word': 'NFDBITS', 'kind': 'M'}
{'menu': 'NBBY', 'abbr': 'size_t', 'word': 'NBBY', 'kind': 'M'}
{'menu': '__IOS_PROHIBITED', 'abbr': 'size_t', 'word': '__IOS_PROHIBITED', 'kind': 'M'}
{'menu': '__IOS_UNAVAILABLE', 'abbr': 'size_t', 'word': '__IOS_UNAVAILABLE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10', 'kind': 'M'}
{'menu': 'WCHAR_MAX', 'abbr': 'size_t', 'word': 'WCHAR_MAX', 'kind': 'M'}
{'menu': 'EINVAL', 'abbr': 'size_t', 'word': 'EINVAL', 'kind': 'M'}
{'menu': 'WCHAR_MIN', 'abbr': 'size_t', 'word': 'WCHAR_MIN', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__DARWIN_NBBY', 'abbr': 'size_t', 'word': '__DARWIN_NBBY', 'kind': 'M'}
{'menu': '__DARWIN_NFDBITS', 'abbr': 'size_t', 'word': '__DARWIN_NFDBITS', 'kind': 'M'}
{'menu': 'EISDIR', 'abbr': 'size_t', 'word': 'EISDIR', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENOTTY', 'abbr': 'size_t', 'word': 'ENOTTY', 'kind': 'M'}
{'menu': '__DARWIN_howmany(x, y)', 'abbr': 'size_t', 'word': '__DARWIN_howmany(<#x#>, <#y#>)', 'kind': 'M'}
{'menu': 'ENFILE', 'abbr': 'size_t', 'word': 'ENFILE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'EMFILE', 'abbr': 'size_t', 'word': 'EMFILE', 'kind': 'M'}
{'menu': 'EFBIG', 'abbr': 'size_t', 'word': 'EFBIG', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA', 'kind': 'M'}
{'menu': 'va_start(ap, param)', 'abbr': 'size_t', 'word': 'va_start(<#ap#>, <#param#>)', 'kind': 'M'}
{'menu': 'ETXTBSY', 'abbr': 'size_t', 'word': 'ETXTBSY', 'kind': 'M'}
{'menu': 'ENOSPC', 'abbr': 'size_t', 'word': 'ENOSPC', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4', 'kind': 'M'}
{'menu': '_VA_LIST', 'abbr': 'size_t', 'word': '_VA_LIST', 'kind': 'M'}
{'menu': 'EROFS', 'abbr': 'size_t', 'word': 'EROFS', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4', 'kind': 'M'}
{'menu': '__DARWIN_FD_CLR(n, p)', 'abbr': 'size_t', 'word': '__DARWIN_FD_CLR(<#n#>, <#p#>)', 'kind': 'M'}
{'menu': 'ESPIPE', 'abbr': 'size_t', 'word': 'ESPIPE', 'kind': 'M'}
{'menu': 'NULL', 'abbr': 'size_t', 'word': 'NULL', 'kind': 'M'}
{'menu': 'EDEADLK', 'abbr': 'size_t', 'word': 'EDEADLK', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENOMEM', 'abbr': 'size_t', 'word': 'ENOMEM', 'kind': 'M'}
{'menu': '__WATCHOS_DEPRECATED(_start, _dep, _msg)', 'abbr': 'size_t', 'word': '__WATCHOS_DEPRECATED(<#_start#>, <#_dep#>, <#_msg#>)', 'kind': 'M'}
{'menu': 'ECHILD', 'abbr': 'size_t', 'word': 'ECHILD', 'kind': 'M'}
{'menu': '__WATCHOS_AVAILABLE(_vers)', 'abbr': 'size_t', 'word': '__WATCHOS_AVAILABLE(<#_vers#>)', 'kind': 'M'}
{'menu': 'EFAULT', 'abbr': 'size_t', 'word': 'EFAULT', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': 'EACCES', 'abbr': 'size_t', 'word': 'EACCES', 'kind': 'M'}
{'menu': '__WATCHOS_PROHIBITED', 'abbr': 'size_t', 'word': '__WATCHOS_PROHIBITED', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': 'ENOTBLK', 'abbr': 'size_t', 'word': 'ENOTBLK', 'kind': 'M'}
{'menu': 'EEXIST', 'abbr': 'size_t', 'word': 'EEXIST', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENODEV', 'abbr': 'size_t', 'word': 'ENODEV', 'kind': 'M'}
{'menu': 'EBUSY', 'abbr': 'size_t', 'word': 'EBUSY', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'EXDEV', 'abbr': 'size_t', 'word': 'EXDEV', 'kind': 'M'}
{'menu': 'ENOTDIR', 'abbr': 'size_t', 'word': 'ENOTDIR', 'kind': 'M'}
{'menu': '_NOEXCEPT', 'abbr': 'size_t', 'word': '_NOEXCEPT', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8', 'kind': 'M'}
{'menu': '_LIBCPP_HAS_NO_ASAN', 'abbr': 'size_t', 'word': '_LIBCPP_HAS_NO_ASAN', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7', 'kind': 'M'}
{'menu': '__DARWIN_FD_SETSIZE', 'abbr': 'size_t', 'word': '__DARWIN_FD_SETSIZE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9', 'kind': 'M'}
{'menu': '_VSTD', 'abbr': 'size_t', 'word': '_VSTD', 'kind': 'M'}
{'menu': '_LIBCPP_END_NAMESPACE_STD', 'abbr': 'size_t', 'word': '_LIBCPP_END_NAMESPACE_STD', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '_LIBCPP_BEGIN_NAMESPACE_STD', 'abbr': 'size_t', 'word': '_LIBCPP_BEGIN_NAMESPACE_STD', 'kind': 'M'}
{'menu': '__DARWIN_FD_SET(n, p)', 'abbr': 'size_t', 'word': '__DARWIN_FD_SET(<#n#>, <#p#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6', 'kind': 'M'}
{'menu': 'LC_COLLATE', 'abbr': 'size_t', 'word': 'LC_COLLATE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11', 'kind': 'M'}
{'menu': 'LC_CTYPE', 'abbr': 'size_t', 'word': 'LC_CTYPE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'LC_ALL', 'abbr': 'size_t', 'word': 'LC_ALL', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'NL_CAT_LOCALE', 'abbr': 'size_t', 'word': 'NL_CAT_LOCALE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '_LIBCPP_GET_C_LOCALE', 'abbr': 'size_t', 'word': '_LIBCPP_GET_C_LOCALE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_8', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'PTHREAD_MUTEX_ERRORCHECK', 'abbr': 'size_t', 'word': 'PTHREAD_MUTEX_ERRORCHECK', 'kind': 'M'}
{'menu': 'PTHREAD_MUTEX_NORMAL', 'abbr': 'size_t', 'word': 'PTHREAD_MUTEX_NORMAL', 'kind': 'M'}
{'menu': 'PRIO_MIN', 'abbr': 'size_t', 'word': 'PRIO_MIN', 'kind': 'M'}
{'menu': 'PRIO_MAX', 'abbr': 'size_t', 'word': 'PRIO_MAX', 'kind': 'M'}
{'menu': 'PTHREAD_MUTEX_DEFAULT', 'abbr': 'size_t', 'word': 'PTHREAD_MUTEX_DEFAULT', 'kind': 'M'}
{'menu': 'PRIO_DARWIN_BG', 'abbr': 'size_t', 'word': 'PRIO_DARWIN_BG', 'kind': 'M'}
{'menu': 'PTHREAD_MUTEX_RECURSIVE', 'abbr': 'size_t', 'word': 'PTHREAD_MUTEX_RECURSIVE', 'kind': 'M'}
{'menu': 'PTHREAD_PRIO_NONE', 'abbr': 'size_t', 'word': 'PTHREAD_PRIO_NONE', 'kind': 'M'}
{'menu': 'PRIO_DARWIN_NONUI', 'abbr': 'size_t', 'word': 'PRIO_DARWIN_NONUI', 'kind': 'M'}
{'menu': 'PTHREAD_PROCESS_PRIVATE', 'abbr': 'size_t', 'word': 'PTHREAD_PROCESS_PRIVATE', 'kind': 'M'}
{'menu': 'PRIO_DARWIN_PROCESS', 'abbr': 'size_t', 'word': 'PRIO_DARWIN_PROCESS', 'kind': 'M'}
{'menu': 'RUSAGE_CHILDREN', 'abbr': 'size_t', 'word': 'RUSAGE_CHILDREN', 'kind': 'M'}
{'menu': 'PTHREAD_PRIO_PROTECT', 'abbr': 'size_t', 'word': 'PTHREAD_PRIO_PROTECT', 'kind': 'M'}
{'menu': 'RUSAGE_SELF', 'abbr': 'size_t', 'word': 'RUSAGE_SELF', 'kind': 'M'}
{'menu': 'PTHREAD_PRIO_INHERIT', 'abbr': 'size_t', 'word': 'PTHREAD_PRIO_INHERIT', 'kind': 'M'}
{'menu': 'PTHREAD_COND_INITIALIZER', 'abbr': 'size_t', 'word': 'PTHREAD_COND_INITIALIZER', 'kind': 'M'}
{'menu': 'PTHREAD_RECURSIVE_MUTEX_INITIALIZER', 'abbr': 'size_t', 'word': 'PTHREAD_RECURSIVE_MUTEX_INITIALIZER', 'kind': 'M'}
{'menu': 'ru_first', 'abbr': 'size_t', 'word': 'ru_first', 'kind': 'M'}
{'menu': 'PTHREAD_ONCE_INIT', 'abbr': 'size_t', 'word': 'PTHREAD_ONCE_INIT', 'kind': 'M'}
{'menu': 'PTHREAD_RWLOCK_INITIALIZER', 'abbr': 'size_t', 'word': 'PTHREAD_RWLOCK_INITIALIZER', 'kind': 'M'}
{'menu': 'PTHREAD_ERRORCHECK_MUTEX_INITIALIZER', 'abbr': 'size_t', 'word': 'PTHREAD_ERRORCHECK_MUTEX_INITIALIZER', 'kind': 'M'}
{'menu': 'PTHREAD_MUTEX_INITIALIZER', 'abbr': 'size_t', 'word': 'PTHREAD_MUTEX_INITIALIZER', 'kind': 'M'}
{'menu': 'ru_last', 'abbr': 'size_t', 'word': 'ru_last', 'kind': 'M'}
{'menu': 'RUSAGE_INFO_V1', 'abbr': 'size_t', 'word': 'RUSAGE_INFO_V1', 'kind': 'M'}
{'menu': 'RUSAGE_INFO_V0', 'abbr': 'size_t', 'word': 'RUSAGE_INFO_V0', 'kind': 'M'}
{'menu': 'RUSAGE_INFO_V2', 'abbr': 'size_t', 'word': 'RUSAGE_INFO_V2', 'kind': 'M'}
{'menu': 'RUSAGE_INFO_V3', 'abbr': 'size_t', 'word': 'RUSAGE_INFO_V3', 'kind': 'M'}
{'menu': 'RUSAGE_INFO_CURRENT', 'abbr': 'size_t', 'word': 'RUSAGE_INFO_CURRENT', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__UINT32_FMTX__', 'abbr': 'size_t', 'word': '__UINT32_FMTX__', 'kind': 'M'}
{'menu': 'ENOLINK', 'abbr': 'size_t', 'word': 'ENOLINK', 'kind': 'M'}
{'menu': '__UINT32_C_SUFFIX__', 'abbr': 'size_t', 'word': '__UINT32_C_SUFFIX__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'ENOSTR', 'abbr': 'size_t', 'word': 'ENOSTR', 'kind': 'M'}
{'menu': '__UINT32_FMTu__', 'abbr': 'size_t', 'word': '__UINT32_FMTu__', 'kind': 'M'}
{'menu': 'EPROTO', 'abbr': 'size_t', 'word': 'EPROTO', 'kind': 'M'}
{'menu': '__UINT32_FMTx__', 'abbr': 'size_t', 'word': '__UINT32_FMTx__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6', 'kind': 'M'}
{'menu': '__INT16_MAX__', 'abbr': 'size_t', 'word': '__INT16_MAX__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'EOPNOTSUPP', 'abbr': 'size_t', 'word': 'EOPNOTSUPP', 'kind': 'M'}
{'menu': '__UINT32_TYPE__', 'abbr': 'size_t', 'word': '__UINT32_TYPE__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8', 'kind': 'M'}
{'menu': 'ENOPOLICY', 'abbr': 'size_t', 'word': 'ENOPOLICY', 'kind': 'M'}
{'menu': '__UINT32_FMTo__', 'abbr': 'size_t', 'word': '__UINT32_FMTo__', 'kind': 'M'}
{'menu': 'ETIME', 'abbr': 'size_t', 'word': 'ETIME', 'kind': 'M'}
{'menu': '__UINT16_C_SUFFIX__', 'abbr': 'size_t', 'word': '__UINT16_C_SUFFIX__', 'kind': 'M'}
{'menu': 'ENOSR', 'abbr': 'size_t', 'word': 'ENOSR', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7', 'kind': 'M'}
{'menu': '__UINT16_MAX__', 'abbr': 'size_t', 'word': '__UINT16_MAX__', 'kind': 'M'}
{'menu': 'EOWNERDEAD', 'abbr': 'size_t', 'word': 'EOWNERDEAD', 'kind': 'M'}
{'menu': 'ENOTRECOVERABLE', 'abbr': 'size_t', 'word': 'ENOTRECOVERABLE', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL_REGULAR', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL_REGULAR', 'kind': 'M'}
{'menu': '__UINT16_FMTu__', 'abbr': 'size_t', 'word': '__UINT16_FMTu__', 'kind': 'M'}
{'menu': '__UINT16_FMTo__', 'abbr': 'size_t', 'word': '__UINT16_FMTo__', 'kind': 'M'}
{'menu': '__MAC_OS_X_VERSION_MAX_ALLOWED', 'abbr': 'size_t', 'word': '__MAC_OS_X_VERSION_MAX_ALLOWED', 'kind': 'M'}
{'menu': '__UINT16_FMTX__', 'abbr': 'size_t', 'word': '__UINT16_FMTX__', 'kind': 'M'}
{'menu': '__MAC_OS_X_VERSION_MIN_REQUIRED', 'abbr': 'size_t', 'word': '__MAC_OS_X_VERSION_MIN_REQUIRED', 'kind': 'M'}
{'menu': '_FSTDIO', 'abbr': 'size_t', 'word': '_FSTDIO', 'kind': 'M'}
{'menu': '__UINT16_FMTx__', 'abbr': 'size_t', 'word': '__UINT16_FMTx__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0', 'kind': 'M'}
{'menu': '__UINT8_C_SUFFIX__', 'abbr': 'size_t', 'word': '__UINT8_C_SUFFIX__', 'kind': 'M'}
{'menu': '__UINT8_FMTX__', 'abbr': 'size_t', 'word': '__UINT8_FMTX__', 'kind': 'M'}
{'menu': '__UINT16_TYPE__', 'abbr': 'size_t', 'word': '__UINT16_TYPE__', 'kind': 'M'}
{'menu': '__INT8_MAX__', 'abbr': 'size_t', 'word': '__INT8_MAX__', 'kind': 'M'}
{'menu': '__UINT8_MAX__', 'abbr': 'size_t', 'word': '__UINT8_MAX__', 'kind': 'M'}
{'menu': '__UINT8_FMTo__', 'abbr': 'size_t', 'word': '__UINT8_FMTo__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__UINT8_TYPE__', 'abbr': 'size_t', 'word': '__UINT8_TYPE__', 'kind': 'M'}
{'menu': 'va_copy(dest, src)', 'abbr': 'size_t', 'word': 'va_copy(<#dest#>, <#src#>)', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1', 'kind': 'M'}
{'menu': '__UINT8_FMTx__', 'abbr': 'size_t', 'word': '__UINT8_FMTx__', 'kind': 'M'}
{'menu': '__GNUC_VA_LIST', 'abbr': 'size_t', 'word': '__GNUC_VA_LIST', 'kind': 'M'}
{'menu': '__UINT8_FMTu__', 'abbr': 'size_t', 'word': '__UINT8_FMTu__', 'kind': 'M'}
{'menu': '__INT64_FMTd__', 'abbr': 'size_t', 'word': '__INT64_FMTd__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': 'va_end(ap)', 'abbr': 'size_t', 'word': 'va_end(<#ap#>)', 'kind': 'M'}
{'menu': '__INT64_TYPE__', 'abbr': 'size_t', 'word': '__INT64_TYPE__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__INT64_C_SUFFIX__', 'abbr': 'size_t', 'word': '__INT64_C_SUFFIX__', 'kind': 'M'}
{'menu': 'va_arg(ap, type)', 'abbr': 'size_t', 'word': 'va_arg(<#ap#>, <#type#>)', 'kind': 'M'}
{'menu': '__va_copy(d, s)', 'abbr': 'size_t', 'word': '__va_copy(<#d#>, <#s#>)', 'kind': 'M'}
{'menu': '__INT64_FMTi__', 'abbr': 'size_t', 'word': '__INT64_FMTi__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2', 'kind': 'M'}
{'menu': '__TVOS_9_2', 'abbr': 'size_t', 'word': '__TVOS_9_2', 'kind': 'M'}
{'menu': '__INT32_FMTd__', 'abbr': 'size_t', 'word': '__INT32_FMTd__', 'kind': 'M'}
{'menu': '__TVOS_9_1', 'abbr': 'size_t', 'word': '__TVOS_9_1', 'kind': 'M'}
{'menu': '__INT32_TYPE__', 'abbr': 'size_t', 'word': '__INT32_TYPE__', 'kind': 'M'}
{'menu': '__INT32_C_SUFFIX__', 'abbr': 'size_t', 'word': '__INT32_C_SUFFIX__', 'kind': 'M'}
{'menu': '__WATCHOS_2_0', 'abbr': 'size_t', 'word': '__WATCHOS_2_0', 'kind': 'M'}
{'menu': '__INT32_FMTi__', 'abbr': 'size_t', 'word': '__INT32_FMTi__', 'kind': 'M'}
{'menu': '__WATCHOS_1_0', 'abbr': 'size_t', 'word': '__WATCHOS_1_0', 'kind': 'M'}
{'menu': '__INT16_TYPE__', 'abbr': 'size_t', 'word': '__INT16_TYPE__', 'kind': 'M'}
{'menu': '__INT16_FMTd__', 'abbr': 'size_t', 'word': '__INT16_FMTd__', 'kind': 'M'}
{'menu': '__INT8_C_SUFFIX__', 'abbr': 'size_t', 'word': '__INT8_C_SUFFIX__', 'kind': 'M'}
{'menu': '__INT16_C_SUFFIX__', 'abbr': 'size_t', 'word': '__INT16_C_SUFFIX__', 'kind': 'M'}
{'menu': '__INT16_FMTi__', 'abbr': 'size_t', 'word': '__INT16_FMTi__', 'kind': 'M'}
{'menu': '__INT8_TYPE__', 'abbr': 'size_t', 'word': '__INT8_TYPE__', 'kind': 'M'}
{'menu': '__BIGGEST_ALIGNMENT__', 'abbr': 'size_t', 'word': '__BIGGEST_ALIGNMENT__', 'kind': 'M'}
{'menu': '__INT8_FMTi__', 'abbr': 'size_t', 'word': '__INT8_FMTi__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL_DEPRECATED', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL_DEPRECATED', 'kind': 'M'}
{'menu': '__INT8_FMTd__', 'abbr': 'size_t', 'word': '__INT8_FMTd__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL_DEPRECATED_MSG(_msg)', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL_DEPRECATED_MSG(<#_msg#>)', 'kind': 'M'}
{'menu': '__LDBL_MIN_EXP__', 'abbr': 'size_t', 'word': '__LDBL_MIN_EXP__', 'kind': 'M'}
{'menu': '__LDBL_MIN_10_EXP__', 'abbr': 'size_t', 'word': '__LDBL_MIN_10_EXP__', 'kind': 'M'}
{'menu': '__POINTER_WIDTH__', 'abbr': 'size_t', 'word': '__POINTER_WIDTH__', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL_WEAK_IMPORT', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL_WEAK_IMPORT', 'kind': 'M'}
{'menu': '__AVAILABILITY_INTERNAL_UNAVAILABLE', 'abbr': 'size_t', 'word': '__AVAILABILITY_INTERNAL_UNAVAILABLE', 'kind': 'M'}
{'menu': '__LDBL_MIN__', 'abbr': 'size_t', 'word': '__LDBL_MIN__', 'kind': 'M'}
{'menu': '__LDBL_MANT_DIG__', 'abbr': 'size_t', 'word': '__LDBL_MANT_DIG__', 'kind': 'M'}
{'menu': '__LDBL_MAX_10_EXP__', 'abbr': 'size_t', 'word': '__LDBL_MAX_10_EXP__', 'kind': 'M'}
{'menu': '__LDBL_MAX_EXP__', 'abbr': 'size_t', 'word': '__LDBL_MAX_EXP__', 'kind': 'M'}
{'menu': '__LDBL_MAX__', 'abbr': 'size_t', 'word': '__LDBL_MAX__', 'kind': 'M'}
{'menu': '__LDBL_DECIMAL_DIG__', 'abbr': 'size_t', 'word': '__LDBL_DECIMAL_DIG__', 'kind': 'M'}
{'menu': '__LDBL_EPSILON__', 'abbr': 'size_t', 'word': '__LDBL_EPSILON__', 'kind': 'M'}
{'menu': '__LDBL_HAS_INFINITY__', 'abbr': 'size_t', 'word': '__LDBL_HAS_INFINITY__', 'kind': 'M'}
{'menu': '__LDBL_HAS_QUIET_NAN__', 'abbr': 'size_t', 'word': '__LDBL_HAS_QUIET_NAN__', 'kind': 'M'}
{'menu': '__DBL_MIN__', 'abbr': 'size_t', 'word': '__DBL_MIN__', 'kind': 'M'}
{'menu': '__DBL_MIN_EXP__', 'abbr': 'size_t', 'word': '__DBL_MIN_EXP__', 'kind': 'M'}
{'menu': '__LDBL_DENORM_MIN__', 'abbr': 'size_t', 'word': '__LDBL_DENORM_MIN__', 'kind': 'M'}
{'menu': '__LDBL_HAS_DENORM__', 'abbr': 'size_t', 'word': '__LDBL_HAS_DENORM__', 'kind': 'M'}
{'menu': '__LDBL_DIG__', 'abbr': 'size_t', 'word': '__LDBL_DIG__', 'kind': 'M'}
{'menu': '__DBL_MAX_10_EXP__', 'abbr': 'size_t', 'word': '__DBL_MAX_10_EXP__', 'kind': 'M'}
{'menu': '__DBL_MAX_EXP__', 'abbr': 'size_t', 'word': '__DBL_MAX_EXP__', 'kind': 'M'}
{'menu': '__DBL_MAX__', 'abbr': 'size_t', 'word': '__DBL_MAX__', 'kind': 'M'}
{'menu': '__DBL_MIN_10_EXP__', 'abbr': 'size_t', 'word': '__DBL_MIN_10_EXP__', 'kind': 'M'}
{'menu': '__DBL_EPSILON__', 'abbr': 'size_t', 'word': '__DBL_EPSILON__', 'kind': 'M'}
{'menu': '__DBL_HAS_INFINITY__', 'abbr': 'size_t', 'word': '__DBL_HAS_INFINITY__', 'kind': 'M'}
{'menu': '__DBL_HAS_QUIET_NAN__', 'abbr': 'size_t', 'word': '__DBL_HAS_QUIET_NAN__', 'kind': 'M'}
{'menu': '__DBL_MANT_DIG__', 'abbr': 'size_t', 'word': '__DBL_MANT_DIG__', 'kind': 'M'}
{'menu': '__DBL_DENORM_MIN__', 'abbr': 'size_t', 'word': '__DBL_DENORM_MIN__', 'kind': 'M'}
{'menu': '__DBL_HAS_DENORM__', 'abbr': 'size_t', 'word': '__DBL_HAS_DENORM__', 'kind': 'M'}
{'menu': '__DBL_DIG__', 'abbr': 'size_t', 'word': '__DBL_DIG__', 'kind': 'M'}
{'menu': '__DBL_DECIMAL_DIG__', 'abbr': 'size_t', 'word': '__DBL_DECIMAL_DIG__', 'kind': 'M'}
Filename: /Users/vova/projects/deoplete-clang/samples/main.cpp
Content: 
#include <iostream>
#include <vector>


class person
{
public:
    char* name;
    int age;
};

int main(int argc, char const* argv[])
{
    person p;
    p.
    return 0;
}

Length: 175
